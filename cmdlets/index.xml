<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cmdlets on PnP PowerShell</title>
    <link>https://pnp.github.io/powershell/cmdlets/</link>
    <description>Recent content in Cmdlets on PnP PowerShell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://pnp.github.io/powershell/cmdlets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpterm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpterm/</guid>
      <description>New-PnPTerm
#SYNOPSIS Creates a taxonomy term
#SYNTAX
New-PnPTerm -Name &amp;lt;String&amp;gt; [-Id &amp;lt;Guid&amp;gt;] [-Lcid &amp;lt;Int32&amp;gt;] [-TermSet] &amp;lt;TaxonomyTermSetPipeBind&amp;gt;-TermGroup &amp;lt;TaxonomyTermGroupPipeBind&amp;gt; [-Description &amp;lt;String&amp;gt;] [-CustomProperties &amp;lt;Hashtable&amp;gt;][-LocalCustomProperties &amp;lt;Hashtable&amp;gt;] [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;][&amp;lt;CommonParameters&amp;gt;]#DESCRIPTION This cmdlet adds a new taxonony term to a given termset.
#EXAMPLES
##Example 1
New-PnPTerm -TermSet &amp;#34;Departments&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34; -Name &amp;#34;Finance&amp;#34; Creates a new taxonomy term named &amp;ldquo;Finance&amp;rdquo; in the termset Departments which is located in the &amp;ldquo;Corporate&amp;rdquo; termgroup
##Example 2
New-PnPTerm -TermSet &amp;#34;Departments&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34; -Name &amp;#34;Finance&amp;#34; -CustomProperties @{&amp;#34;IsCorporate&amp;#34;=&amp;#34;True&amp;#34;} Creates a new taxonomy term named &amp;ldquo;Finance&amp;rdquo; in the termset Departments which is located in the &amp;ldquo;Corporate&amp;rdquo; termgroup and sets a custom property on the termset.</description>
    </item>
    
    <item>
      <title>Add-PnPAlert</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpalert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpalert/</guid>
      <description>SYNOPSIS Adds an alert for a user to a list
SYNTAX Add-PnPAlert [-List] &amp;lt;ListPipeBind&amp;gt; [-Title &amp;lt;String&amp;gt;] [-User &amp;lt;UserPipeBind&amp;gt;] [-DeliveryMethod &amp;lt;AlertDeliveryChannel&amp;gt;] [-ChangeType &amp;lt;AlertEventType&amp;gt;] [-Frequency &amp;lt;AlertFrequency&amp;gt;] [-Filter &amp;lt;AlertFilter&amp;gt;] [-Time &amp;lt;DateTime&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This cmdlets allows to add an alert for a user to a list.
EXAMPLES EXAMPLE 1 Add-PnPAlert -List &amp;#34;Demo List&amp;#34; Adds a new alert to the &amp;ldquo;Demo List&amp;rdquo; for the current user.
EXAMPLE 2 Add-PnPAlert -Title &amp;#34;Daily summary&amp;#34; -List &amp;#34;Demo List&amp;#34; -Frequency Daily -ChangeType All -Time (Get-Date -Hour 11 -Minute 00 -Second 00) Adds a daily alert for the current user at the given time to the &amp;ldquo;Demo List&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Add-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpapp/</guid>
      <description>SYNOPSIS Add/uploads an available app to the app catalog
SYNTAX Add only Add-PnPApp [-Path] &amp;lt;String&amp;gt; [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Overwrite] [-Timeout &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Add and Publish Add-PnPApp [-Path] &amp;lt;String&amp;gt; [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Publish] [-SkipFeatureDeployment] [-Overwrite] [-Timeout &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPApp -Path ./myapp.sppkg This will upload the specified app package to the app catalog
EXAMPLE 2 Add-PnPApp -Path ./myapp.sppkg -Publish This will upload the specified app package to the app catalog and deploy/trust it at the same time.</description>
    </item>
    
    <item>
      <title>Add-PnPApplicationCustomizer</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpapplicationcustomizer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpapplicationcustomizer/</guid>
      <description>SYNOPSIS Adds a SharePoint Framework client side extension application customizer
SYNTAX Add-PnPApplicationCustomizer [-Title &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Sequence &amp;lt;Int32&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] -ClientSideComponentId &amp;lt;Guid&amp;gt; [-ClientSideComponentProperties &amp;lt;String&amp;gt;] [-ClientSideHostProperties &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a SharePoint Framework client side extension application customizer by registering a user custom action to a web or sitecollection
EXAMPLES EXAMPLE 1 Add-PnPApplicationCustomizer -Title &amp;#34;CollabFooter&amp;#34; -ClientSideComponentId c0ab3b94-8609-40cf-861e-2a1759170b43 -ClientSideComponentProperties &amp;#34;{`&amp;#34;sourceTermSet`&amp;#34;:`&amp;#34;PnP-CollabFooter-SharedLinks`&amp;#34;,`&amp;#34;personalItemsStorageProperty`&amp;#34;:`&amp;#34;PnP-CollabFooter-MyLinks`&amp;#34;} Adds a new application customizer to the current web.</description>
    </item>
    
    <item>
      <title>Add-PnPClientSidePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidepage/</guid>
      <description>SYNOPSIS Adds a Client-Side Page
SYNTAX Add-PnPClientSidePage [-Name] &amp;lt;String&amp;gt; [-LayoutType &amp;lt;ClientSidePageLayoutType&amp;gt;] [-PromoteAs &amp;lt;ClientSidePagePromoteType&amp;gt;] [-ContentType &amp;lt;ContentTypePipeBind&amp;gt;] [-CommentsEnabled] [-Publish] [-HeaderLayoutType &amp;lt;ClientSidePageHeaderLayoutType&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPClientSidePage -Name &amp;#34;NewPage&amp;#34; Creates a new Client-Side page named &amp;lsquo;NewPage&amp;rsquo;
EXAMPLE 2 Add-PnPClientSidePage -Name &amp;#34;NewPage&amp;#34; -ContentType &amp;#34;MyPageContentType&amp;#34; Creates a new Client-Side page named &amp;lsquo;NewPage&amp;rsquo; and sets the content type to the content type specified
EXAMPLE 3 Add-PnPClientSidePage -Name &amp;#34;NewPageTemplate&amp;#34; -PromoteAs Template Creates a new Client-Side page named &amp;lsquo;NewPage&amp;rsquo; and saves as a template to the site.</description>
    </item>
    
    <item>
      <title>Add-PnPClientSidePageSection</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidepagesection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidepagesection/</guid>
      <description>SYNOPSIS Adds a new section to a Client-Side page
SYNTAX Add-PnPClientSidePageSection [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -SectionTemplate &amp;lt;CanvasSectionTemplate&amp;gt; [-Order &amp;lt;Int32&amp;gt;] [-ZoneEmphasis &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPClientSidePageSection -Page &amp;#34;MyPage&amp;#34; -SectionTemplate OneColumn Adds a new one-column section to the Client-Side page &amp;lsquo;MyPage&amp;rsquo;
EXAMPLE 2 Add-PnPClientSidePageSection -Page &amp;#34;MyPage&amp;#34; -SectionTemplate ThreeColumn -Order 10 Adds a new Three columns section to the Client-Side page &amp;lsquo;MyPage&amp;rsquo; with an order index of 10
EXAMPLE 3 $page = Add-PnPClientSidePage -Name &amp;#34;MyPage&amp;#34; PS&amp;gt; Add-PnPClientSidePageSection -Page $page -SectionTemplate OneColumn Adds a new one column section to the Client-Side page &amp;lsquo;MyPage&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Add-PnPClientSideText</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidetext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidetext/</guid>
      <description>SYNOPSIS Adds a text element to a client-side page.
SYNTAX Default Add-PnPClientSideText [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -Text &amp;lt;String&amp;gt; [-Order &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Positioned Add-PnPClientSideText [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -Text &amp;lt;String&amp;gt; [-Order &amp;lt;Int32&amp;gt;] -Section &amp;lt;Int32&amp;gt; -Column &amp;lt;Int32&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a new text element to a section on a client-side page.
EXAMPLES EXAMPLE 1 Add-PnPClientSideText -Page &amp;#34;MyPage&amp;#34; -Text &amp;#34;Hello World!&amp;#34; Adds the text &amp;lsquo;Hello World!&amp;rsquo; to the Client-Side Page &amp;lsquo;MyPage&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Add-PnPClientSideWebPart</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidewebpart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpclientsidewebpart/</guid>
      <description>SYNOPSIS Adds a Client-Side Web Part to a client-side page
SYNTAX Default with built-in web part Add-PnPClientSideWebPart [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -DefaultWebPartType &amp;lt;DefaultClientSideWebParts&amp;gt; [-WebPartProperties &amp;lt;PropertyBagPipeBind&amp;gt;] [-Order &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Default with 3rd party web part Add-PnPClientSideWebPart [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -Component &amp;lt;ClientSideComponentPipeBind&amp;gt; [-WebPartProperties &amp;lt;PropertyBagPipeBind&amp;gt;] [-Order &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Positioned with built-in web part Add-PnPClientSideWebPart [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -DefaultWebPartType &amp;lt;DefaultClientSideWebParts&amp;gt; [-WebPartProperties &amp;lt;PropertyBagPipeBind&amp;gt;] [-Order &amp;lt;Int32&amp;gt;] -Section &amp;lt;Int32&amp;gt; -Column &amp;lt;Int32&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Positioned with 3rd party web part Add-PnPClientSideWebPart [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -Component &amp;lt;ClientSideComponentPipeBind&amp;gt; [-WebPartProperties &amp;lt;PropertyBagPipeBind&amp;gt;] [-Order &amp;lt;Int32&amp;gt;] -Section &amp;lt;Int32&amp;gt; -Column &amp;lt;Int32&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a client-side web part to an existing client-side page.</description>
    </item>
    
    <item>
      <title>Add-PnPContentType</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpcontenttype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpcontenttype/</guid>
      <description>SYNOPSIS Adds a new content type
SYNTAX Add-PnPContentType -Name &amp;lt;String&amp;gt; [-ContentTypeId &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Group &amp;lt;String&amp;gt;] [-ParentContentType &amp;lt;ContentType&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPContentType -Name &amp;#34;Project Document&amp;#34; -Description &amp;#34;Use for Contoso projects&amp;#34; -Group &amp;#34;Contoso Content Types&amp;#34; -ParentContentType $ct This will add a new content type based on the parent content type stored in the $ct variable.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPContentTypeToDocumentSet</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpcontenttypetodocumentset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpcontenttypetodocumentset/</guid>
      <description>SYNOPSIS Adds a content type to a document set
SYNTAX Add-PnPContentTypeToDocumentSet -ContentType &amp;lt;ContentTypePipeBind[]&amp;gt; -DocumentSet &amp;lt;DocumentSetPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPContentTypeToDocumentSet -ContentType &amp;#34;Test CT&amp;#34; -DocumentSet &amp;#34;Test Document Set&amp;#34; This will add the content type called &amp;lsquo;Test CT&amp;rsquo; to the document set called &amp;lsquo;&amp;lsquo;Test Document Set&amp;rsquo;
EXAMPLE 2 $docset = Get-PnPDocumentSetTemplate -Identity &amp;#34;Test Document Set&amp;#34; $ct = Get-PnPContentType -Identity &amp;#34;Test CT&amp;#34; Add-PnPContentTypeToDocumentSet -ContentType $ct -DocumentSet $docset This will add the content type called &amp;lsquo;Test CT&amp;rsquo; to the document set called &amp;lsquo;&amp;lsquo;Test Document Set&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Add-PnPContentTypeToList</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpcontenttypetolist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpcontenttypetolist/</guid>
      <description>SYNOPSIS Adds a new content type to a list
SYNTAX Add-PnPContentTypeToList -List &amp;lt;ListPipeBind&amp;gt; -ContentType &amp;lt;ContentTypePipeBind&amp;gt; [-DefaultContentType] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPContentTypeToList -List &amp;#34;Documents&amp;#34; -ContentType &amp;#34;Project Document&amp;#34; -DefaultContentType This will add an existing content type to a list and sets it as the default content type
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPCustomAction</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpcustomaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpcustomaction/</guid>
      <description>SYNOPSIS Adds a custom action
SYNTAX Default Add-PnPCustomAction -Name &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; -Description &amp;lt;String&amp;gt; -Group &amp;lt;String&amp;gt; -Location &amp;lt;String&amp;gt; [-Sequence &amp;lt;Int32&amp;gt;] [-Url &amp;lt;String&amp;gt;] [-ImageUrl &amp;lt;String&amp;gt;] [-CommandUIExtension &amp;lt;String&amp;gt;] [-RegistrationId &amp;lt;String&amp;gt;] [-Rights &amp;lt;PermissionKind[]&amp;gt;] [-RegistrationType &amp;lt;UserCustomActionRegistrationType&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Client Side Component Id Add-PnPCustomAction -Name &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; -Location &amp;lt;String&amp;gt; [-Sequence &amp;lt;Int32&amp;gt;] [-RegistrationId &amp;lt;String&amp;gt;] [-RegistrationType &amp;lt;UserCustomActionRegistrationType&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] -ClientSideComponentId &amp;lt;Guid&amp;gt; [-ClientSideComponentProperties &amp;lt;String&amp;gt;] [-ClientSideHostProperties &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a user custom action to a web or sitecollection.</description>
    </item>
    
    <item>
      <title>Add-PnPDataRowsToSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpdatarowstoprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpdatarowstoprovisioningtemplate/</guid>
      <description>SYNOPSIS Adds datarows to a list inside a PnP Provisioning Template
SYNTAX Add-PnPDataRowsToSiteTemplate [-Path] &amp;lt;String&amp;gt; -List &amp;lt;ListPipeBind&amp;gt; [-Query &amp;lt;String&amp;gt;] [-Fields &amp;lt;String[]&amp;gt;] [-IncludeSecurity] [[-TemplateProviderExtensions] &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-TokenizeUrls] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPDataRowsToSiteTemplate -Path template.pnp -List &amp;#39;PnPTestList&amp;#39; -Query &amp;#39;&amp;lt;View&amp;gt;&amp;lt;/View&amp;gt;&amp;#39; -Fields &amp;#39;Title&amp;#39;,&amp;#39;Choice&amp;#39; Adds datarows from the provided list to the PnP Provisioning Template at the provided location
EXAMPLE 2 Add-PnPDataRowsToSiteTemplate -Path template.pnp -List &amp;#39;PnPTestList&amp;#39; -Query &amp;#39;&amp;lt;View&amp;gt;&amp;lt;/View&amp;gt;&amp;#39; -Fields &amp;#39;Title&amp;#39;,&amp;#39;Choice&amp;#39; -IncludeSecurity Adds datarows from the provided list to the PnP Provisioning Template at the provided location</description>
    </item>
    
    <item>
      <title>Add-PnPDocumentSet</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpdocumentset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpdocumentset/</guid>
      <description>SYNOPSIS Creates a new document set in a library.
SYNTAX Add-PnPDocumentSet -List &amp;lt;ListPipeBind&amp;gt; -Name &amp;lt;String&amp;gt; -ContentType &amp;lt;ContentTypePipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPDocumentSet -List &amp;#34;Documents&amp;#34; -ContentType &amp;#34;Test Document Set&amp;#34; -Name &amp;#34;Test&amp;#34; This will add a new document set based upon the &amp;lsquo;Test Document Set&amp;rsquo; content type to a list called &amp;lsquo;Documents&amp;rsquo;. The document set will be named &amp;lsquo;Test&amp;rsquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Add-PnPEventReceiver</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpeventreceiver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpeventreceiver/</guid>
      <description>SYNOPSIS Adds a new remote event receiver
SYNTAX Add-PnPEventReceiver [-List &amp;lt;ListPipeBind&amp;gt;] -Name &amp;lt;String&amp;gt; -Url &amp;lt;String&amp;gt; -EventReceiverType &amp;lt;EventReceiverType&amp;gt; -Synchronization &amp;lt;EventReceiverSynchronization&amp;gt; [-SequenceNumber &amp;lt;Int32&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPEventReceiver -List &amp;#34;ProjectList&amp;#34; -Name &amp;#34;TestEventReceiver&amp;#34; -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType ItemAdded -Synchronization Asynchronous This will add a new remote event receiver that is executed after an item has been added to the ProjectList list
EXAMPLE 2 Add-PnPEventReceiver -Name &amp;#34;TestEventReceiver&amp;#34; -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType WebAdding -Synchronization Synchronous This will add a new remote event receiver that is executed while a new subsite is being created</description>
    </item>
    
    <item>
      <title>Add-PnPField</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpfield/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpfield/</guid>
      <description>SYNOPSIS Add a field
SYNTAX Add field to list (Default) Add-PnPField [-List &amp;lt;ListPipeBind&amp;gt;] -DisplayName &amp;lt;String&amp;gt; -InternalName &amp;lt;String&amp;gt; -Type &amp;lt;FieldType&amp;gt; [-Id &amp;lt;Guid&amp;gt;] [-AddToDefaultView] [-Required] [-Group &amp;lt;String&amp;gt;] [-ClientSideComponentId &amp;lt;Guid&amp;gt;] [-ClientSideComponentProperties &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Add field reference to list Add-PnPField -List &amp;lt;ListPipeBind&amp;gt; -Field &amp;lt;FieldPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Add field to web Add-PnPField -DisplayName &amp;lt;String&amp;gt; -InternalName &amp;lt;String&amp;gt; -Type &amp;lt;FieldType&amp;gt; [-Id &amp;lt;Guid&amp;gt;] [-ClientSideComponentId &amp;lt;Guid&amp;gt;] [-ClientSideComponentProperties &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Add field by XML to list Add-PnPField [-AddToDefaultView] [-Required] [-Group &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a field (a column) to a list or as a site column.</description>
    </item>
    
    <item>
      <title>Add-PnPFieldFromXml</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpfieldfromxml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpfieldfromxml/</guid>
      <description>SYNOPSIS Adds a field to a list or as a site column based upon a CAML/XML field definition
SYNTAX Add-PnPFieldFromXml [-List &amp;lt;ListPipeBind&amp;gt;] [-FieldXml] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $xml = &amp;#39;&amp;lt;Field Type=&amp;#34;Text&amp;#34; Name=&amp;#34;PSCmdletTest&amp;#34; DisplayName=&amp;#34;PSCmdletTest&amp;#34; ID=&amp;#34;{27d81055-f208-41c9-a976-61c5473eed4a}&amp;#34; Group=&amp;#34;Test&amp;#34; Required=&amp;#34;FALSE&amp;#34; StaticName=&amp;#34;PSCmdletTest&amp;#34; /&amp;gt;&amp;#39; Add-PnPFieldFromXml -FieldXml $xml Adds a field with the specified field CAML code to the site.
EXAMPLE 2 $xml = &amp;#39;&amp;lt;Field Type=&amp;#34;Text&amp;#34; Name=&amp;#34;PSCmdletTest&amp;#34; DisplayName=&amp;#34;PSCmdletTest&amp;#34; ID=&amp;#34;{27d81055-f208-41c9-a976-61c5473eed4a}&amp;#34; Group=&amp;#34;Test&amp;#34; Required=&amp;#34;FALSE&amp;#34; StaticName=&amp;#34;PSCmdletTest&amp;#34; /&amp;gt;&amp;#39; Add-PnPFieldFromXml -List &amp;#34;Demo List&amp;#34; -FieldXml $xml Adds a field with the specified field CAML code to the list &amp;ldquo;Demo List&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Add-PnPFieldToContentType</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpfieldtocontenttype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpfieldtocontenttype/</guid>
      <description>SYNOPSIS Adds an existing site column to a content type
SYNTAX Add-PnPFieldToContentType -Field &amp;lt;FieldPipeBind&amp;gt; -ContentType &amp;lt;ContentTypePipeBind&amp;gt; [-Required] [-Hidden] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPFieldToContentType -Field &amp;#34;Project_Name&amp;#34; -ContentType &amp;#34;Project Document&amp;#34; This will add an existing site column with an internal name of &amp;ldquo;Project_Name&amp;rdquo; to a content type called &amp;ldquo;Project Document&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPFile</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpfile/</guid>
      <description>SYNOPSIS Uploads a file to Web
SYNTAX Upload file Add-PnPFile -Path &amp;lt;String&amp;gt; -Folder &amp;lt;String&amp;gt; [-NewFileName &amp;lt;String&amp;gt;] [-Checkout] [-CheckInComment &amp;lt;String&amp;gt;] [-Approve] [-ApproveComment &amp;lt;String&amp;gt;] [-Publish] [-PublishComment &amp;lt;String&amp;gt;] [-UseWebDav] [-Values &amp;lt;Hashtable&amp;gt;] [-ContentType &amp;lt;ContentTypePipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Upload file from stream Add-PnPFile -Folder &amp;lt;String&amp;gt; -FileName &amp;lt;String&amp;gt; -Stream &amp;lt;Stream&amp;gt; [-Checkout] [-CheckInComment &amp;lt;String&amp;gt;] [-Approve] [-ApproveComment &amp;lt;String&amp;gt;] [-Publish] [-PublishComment &amp;lt;String&amp;gt;] [-UseWebDav] [-Values &amp;lt;Hashtable&amp;gt;] [-ContentType &amp;lt;ContentTypePipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPFile -Path c:\temp\company.</description>
    </item>
    
    <item>
      <title>Add-PnPFileToSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpfiletoprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpfiletoprovisioningtemplate/</guid>
      <description>SYNOPSIS Adds a file to a PnP Provisioning Template
SYNTAX Local File Add-PnPFileToSiteTemplate [-Path] &amp;lt;String&amp;gt; [-Source] &amp;lt;String&amp;gt; [-Folder] &amp;lt;String&amp;gt; [[-Container] &amp;lt;String&amp;gt;] [[-FileLevel] &amp;lt;FileLevel&amp;gt;] [-FileOverwrite] [[-TemplateProviderExtensions] &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Remove File Add-PnPFileToSiteTemplate [-Path] &amp;lt;String&amp;gt; [-SourceUrl] &amp;lt;String&amp;gt; [[-Container] &amp;lt;String&amp;gt;] [[-FileLevel] &amp;lt;FileLevel&amp;gt;] [-FileOverwrite] [[-TemplateProviderExtensions] &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPFileToSiteTemplate -Path template.pnp -Source $sourceFilePath -Folder $targetFolder Adds a file to a PnP Site Template
EXAMPLE 2 Add-PnPFileToSiteTemplate -Path template.</description>
    </item>
    
    <item>
      <title>Add-PnPFolder</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpfolder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpfolder/</guid>
      <description>SYNOPSIS Creates a folder within a parent folder
SYNTAX Add-PnPFolder -Name &amp;lt;String&amp;gt; -Folder &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPFolder -Name NewFolder -Folder _catalogs/masterpage This will create the folder NewFolder in the masterpage catalog
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The parent folder in the site</description>
    </item>
    
    <item>
      <title>Add-PnPHtmlPublishingPageLayout</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnphtmlpublishingpagelayout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnphtmlpublishingpagelayout/</guid>
      <description>SYNOPSIS Adds a HTML based publishing page layout
SYNTAX Add-PnPHtmlPublishingPageLayout -SourceFilePath &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; -Description &amp;lt;String&amp;gt; -AssociatedContentTypeID &amp;lt;String&amp;gt; [-DestinationFolderHierarchy &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPHtmlPublishingPageLayout -Title &amp;#39;Our custom page layout&amp;#39; -SourceFilePath &amp;#39;customlayout.aspx&amp;#39; -Description &amp;#39;A custom page layout&amp;#39; -AssociatedContentTypeID 0x01010901 Uploads the pagelayout &amp;lsquo;customlayout.aspx&amp;rsquo; from the current location to the current site as a &amp;lsquo;web part page&amp;rsquo; pagelayout
PARAMETERS -AssociatedContentTypeID Associated content type ID
Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Add-PnPHubSiteAssociation</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnphubsiteassociation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnphubsiteassociation/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Connects a site to a hubsite.
SYNTAX Add-PnPHubSiteAssociation -Site &amp;lt;SitePipeBind&amp;gt; -HubSite &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Connects an existing site to a hubsite
EXAMPLES EXAMPLE 1 Add-PnPHubSiteAssociation -Site &amp;#34;https://tenant.sharepoint.com/sites/mysite&amp;#34; -HubSite &amp;#34;https://tenant.sharepoint.com/sites/hubsite&amp;#34; This example adds the specified site to the hubsite.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPHubToHubAssociation</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnphubtohubassociation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnphubtohubassociation/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Associates a hub site to a hub site.
SYNTAX By Id Add-PnPHubToHubAssociation -Source &amp;lt;Guid&amp;gt; -Target &amp;lt;Guid&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] By Url Add-PnPHubToHubAssociation -SourceUrl &amp;lt;string&amp;gt; -TargetUrl &amp;lt;string&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] DESCRIPTION Use this cmdlet to associate a hub site to a hub site.
EXAMPLES EXAMPLE 1 Add-PnPHubToHubAssociation -Source 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 -Target 0b70f9de-2b98-46e9-862f-ba5700aa2443 This example associates the source hub site with the HubSiteId 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 with the target hub site with the HubSiteId 0b70f9de-2b98-46e9-862f-ba5700aa2443.</description>
    </item>
    
    <item>
      <title>Add-PnPIndexedProperty</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpindexedproperty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpindexedproperty/</guid>
      <description>SYNOPSIS Marks the value of the propertybag key specified to be indexed by search.
SYNTAX Add-PnPIndexedProperty [-Key] &amp;lt;String&amp;gt; [-List &amp;lt;ListPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be indexed</description>
    </item>
    
    <item>
      <title>Add-PnPJavaScriptBlock</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpjavascriptblock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpjavascriptblock/</guid>
      <description>SYNOPSIS Adds a link to a JavaScript snippet/block to a web or site collection
SYNTAX Add-PnPJavaScriptBlock -Name &amp;lt;String&amp;gt; -Script &amp;lt;String&amp;gt; [-Sequence &amp;lt;Int32&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Specify a scope as &amp;lsquo;Site&amp;rsquo; to add the custom action to all sites in a site collection.
EXAMPLES EXAMPLE 1 Add-PnPJavaScriptBlock -Name myAction -script &amp;#39;&amp;lt;script&amp;gt;Alert(&amp;#34;This is my Script block&amp;#34;);&amp;lt;/script&amp;gt;&amp;#39; -Sequence 9999 -Scope Site Add a JavaScript code block to all pages within the current site collection under the name myAction and at order 9999</description>
    </item>
    
    <item>
      <title>Add-PnPJavaScriptLink</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpjavascriptlink/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpjavascriptlink/</guid>
      <description>SYNOPSIS Adds a link to a JavaScript file to a web or sitecollection, valid only for SharePoint classic site experience.
SYNTAX Add-PnPJavaScriptLink -Name &amp;lt;String&amp;gt; -Url &amp;lt;String[]&amp;gt; [-Sequence &amp;lt;Int32&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Creates a custom action that refers to a JavaScript file
EXAMPLES EXAMPLE 1 Add-PnPJavaScriptLink -Name jQuery -Url https://code.jquery.com/jquery.min.js -Sequence 9999 -Scope Site Injects a reference to the latest v1 series jQuery library to all pages within the current site collection under the name jQuery and at order 9999</description>
    </item>
    
    <item>
      <title>Add-PnPListFoldersToSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnplistfolderstoprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnplistfolderstoprovisioningtemplate/</guid>
      <description>SYNOPSIS Adds folders to a list in a PnP Provisioning Template
SYNTAX Add-PnPListFoldersToSiteTemplate [-Path] &amp;lt;String&amp;gt; [-List] &amp;lt;ListPipeBind&amp;gt; [-Recursive] [-IncludeSecurity] [[-TemplateProviderExtensions] &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List &amp;#39;PnPTestList&amp;#39; Adds top level folders from a list to an existing template and returns an in-memory PnP Site Template
EXAMPLE 2 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List &amp;#39;PnPTestList&amp;#39; -Recursive Adds all folders from a list to an existing template and returns an in-memory PnP Site Template</description>
    </item>
    
    <item>
      <title>Add-PnPListItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnplistitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnplistitem/</guid>
      <description>SYNOPSIS Adds an item to the list and sets the creation time to the current date and time. The author is set to the current authenticated user executing the cmdlet. In order to set the author to a different user, please refer to Set-PnPListItem.
SYNTAX Add-PnPListItem [-List] &amp;lt;ListPipeBind&amp;gt; [-ContentType &amp;lt;ContentTypePipeBind&amp;gt;] [-Values &amp;lt;Hashtable&amp;gt;] [-Folder &amp;lt;String&amp;gt;] [-Label &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPListItem -List &amp;#34;Demo List&amp;#34; -Values @{&amp;#34;Title&amp;#34; = &amp;#34;Test Title&amp;#34;; &amp;#34;Category&amp;#34;=&amp;#34;Test Category&amp;#34;} Adds a new list item to the &amp;ldquo;Demo List&amp;rdquo;, and sets both the Title and Category fields with the specified values.</description>
    </item>
    
    <item>
      <title>Add-PnPMasterPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpmasterpage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpmasterpage/</guid>
      <description>SYNOPSIS Adds a Masterpage
SYNTAX Add-PnPMasterPage -SourceFilePath &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; -Description &amp;lt;String&amp;gt; [-DestinationFolderHierarchy &amp;lt;String&amp;gt;] [-UIVersion &amp;lt;String&amp;gt;] [-DefaultCssFile &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPMasterPage -SourceFilePath &amp;#34;page.master&amp;#34; -Title &amp;#34;MasterPage&amp;#34; -Description &amp;#34;MasterPage for Web&amp;#34; -DestinationFolderHierarchy &amp;#34;SubFolder&amp;#34; Adds a MasterPage from the local file &amp;ldquo;page.master&amp;rdquo; to the folder &amp;ldquo;SubFolder&amp;rdquo; in the Masterpage gallery.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPMicrosoft365GroupMember</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpmicrosoft365groupmember/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpmicrosoft365groupmember/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All  Adds members to a particular Microsoft 365 Group
SYNTAX Add-PnPMicrosoft365GroupMember -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; -Users &amp;lt;String[]&amp;gt; [-RemoveExisting] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPMicrosoft365GroupMember -Identity &amp;#34;Project Team&amp;#34; -Users &amp;#34;john@contoso.onmicrosoft.com&amp;#34;,&amp;#34;jane@contoso.onmicrosoft.com&amp;#34; Adds the provided two users as additional members to the Microsoft 365 Group named &amp;ldquo;Project Team&amp;rdquo;
EXAMPLE 2 Add-PnPMicrosoft365GroupMember -Identity &amp;#34;Project Team&amp;#34; -Users &amp;#34;john@contoso.onmicrosoft.com&amp;#34;,&amp;#34;jane@contoso.onmicrosoft.com&amp;#34; -RemoveExisting Sets the provided two users as the only members of the Microsoft 365 Group named &amp;ldquo;Project Team&amp;rdquo; by removing any current existing members first</description>
    </item>
    
    <item>
      <title>Add-PnPMicrosoft365GroupToSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpmicrosoft365grouptosite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpmicrosoft365grouptosite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Groupifies a classic team site by creating a Microsoft 365 group for it and connecting the site with the newly created group
SYNTAX Add-PnPMicrosoft365GroupToSite -Url &amp;lt;String&amp;gt; -Alias &amp;lt;String&amp;gt; [-Description &amp;lt;String&amp;gt;] -DisplayName &amp;lt;String&amp;gt; [-Classification &amp;lt;String&amp;gt;] [-IsPublic] [-KeepOldHomePage] [-HubSiteId &amp;lt;Guid&amp;gt;] [-Owners &amp;lt;String[]&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows you to add a Microsoft 365 Unified group to an existing classic site collection, also known as groupifying.</description>
    </item>
    
    <item>
      <title>Add-PnPNavigationNode</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpnavigationnode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpnavigationnode/</guid>
      <description>SYNOPSIS Adds an item to a navigation element
SYNTAX Add-PnPNavigationNode -Location &amp;lt;NavigationType&amp;gt; -Title &amp;lt;String&amp;gt; [-Url &amp;lt;String&amp;gt;] [-Parent &amp;lt;Int32&amp;gt;] [-First] [-External] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a menu item to either the quicklaunch, top navigation, search navigation or the footer
EXAMPLES EXAMPLE 1 Add-PnPNavigationNode -Title &amp;#34;Contoso&amp;#34; -Url &amp;#34;http://contoso.sharepoint.com/sites/contoso/&amp;#34; -Location &amp;#34;QuickLaunch&amp;#34; Adds a navigation node to the quicklaunch. The navigation node will have the title &amp;ldquo;Contoso&amp;rdquo; and will link to the url &amp;ldquo;http://contoso.</description>
    </item>
    
    <item>
      <title>Add-PnPOrgAssetsLibrary</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnporgassetslibrary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnporgassetslibrary/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Adds a given document library as a organizational asset source
SYNTAX Add-PnPOrgAssetsLibrary -LibraryUrl &amp;lt;String&amp;gt; [-ThumbnailUrl &amp;lt;String&amp;gt;] [-CdnType &amp;lt;SPOTenantCdnType&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a given document library as an organizational asset source in your Sharepoint Online Tenant. All organizational asset sources you add must reside in the same site collection. Document libraries specified as organizational asset must be enabled as an Office 365 CDN source, either as private or public.</description>
    </item>
    
    <item>
      <title>Add-PnPOrgNewsSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnporgnewssite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnporgnewssite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Adds the site as an organization news source in your tenant
SYNTAX Add-PnPOrgNewsSite -OrgNewsSiteUrl &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPOrgNewsSite -OrgNewsSiteUrl &amp;#34;https://yourtenant.sharepoint.com/sites/news&amp;#34; Adds the site as one of multiple possible tenant&amp;rsquo;s organizational news sites
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPPublishingImageRendition</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnppublishingimagerendition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnppublishingimagerendition/</guid>
      <description>SYNOPSIS Adds an Image Rendition if the Name of the Image Rendition does not already exist. This prevents creating two Image Renditions that share the same name.
SYNTAX Add-PnPPublishingImageRendition -Name &amp;lt;String&amp;gt; -Width &amp;lt;Int32&amp;gt; -Height &amp;lt;Int32&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPPublishingImageRendition -Name &amp;#34;MyImageRendition&amp;#34; -Width 800 -Height 600 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPPublishingPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnppublishingpage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnppublishingpage/</guid>
      <description>SYNOPSIS Adds a publishing page
SYNTAX Add-PnPPublishingPage -PageName &amp;lt;String&amp;gt; [-FolderPath &amp;lt;String&amp;gt;] -PageTemplateName &amp;lt;String&amp;gt; [-Title &amp;lt;String&amp;gt;] [-Publish] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPPublishingPage -PageName &amp;#39;OurNewPage&amp;#39; -Title &amp;#39;Our new page&amp;#39; -PageTemplateName &amp;#39;ArticleLeft&amp;#39; Creates a new page based on the pagelayout &amp;lsquo;ArticleLeft&amp;rsquo;
EXAMPLE 2 Add-PnPPublishingPage -PageName &amp;#39;OurNewPage&amp;#39; -Title &amp;#39;Our new page&amp;#39; -PageTemplateName &amp;#39;ArticleLeft&amp;#39; -Folder &amp;#39;/Pages/folder&amp;#39; Creates a new page based on the pagelayout &amp;lsquo;ArticleLeft&amp;rsquo; with a site relative folder path</description>
    </item>
    
    <item>
      <title>Add-PnPPublishingPageLayout</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnppublishingpagelayout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnppublishingpagelayout/</guid>
      <description>SYNOPSIS Adds a publishing page layout
SYNTAX Add-PnPPublishingPageLayout -SourceFilePath &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; -Description &amp;lt;String&amp;gt; -AssociatedContentTypeID &amp;lt;String&amp;gt; [-DestinationFolderHierarchy &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPPublishingPageLayout -Title &amp;#39;Our custom page layout&amp;#39; -SourceFilePath &amp;#39;customlayout.aspx&amp;#39; -Description &amp;#39;A custom page layout&amp;#39; -AssociatedContentTypeID 0x01010901 Uploads the pagelayout &amp;lsquo;customlayout.aspx&amp;rsquo; to the current site as a &amp;lsquo;web part page&amp;rsquo; pagelayout
PARAMETERS -AssociatedContentTypeID Associated content type ID
Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Add-PnPRoleDefinition</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnproledefinition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnproledefinition/</guid>
      <description>SYNOPSIS Adds a Role Defintion (Permission Level) to the site collection in the current context
SYNTAX Add-PnPRoleDefinition -RoleName &amp;lt;String&amp;gt; [-Clone &amp;lt;RoleDefinitionPipeBind&amp;gt;] [-Include &amp;lt;PermissionKind[]&amp;gt;] [-Exclude &amp;lt;PermissionKind[]&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows adding a custom Role Defintion (Permission Level) to the site collection in the current context. It does not replace or remove existing Role Definitions.
EXAMPLES EXAMPLE 1 Add-PnPRoleDefinition -RoleName &amp;#34;CustomPerm&amp;#34; Creates additional permission level with no permission flags enabled.</description>
    </item>
    
    <item>
      <title>Add-PnPSiteClassification</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpsiteclassification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpsiteclassification/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Directory.ReadWrite.All  Adds one ore more site classification values to the list of possible values
SYNTAX Add-PnPSiteClassification -Classifications &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteClassification -Classifications &amp;#34;Top Secret&amp;#34; Adds the &amp;ldquo;Top Secret&amp;rdquo; classification to the already existing classification values.
EXAMPLE 2 Add-PnPSiteClassification -Classifications &amp;#34;Top Secret&amp;#34;,&amp;#34;HBI&amp;#34; Adds the &amp;ldquo;Top Secret&amp;rdquo; and the &amp;ldquo;For Your Eyes Only&amp;rdquo; classification to the already existing classification values.</description>
    </item>
    
    <item>
      <title>Add-PnPSiteCollectionAdmin</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpsitecollectionadmin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpsitecollectionadmin/</guid>
      <description>SYNOPSIS Adds one or more users as site collection administrators to the site collection in the current context
SYNTAX Add-PnPSiteCollectionAdmin -Owners &amp;lt;System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows adding one to many users as site collection administrators to the site collection in the current context. It does not replace or remove existing site collection administrators.
EXAMPLES EXAMPLE 1 Add-PnPSiteCollectionAdmin -Owners &amp;#34;user@contoso.onmicrosoft.com&amp;#34; This will add user@contoso.onmicrosoft.com as an additional site collection owner to the site collection in the current context</description>
    </item>
    
    <item>
      <title>Add-PnPSiteCollectionAppCatalog</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpsitecollectionappcatalog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpsitecollectionappcatalog/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Adds a Site Collection scoped App Catalog to a site
SYNTAX Add-PnPSiteCollectionAppCatalog -Site &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteCollectionAppCatalog -Site &amp;#34;https://contoso.sharepoint.com/sites/FinanceTeamsite&amp;#34; This will add a SiteCollection app catalog to the specified site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPSiteDesign</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpsitedesign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpsitedesign/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Creates a new Site Design on the current tenant.
SYNTAX Add-PnPSiteDesign -Title &amp;lt;String&amp;gt; -SiteScriptIds &amp;lt;Guid[]&amp;gt; [-Description &amp;lt;String&amp;gt;] [-IsDefault] [-PreviewImageAltText &amp;lt;String&amp;gt;] [-PreviewImageUrl &amp;lt;String&amp;gt;] -WebTemplate &amp;lt;SiteWebTemplate&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteDesign -Title &amp;#34;My Company Design&amp;#34; -SiteScriptIds &amp;#34;e84dcb46-3ab9-4456-a136-66fc6ae3d3c5&amp;#34;,&amp;#34;6def687f-0e08-4f1e-999c-791f3af9a600&amp;#34; -Description &amp;#34;My description&amp;#34; -WebTemplate TeamSite Adds a new Site Design, with the specified title and description. When applied it will run the scripts as referenced by the IDs.</description>
    </item>
    
    <item>
      <title>Add-PnPSiteDesignTask</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpsitedesigntask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpsitedesigntask/</guid>
      <description>SYNOPSIS This command is used to apply a published site design to a specified site collection target. It schedules the operation, allowing for the application of larger site scripts (Invoke-PnPSiteDesign is limited to 30 actions and subactions). This command is intended to replace Invoke-PnPSiteDesign and is useful when you need to apply a large number of actions or multiple site scripts.
SYNTAX Add-PnPSiteDesignTask -SiteDesignId &amp;lt;Guid&amp;gt; [-WebUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteDesignTask -SiteDesignId 501z8c32-4147-44d4-8607-26c2f67cae82 This example applies a site design the currently connected to site.</description>
    </item>
    
    <item>
      <title>Add-PnPSiteScript</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpsitescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpsitescript/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Creates a new Site Script on the current tenant.
SYNTAX Add-PnPSiteScript -Title &amp;lt;String&amp;gt; [-Description &amp;lt;String&amp;gt;] -Content &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteScript -Title &amp;#34;My Site Script&amp;#34; -Description &amp;#34;A more detailed description&amp;#34; -Content $script Adds a new Site Script, where $script variable contains the script.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>Add-PnPSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpsitetemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpsitetemplate/</guid>
      <description>SYNOPSIS Adds a PnP Site Template object to a tenant template
SYNTAX Add-PnPSiteTemplate -SiteTemplate &amp;lt;SiteTemplate&amp;gt; -TenantTemplate &amp;lt;ProvisioningHierarchy&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnpSiteTemplate -TenantTemplate $tenanttemplate -SiteTemplate $sitetemplate Adds an existing site template to an existing tenant template object
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteTemplate The template to add to the tenant template</description>
    </item>
    
    <item>
      <title>Add-PnPStoredCredential</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpstoredcredential/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpstoredcredential/</guid>
      <description>SYNOPSIS Adds a credential to the Windows Credential Manager
SYNTAX Add-PnPStoredCredential -Name &amp;lt;String&amp;gt; -Username &amp;lt;String&amp;gt; [-Password &amp;lt;SecureString&amp;gt;] [-Overwrite] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds an entry to the Windows Credential Manager. If you add an entry in the form of the URL of your tenant/server PnP PowerShell will check if that entry is available when you connect using Connect-PnPOnline. If it finds a matching URL it will use the associated credentials.
If you add a Credential with a name of &amp;ldquo;https://yourtenant.</description>
    </item>
    
    <item>
      <title>Add-PnPTaxonomyField</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnptaxonomyfield/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnptaxonomyfield/</guid>
      <description>SYNOPSIS Add a taxonomy field
SYNTAX Path Add-PnPTaxonomyField [-List &amp;lt;ListPipeBind&amp;gt;] -DisplayName &amp;lt;String&amp;gt; -InternalName &amp;lt;String&amp;gt; -TermSetPath &amp;lt;String&amp;gt; [-TermPathDelimiter &amp;lt;String&amp;gt;] [-Group &amp;lt;String&amp;gt;] [-Id &amp;lt;Guid&amp;gt;] [-AddToDefaultView] [-MultiValue] [-Required] [-FieldOptions &amp;lt;AddFieldOptions&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Id Add-PnPTaxonomyField [-List &amp;lt;ListPipeBind&amp;gt;] -DisplayName &amp;lt;String&amp;gt; -InternalName &amp;lt;String&amp;gt; [-TaxonomyItemId &amp;lt;Guid&amp;gt;] [-Group &amp;lt;String&amp;gt;] [-Id &amp;lt;Guid&amp;gt;] [-AddToDefaultView] [-MultiValue] [-Required] [-FieldOptions &amp;lt;AddFieldOptions&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds a taxonomy/managed metadata field to a list or as a site column.</description>
    </item>
    
    <item>
      <title>Add-PnPTeamsChannel</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpteamschannel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpteamschannel/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Adds a channel to an existing Microsoft Teams instance.
SYNTAX Public channel Add-PnPTeamsChannel -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -DisplayName &amp;lt;String&amp;gt; [-Description &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] Private channel Add-PnPTeamsChannel -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -DisplayName &amp;lt;String&amp;gt; [-Description &amp;lt;String&amp;gt;] [-Private] -OwnerUPN &amp;lt;String&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTeamsChannel -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -DisplayName &amp;#34;My Channel&amp;#34; Adds a new channel to the specified Teams instance
EXAMPLE 2 Add-PnPTeamsChannel -Team MyTeam -DisplayName &amp;#34;My Channel&amp;#34; Adds a new channel to the specified Teams instance</description>
    </item>
    
    <item>
      <title>Add-PnPTeamsTab</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpteamstab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpteamstab/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Adds a tab to an existing Channel
SYNTAX Add-PnPTeamsTab -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Channel &amp;lt;TeamsChannelPipeBind&amp;gt; -DisplayName &amp;lt;String&amp;gt; -Type &amp;lt;TeamTabType&amp;gt; [-ByPassPermissionCheck] -ContentUrl &amp;lt;String&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTeamsTab -Team &amp;#34;My Team&amp;#34; -Channel &amp;#34;My Channel&amp;#34; -DisplayName &amp;#34;My Channel&amp;#34; -Type WebSite -ContentUrl &amp;#34;https://aka.ms/m365pnp Adds a web site tab to the specified channel.
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Add-PnPTeamsTeam</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpteamsteam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpteamsteam/</guid>
      <description>SYNOPSIS Adds a Teams team to an existing, group connected, site collection
SYNTAX Add-PnPTeamsTeam [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows you to add a Teams team to an existing, Microsoft 365 group connected, site collection.
EXAMPLES EXAMPLE 1 Add-PnPTeamsTeam This create a teams team for the connected site collection
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Add-PnPTeamsUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpteamsuser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpteamsuser/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Adds a channel to an existing Microsoft Teams instance.
SYNTAX Add-PnPTeamsUser -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -User &amp;lt;String&amp;gt; -Role &amp;lt;String&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Owner Adds a user as an owner to the team
EXAMPLE 2 Add-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Member Adds a user as a member to the team
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Add-PnPTenantCdnOrigin</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnptenantcdnorigin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnptenantcdnorigin/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Adds a new origin to the public or private content delivery network (CDN).
SYNTAX Add-PnPTenantCdnOrigin -OriginUrl &amp;lt;String&amp;gt; -CdnType &amp;lt;SPOTenantCdnType&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Add a new origin to the public or private CDN, on either Tenant level or on a single Site level. Effectively, a tenant admin points out to a document library, or a folder in the document library and requests that content in that library should be retrievable by using a CDN.</description>
    </item>
    
    <item>
      <title>Add-PnPTenantSequence</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnptenantsequence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnptenantsequence/</guid>
      <description>SYNOPSIS Adds a tenant sequence object to a tenant template
SYNTAX Add-PnPTenantSequence -Template &amp;lt;ProvisioningHierarchy&amp;gt; -Sequence &amp;lt;ProvisioningSequence&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTenantSequence -Template $mytemplate -Sequence $mysequence Adds an existing sequence object to an existing template object
EXAMPLE 2 New-PnPTenantSequence -Id &amp;#34;MySequence&amp;#34; | Add-PnPTenantSequence -Template $template Creates a new instance of a provisioning sequence object and sets the Id to the value specified, then the sequence is added to an existing template object</description>
    </item>
    
    <item>
      <title>Add-PnPTenantSequenceSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnptenantsequencesite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnptenantsequencesite/</guid>
      <description>SYNOPSIS Adds a existing tenant sequence site object to a tenant template
SYNTAX Add-PnPTenantSequenceSite -Site &amp;lt;ProvisioningSitePipeBind&amp;gt; -Sequence &amp;lt;ProvisioningSequence&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTenantSequenceSite -Site $myteamsite -Sequence $mysequence Adds an existing site object to an existing template sequence
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence The sequence to add the site to</description>
    </item>
    
    <item>
      <title>Add-PnPTenantSequenceSubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnptenantsequencesubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnptenantsequencesubsite/</guid>
      <description>SYNOPSIS Adds a tenant sequence sub site object to a tenant sequence site object
SYNTAX Add-PnPTenantSequenceSubSite -SubSite &amp;lt;TeamNoGroupSubSite&amp;gt; -Site &amp;lt;SiteCollection&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTenantSequenceSubSite -Site $mysite -SubSite $mysubsite Adds an existing subsite object to an existing sequence site object
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to add the subsite to</description>
    </item>
    
    <item>
      <title>Add-PnPTenantTheme</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnptenanttheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnptenanttheme/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Adds or updates a theme to the tenant.
SYNTAX Add-PnPTenantTheme [-Overwrite] -Identity &amp;lt;ThemePipeBind&amp;gt; -Palette &amp;lt;ThemePalettePipeBind&amp;gt; -IsInverted &amp;lt;Boolean&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Adds or updates a theme to the tenant.
EXAMPLES EXAMPLE 1 $themepalette = @{ &amp;#34;themePrimary&amp;#34; = &amp;#34;#00ffff&amp;#34;; &amp;#34;themeLighterAlt&amp;#34; = &amp;#34;#f3fcfc&amp;#34;; &amp;#34;themeLighter&amp;#34; = &amp;#34;#daffff&amp;#34;; &amp;#34;themeLight&amp;#34; = &amp;#34;#affefe&amp;#34;; &amp;#34;themeTertiary&amp;#34; = &amp;#34;#76ffff&amp;#34;; &amp;#34;themeSecondary&amp;#34; = &amp;#34;#39ffff&amp;#34;; &amp;#34;themeDarkAlt&amp;#34; = &amp;#34;#00c4c4&amp;#34;; &amp;#34;themeDark&amp;#34; = &amp;#34;#009090&amp;#34;; &amp;#34;themeDarker&amp;#34; = &amp;#34;#005252&amp;#34;; &amp;#34;neutralLighterAlt&amp;#34; = &amp;#34;#f8f8f8&amp;#34;; &amp;#34;neutralLighter&amp;#34; = &amp;#34;#f4f4f4&amp;#34;; &amp;#34;neutralLight&amp;#34; = &amp;#34;#eaeaea&amp;#34;; &amp;#34;neutralQuaternaryAlt&amp;#34; = &amp;#34;#dadada&amp;#34;; &amp;#34;neutralQuaternary&amp;#34; = &amp;#34;#d0d0d0&amp;#34;; &amp;#34;neutralTertiaryAlt&amp;#34; = &amp;#34;#c8c8c8&amp;#34;; &amp;#34;neutralTertiary&amp;#34; = &amp;#34;#a6a6a6&amp;#34;; &amp;#34;neutralSecondaryAlt&amp;#34; = &amp;#34;#767676&amp;#34;; &amp;#34;neutralSecondary&amp;#34; = &amp;#34;#666666&amp;#34;; &amp;#34;neutralPrimary&amp;#34; = &amp;#34;#333&amp;#34;; &amp;#34;neutralPrimaryAlt&amp;#34; = &amp;#34;#3c3c3c&amp;#34;; &amp;#34;neutralDark&amp;#34; = &amp;#34;#212121&amp;#34;; &amp;#34;black&amp;#34; = &amp;#34;#000000&amp;#34;; &amp;#34;white&amp;#34; = &amp;#34;#fff&amp;#34;; &amp;#34;primaryBackground&amp;#34; = &amp;#34;#fff&amp;#34;; &amp;#34;primaryText&amp;#34; = &amp;#34;#333&amp;#34; } PS:&amp;gt;Add-PnPTenantTheme -Identity &amp;#34;MyCompanyTheme&amp;#34; -Palette $themepalette -IsInverted $false This example adds a theme to the current tenant.</description>
    </item>
    
    <item>
      <title>Add-PnPTermToTerm</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnptermtoterm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnptermtoterm/</guid>
      <description>SYNOPSIS Adds a new term to an existing term.
SYNTAX Add-PnPTermToTerm -ParentTerm &amp;lt;Guid|Term&amp;gt; -Name &amp;lt;String&amp;gt; [-Id &amp;lt;Guid&amp;gt;] [-Lcid &amp;lt;Int32&amp;gt;] [-LocalCustomProperties &amp;lt;Hashtable&amp;gt;] [-TermStore &amp;lt;Guid&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This cmdlet adds a new taxonomy term as a child term to an existing term.
EXAMPLES EXAMPLE 1 Add-PnPTermToTerm -ParentTerm 2d1f298b-804a-4a05-96dc-29b667adec62 -Name SubTerm -CustomProperties @{&amp;#34;Department&amp;#34;=&amp;#34;Marketing&amp;#34;} Creates a new taxonomy child term named &amp;ldquo;SubTerm&amp;rdquo; in the specified term by id 2d1f298b-804a-4a05-96dc-29b667adec62.
EXAMPLE 2 $parentTerm = Get-PnPTerm -Name Marketing -TermSet Departments -TermGroup Corporate Add-PnPTermToTerm -ParentTerm $parentTerm -Name &amp;#34;Conference Team&amp;#34; Creates a new taxonomy child term named &amp;ldquo;Conference Team&amp;rdquo; in the specified term called Marketing which is located in the Departments term set.</description>
    </item>
    
    <item>
      <title>Add-PnPUserToGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpusertogroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpusertogroup/</guid>
      <description>SYNOPSIS Adds a user to a SharePoint group
SYNTAX Internal Add-PnPUserToGroup -LoginName &amp;lt;String&amp;gt; -Identity &amp;lt;GroupPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] External Add-PnPUserToGroup -Identity &amp;lt;GroupPipeBind&amp;gt; -EmailAddress &amp;lt;String&amp;gt; [-SendEmail] [-EmailBody &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPUserToGroup -LoginName user@company.com -Identity &amp;#39;Marketing Site Members&amp;#39; Add the specified user to the SharePoint group &amp;ldquo;Marketing Site Members&amp;rdquo;
EXAMPLE 2 Add-PnPUserToGroup -LoginName user@company.com -Identity 5 Add the specified user to the SharePoint group with Id 5</description>
    </item>
    
    <item>
      <title>Add-PnPView</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpview/</guid>
      <description>SYNOPSIS Adds a view to a list
SYNTAX Add-PnPView [-List] &amp;lt;ListPipeBind&amp;gt; -Title &amp;lt;String&amp;gt; [-Query &amp;lt;String&amp;gt;] -Fields &amp;lt;String[]&amp;gt; [-ViewType &amp;lt;ViewType&amp;gt;] [-RowLimit &amp;lt;UInt32&amp;gt;] [-Personal] [-SetAsDefault] [-Paged] [-Aggregations &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPView -List &amp;#34;Demo List&amp;#34; -Title &amp;#34;Demo View&amp;#34; -Fields &amp;#34;Title&amp;#34;,&amp;#34;Address&amp;#34; Adds a view named &amp;ldquo;Demo view&amp;rdquo; to the &amp;ldquo;Demo List&amp;rdquo; list.
EXAMPLE 2 Add-PnPView -List &amp;#34;Demo List&amp;#34; -Title &amp;#34;Demo View&amp;#34; -Fields &amp;#34;Title&amp;#34;,&amp;#34;Address&amp;#34; -Paged Adds a view named &amp;ldquo;Demo view&amp;rdquo; to the &amp;ldquo;Demo List&amp;rdquo; list and makes sure there&amp;rsquo;s paging on this view.</description>
    </item>
    
    <item>
      <title>Add-PnPWebhookSubscription</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpwebhooksubscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpwebhooksubscription/</guid>
      <description>SYNOPSIS Adds a new Webhook subscription
SYNTAX Add-PnPWebhookSubscription [-List &amp;lt;ListPipeBind&amp;gt;] -NotificationUrl &amp;lt;String&amp;gt; [-ExpirationDate &amp;lt;DateTime&amp;gt;] [-ClientState &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook Add a Webhook subscription for the specified notification Url on the list MyList
EXAMPLE 2 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate &amp;#34;2017-09-01&amp;#34; Add a Webhook subscription for the specified notification Url on the list MyList with an expiration date set on September 1st, 2017</description>
    </item>
    
    <item>
      <title>Add-PnPWebPartToWebPartPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpwebparttowebpartpage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpwebparttowebpartpage/</guid>
      <description>SYNOPSIS Adds a web part to a web part page in a specified zone
SYNTAX XML Add-PnPWebPartToWebPartPage -ServerRelativePageUrl &amp;lt;String&amp;gt; -Xml &amp;lt;String&amp;gt; -ZoneId &amp;lt;String&amp;gt; -ZoneIndex &amp;lt;Int32&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] FILE Add-PnPWebPartToWebPartPage -ServerRelativePageUrl &amp;lt;String&amp;gt; -Path &amp;lt;String&amp;gt; -ZoneId &amp;lt;String&amp;gt; -ZoneIndex &amp;lt;Int32&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWebPartToWebPartPage -ServerRelativePageUrl &amp;#34;/sites/demo/sitepages/home.aspx&amp;#34; -Path &amp;#34;c:\myfiles\listview.webpart&amp;#34; -ZoneId &amp;#34;Header&amp;#34; -ZoneIndex 1 This will add the web part as defined by the XML in the listview.</description>
    </item>
    
    <item>
      <title>Add-PnPWebPartToWikiPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpwebparttowikipage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpwebparttowikipage/</guid>
      <description>SYNOPSIS Adds a web part to a wiki page in a specified table row and column
SYNTAX XML Add-PnPWebPartToWikiPage -ServerRelativePageUrl &amp;lt;String&amp;gt; -Xml &amp;lt;String&amp;gt; -Row &amp;lt;Int32&amp;gt; -Column &amp;lt;Int32&amp;gt; [-AddSpace] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] FILE Add-PnPWebPartToWikiPage -ServerRelativePageUrl &amp;lt;String&amp;gt; -Path &amp;lt;String&amp;gt; -Row &amp;lt;Int32&amp;gt; -Column &amp;lt;Int32&amp;gt; [-AddSpace] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWebPartToWikiPage -ServerRelativePageUrl &amp;#34;/sites/demo/sitepages/home.aspx&amp;#34; -Path &amp;#34;c:\myfiles\listview.webpart&amp;#34; -Row 1 -Column 1 This will add the web part as defined by the XML in the listview.</description>
    </item>
    
    <item>
      <title>Add-PnPWikiPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/add-pnpwikipage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/add-pnpwikipage/</guid>
      <description>SYNOPSIS Adds a wiki page
SYNTAX WithContent Add-PnPWikiPage -ServerRelativePageUrl &amp;lt;String&amp;gt; -Content &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] WithLayout Add-PnPWikiPage -ServerRelativePageUrl &amp;lt;String&amp;gt; -Layout &amp;lt;WikiPageLayout&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWikiPage -PageUrl &amp;#39;/sites/demo1/pages/wikipage.aspx&amp;#39; -Content &amp;#39;New WikiPage&amp;#39; Creates a new wiki page &amp;lsquo;/sites/demo1/pages/wikipage.aspx&amp;rsquo; and sets the content to &amp;lsquo;New WikiPage&amp;rsquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Approve-PnPTenantServicePrincipalPermissionRequest</title>
      <link>https://pnp.github.io/powershell/cmdlets/approve-pnptenantserviceprincipalpermissionrequest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/approve-pnptenantserviceprincipalpermissionrequest/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Approves a permission request for the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal
SYNTAX Approve-PnPTenantServicePrincipalPermissionRequest -RequestId &amp;lt;Guid&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Approves a permission request for the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal
The return value of a successful call is a permission grant object.
To get the collection of permission grants for the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal, use the Get-PnPTenantServicePrincipalPermissionGrants command.</description>
    </item>
    
    <item>
      <title>Clear-PnPDefaultColumnValues</title>
      <link>https://pnp.github.io/powershell/cmdlets/clear-pnpdefaultcolumnvalues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/clear-pnpdefaultcolumnvalues/</guid>
      <description>SYNOPSIS Clear default column values for a document library
SYNTAX Clear-PnPDefaultColumnValues [-List] &amp;lt;ListPipeBind&amp;gt; -Field &amp;lt;FieldPipeBind&amp;gt; [-Folder &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Clear default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified.
EXAMPLES EXAMPLE 1 Clear-PnPDefaultColumnValues -List Documents -Field MyField Clears the default value for the field MyField on a library
EXAMPLE 2 Clear-PnPDefaultColumnValues -List Documents -Field MyField -Folder A Clears the default value for the field MyField on the folder A on a library</description>
    </item>
    
    <item>
      <title>Clear-PnPListItemAsRecord</title>
      <link>https://pnp.github.io/powershell/cmdlets/clear-pnplistitemasrecord/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/clear-pnplistitemasrecord/</guid>
      <description>SYNOPSIS Undeclares a list item as a record
SYNTAX Clear-PnPListItemAsRecord [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPListItemAsRecord -List &amp;#34;Documents&amp;#34; -Identity 4 Undeclares the document in the documents library with id 4 as a record
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object</description>
    </item>
    
    <item>
      <title>Clear-PnPMicrosoft365GroupMember</title>
      <link>https://pnp.github.io/powershell/cmdlets/clear-pnpmicrosoft365groupmember/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/clear-pnpmicrosoft365groupmember/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All  Removes all current members from a particular Microsoft 365 Group
SYNTAX Clear-PnPMicrosoft365GroupMember -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPMicrosoft365GroupMember -Identity &amp;#34;Project Team&amp;#34; Removes all the current members from the Microsoft 365 Group named &amp;ldquo;Project Team&amp;rdquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Clear-PnPMicrosoft365GroupOwner</title>
      <link>https://pnp.github.io/powershell/cmdlets/clear-pnpmicrosoft365groupowner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/clear-pnpmicrosoft365groupowner/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All  Removes all current owners from a particular Microsoft 365 Group (aka Unified Group)
SYNTAX Clear-PnPMicrosoft365GroupOwner -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPMicrosoft365GroupOwner -Identity &amp;#34;Project Team&amp;#34; Removes all the current owners from the Microsoft 365 Group named &amp;ldquo;Project Team&amp;rdquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Clear-PnPRecycleBinItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/clear-pnprecyclebinitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/clear-pnprecyclebinitem/</guid>
      <description>SYNOPSIS Permanently deletes all or a specific recycle bin item
SYNTAX All (Default) Clear-PnPRecycleBinItem [-All] [-SecondStageOnly] [-Force] [-RowLimit &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Identity Clear-PnPRecycleBinItem -Identity &amp;lt;RecycleBinItemPipeBind&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPRecycleBinItem | ? FileLeafName -like &amp;#34;*.docx&amp;#34; | Clear-PnpRecycleBinItem Permanently deletes all the items in the first and second stage recycle bins of which the file names have the .docx extension
EXAMPLE 2 Clear-PnpRecycleBinItem -Identity 72e4d749-d750-4989-b727-523d6726e442 Permanently deletes the recycle bin item with Id 72e4d749-d750-4989-b727-523d6726e442 from the recycle bin</description>
    </item>
    
    <item>
      <title>Clear-PnPTenantAppCatalogUrl</title>
      <link>https://pnp.github.io/powershell/cmdlets/clear-pnptenantappcatalogurl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/clear-pnptenantappcatalogurl/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes the url of the tenant scoped app catalog. It will not delete the site collection itself.
SYNTAX Clear-PnPTenantAppCatalogUrl [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPTenantAppCatalogUrl Removes the url of the tenant scoped app catalog
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Clear-PnPTenantRecycleBinItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/clear-pnptenantrecyclebinitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/clear-pnptenantrecyclebinitem/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Permanently deletes a site collection from the tenant scoped recycle bin
SYNTAX Clear-PnPTenantRecycleBinItem -Url &amp;lt;String&amp;gt; [-Wait] [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION The Clear-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be permanently deleted from the recycle bin as well.
EXAMPLES EXAMPLE 1 Clear-PnPTenantRecycleBinItem -Url &amp;#34;https://tenant.sharepoint.com/sites/contoso&amp;#34; This will permanently delete site collection with the url &amp;lsquo;https://tenant.</description>
    </item>
    
    <item>
      <title>Connect-PnPOnline</title>
      <link>https://pnp.github.io/powershell/cmdlets/connect-pnponline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/connect-pnponline/</guid>
      <description>SYNOPSIS Connect to a SharePoint site
SYNTAX Main (Default) Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-Credentials &amp;lt;CredentialPipeBind&amp;gt;] [-CurrentCredentials] [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] Token Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-Realm &amp;lt;String&amp;gt;] -ClientSecret &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] App-Only using a clientId and clientSecret and an URL Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-Realm &amp;lt;String&amp;gt;] -ClientSecret &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -ClientId &amp;lt;String&amp;gt; [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] App-Only using a clientId and clientSecret and an AAD Domain Connect-PnPOnline [-ReturnConnection] [-Realm &amp;lt;String&amp;gt;] -ClientSecret &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -ClientId &amp;lt;String&amp;gt; -AADDomain &amp;lt;String&amp;gt; [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] WebLogin Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-UseWebLogin] [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] ADFS with client Certificate Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-UseAdfsCert] [-ClientCertificate &amp;lt;X509Certificate2&amp;gt;] [-LoginProviderName &amp;lt;String&amp;gt;] [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] ADFS with user credentials Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-Credentials &amp;lt;CredentialPipeBind&amp;gt;] [-UseAdfs] [-Kerberos] [-LoginProviderName &amp;lt;String&amp;gt;] [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] Azure Active Directory Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -ClientId &amp;lt;String&amp;gt; -RedirectUri &amp;lt;String&amp;gt; [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] App-Only with Azure Active Directory Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -ClientId &amp;lt;String&amp;gt; -Tenant &amp;lt;String&amp;gt; [-CertificatePath &amp;lt;String&amp;gt;] [-CertificateBase64Encoded &amp;lt;String&amp;gt;] [-Certificate &amp;lt;X509Certificate2&amp;gt;] [-CertificatePassword &amp;lt;SecureString&amp;gt;] [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] App-Only with Azure Active Directory using certificate as PEM strings Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -ClientId &amp;lt;String&amp;gt; -Tenant &amp;lt;String&amp;gt; [-CertificatePassword &amp;lt;SecureString&amp;gt;] -PEMCertificate &amp;lt;String&amp;gt; -PEMPrivateKey &amp;lt;String&amp;gt; [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] App-Only with Azure Active Directory using certificate from certificate store by thumbprint Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -ClientId &amp;lt;String&amp;gt; -Tenant &amp;lt;String&amp;gt; -Thumbprint &amp;lt;String&amp;gt; [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] App-Only with Azure Active Directory using X502 certificates Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -ClientId &amp;lt;String&amp;gt; -Tenant &amp;lt;String&amp;gt; [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-TenantAdminUrl &amp;lt;String&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] Access Token Connect-PnPOnline [-ReturnConnection] [[-Url] &amp;lt;String&amp;gt;] [-CreateDrive] [-DriveName &amp;lt;String&amp;gt;] -AccessToken &amp;lt;String&amp;gt; [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] PnP Management Shell / DeviceLogin Connect-PnPOnline [-ReturnConnection] [-Url] &amp;lt;String&amp;gt; [-PnPManagementShell] [-LaunchBrowser] [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] Azure Active Directory using Scopes Connect-PnPOnline [-Credentials &amp;lt;CredentialPipeBind&amp;gt;] [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] -Scopes &amp;lt;String[]&amp;gt; [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] PnP Management Shell to the Microsoft Graph Connect-PnPOnline [-LaunchBrowser] [-Graph] [-AzureEnvironment &amp;lt;AzureEnvironment&amp;gt;] [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] Microsoft Graph using Azure Active Directory Connect-PnPOnline -AADDomain &amp;lt;String&amp;gt; [-NoTelemetry] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Connects to a SharePoint site or another API and creates a context that is required for the other PnP Cmdlets.</description>
    </item>
    
    <item>
      <title>Convert-PnPFolderToSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/convert-pnpfoldertoprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/convert-pnpfoldertoprovisioningtemplate/</guid>
      <description>SYNOPSIS Creates a pnp package file of an existing template xml, and includes all files in the current folder
SYNTAX Convert-PnPFolderToSiteTemplate [-Out] &amp;lt;String&amp;gt; [[-Folder] &amp;lt;String&amp;gt;] [-Force] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Convert-PnPFolderToSiteTemplate -Out template.pnp Creates a pnp package file of an existing template xml, and includes all files in the current folder
EXAMPLE 2 Convert-PnPFolderToSiteTemplate -Out template.pnp -Folder c:\temp Creates a pnp package file of an existing template xml, and includes all files in the c:\temp folder</description>
    </item>
    
    <item>
      <title>Convert-PnPSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/convert-pnpprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/convert-pnpprovisioningtemplate/</guid>
      <description>SYNOPSIS Converts a provisioning template to an other schema version
SYNTAX Convert-PnPSiteTemplate [-Path] &amp;lt;String&amp;gt; [-Out &amp;lt;String&amp;gt;] [[-ToSchema] &amp;lt;XMLPnPSchemaVersion&amp;gt;] [-Encoding &amp;lt;Encoding&amp;gt;] [-Force] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Convert-PnPSiteTemplate -Path template.xml Converts a provisioning template to the latest schema and outputs the result to current console.
EXAMPLE 2 Convert-PnPSiteTemplate -Path template.xml -Out newtemplate.xml Converts a provisioning template to the latest schema and outputs the result the newtemplate.xml file.
EXAMPLE 3 Convert-PnPSiteTemplate -Path template.</description>
    </item>
    
    <item>
      <title>ConvertTo-PnPClientSidePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/convertto-pnpclientsidepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/convertto-pnpclientsidepage/</guid>
      <description>SYNOPSIS Converts a classic page (wiki or web part page) into a Client-Side Page
SYNTAX ConvertTo-PnPClientSidePage -Identity &amp;lt;PagePipeBind&amp;gt; [-Library &amp;lt;String&amp;gt;] [-Folder &amp;lt;String&amp;gt;] [-WebPartMappingFile &amp;lt;String&amp;gt;] [-Overwrite [&amp;lt;SwitchParameter&amp;gt;]] [-TakeSourcePageName [&amp;lt;SwitchParameter&amp;gt;]] [-ReplaceHomePageWithDefault [&amp;lt;SwitchParameter&amp;gt;]] [-AddPageAcceptBanner [&amp;lt;SwitchParameter&amp;gt;]] [-SkipItemLevelPermissionCopyToClientSidePage [&amp;lt;SwitchParameter&amp;gt;]] [-SkipUrlRewriting [&amp;lt;SwitchParameter&amp;gt;]] [-SkipDefaultUrlRewriting [&amp;lt;SwitchParameter&amp;gt;]] [-UrlMappingFile &amp;lt;String&amp;gt;] [-ClearCache [&amp;lt;SwitchParameter&amp;gt;]] [-CopyPageMetadata [&amp;lt;SwitchParameter&amp;gt;]] [-AddTableListImageAsImageWebPart [&amp;lt;SwitchParameter&amp;gt;]] [-UseCommunityScriptEditor [&amp;lt;SwitchParameter&amp;gt;]] [-SummaryLinksToHtml [&amp;lt;SwitchParameter&amp;gt;]] [-TargetWebUrl &amp;lt;String&amp;gt;] [-LogType &amp;lt;ClientSidePageTransformatorLogType&amp;gt;] [-LogFolder &amp;lt;String&amp;gt;] [-LogSkipFlush [&amp;lt;SwitchParameter&amp;gt;]] [-LogVerbose [&amp;lt;SwitchParameter&amp;gt;]] [-DontPublish [&amp;lt;SwitchParameter&amp;gt;]] [-KeepPageCreationModificationInformation [&amp;lt;SwitchParameter&amp;gt;]] [-SetAuthorInPageHeader [&amp;lt;SwitchParameter&amp;gt;]] [-PostAsNews [&amp;lt;SwitchParameter&amp;gt;]] [-DisablePageComments [&amp;lt;SwitchParameter&amp;gt;]] [-PublishingPage [&amp;lt;SwitchParameter&amp;gt;]] [-BlogPage [&amp;lt;SwitchParameter&amp;gt;]] [-DelveBlogPage [&amp;lt;SwitchParameter&amp;gt;]] [-DelveKeepSubTitle [&amp;lt;SwitchParameter&amp;gt;]] [-PageLayoutMapping &amp;lt;String&amp;gt;] [-PublishingTargetPageName &amp;lt;String&amp;gt;] [-TargetPageName &amp;lt;String&amp;gt;] [-TargetPageFolder &amp;lt;String&amp;gt;] [-TargetPageFolderOverridesDefaultFolder [&amp;lt;SwitchParameter&amp;gt;]] [-RemoveEmptySectionsAndColumns [&amp;lt;SwitchParameter&amp;gt;]] [-TargetConnection &amp;lt;PnPConnection&amp;gt;] [-SkipUserMapping [&amp;lt;SwitchParameter&amp;gt;]] [-UserMappingFile &amp;lt;String&amp;gt;] [-TermMappingFile &amp;lt;String&amp;gt;] [-SkipTermStoreMapping [&amp;lt;SwitchParameter&amp;gt;]] [-LDAPConnectionString &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] EXAMPLES EXAMPLE 1 ConvertTo-PnPClientSidePage -Identity &amp;#34;somepage.</description>
    </item>
    
    <item>
      <title>Copy-PnPFile</title>
      <link>https://pnp.github.io/powershell/cmdlets/copy-pnpfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/copy-pnpfile/</guid>
      <description>SYNOPSIS Copies a file or folder to a different location. This location can be within the same document library, same site, same site collection or even to another site collection on the same tenant. Currently there is a 200MB file size limit for the file or folder to be copied.
SYNTAX Copy-PnPFile [-SourceUrl] &amp;lt;String&amp;gt; [-TargetUrl] &amp;lt;String&amp;gt; [-OverwriteIfAlreadyExists] [-Force] [-SkipSourceFolderName] [-IgnoreVersionHistory] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 PS:&amp;gt;Copy-PnPFile -SourceUrl Documents/MyDocs -TargetUrl /sites/otherproject/Documents -SkipSourceFolderName -OverwriteIfAlreadyExists Copies a folder named MyDocs in the document library called Documents located in the current site to the root folder of the library named Documents in the site collection otherproject.</description>
    </item>
    
    <item>
      <title>Copy-PnPItemProxy</title>
      <link>https://pnp.github.io/powershell/cmdlets/copy-pnpitemproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/copy-pnpitemproxy/</guid>
      <description>SYNOPSIS Proxy cmdlet for using Copy-Item between SharePoint provider and FileSystem provider
SYNTAX Path (Default) Copy-PnPItemProxy [-Recurse] [-Path] &amp;lt;String[]&amp;gt; [[-Destination] &amp;lt;String&amp;gt;] [-Container] [-Force] [-Filter &amp;lt;String&amp;gt;] [-Include &amp;lt;String[]&amp;gt;] [-Exclude &amp;lt;String[]&amp;gt;] [-PassThru] [-Credential &amp;lt;PSCredential&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] LiteralPath Copy-PnPItemProxy [-Recurse] [-LiteralPath] &amp;lt;String[]&amp;gt; [[-Destination] &amp;lt;String&amp;gt;] [-Container] [-Force] [-Filter &amp;lt;String&amp;gt;] [-Include &amp;lt;String[]&amp;gt;] [-Exclude &amp;lt;String[]&amp;gt;] [-PassThru] [-Credential &amp;lt;PSCredential&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Container {{ Fill Container Description }}</description>
    </item>
    
    <item>
      <title>Deny-PnPTenantServicePrincipalPermissionRequest</title>
      <link>https://pnp.github.io/powershell/cmdlets/deny-pnptenantserviceprincipalpermissionrequest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/deny-pnptenantserviceprincipalpermissionrequest/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Denies a permission request for the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal
SYNTAX Deny-PnPTenantServicePrincipalPermissionRequest -RequestId &amp;lt;Guid&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Denies a permission request for the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal
Denying a permission request removes that request from the list of permission requests.
EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Disable-PnPFeature</title>
      <link>https://pnp.github.io/powershell/cmdlets/disable-pnpfeature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/disable-pnpfeature/</guid>
      <description>SYNOPSIS Disables a feature
SYNTAX Disable-PnPFeature [-Identity] &amp;lt;Guid&amp;gt; [-Force] [-Scope &amp;lt;FeatureScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Deactivates a feature that was active on a site
EXAMPLES EXAMPLE 1 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will disable the feature with the id &amp;ldquo;99a00f6e-fb81-4dc7-8eac-e09c6f9132fe&amp;rdquo;
EXAMPLE 2 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Force This will disable the feature with the id &amp;ldquo;99a00f6e-fb81-4dc7-8eac-e09c6f9132fe&amp;rdquo; with force.
EXAMPLE 3 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Web This will disable the feature with the id &amp;ldquo;99a00f6e-fb81-4dc7-8eac-e09c6f9132fe&amp;rdquo; with the web scope.</description>
    </item>
    
    <item>
      <title>Disable-PnPInPlaceRecordsManagementForSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/disable-pnpinplacerecordsmanagementforsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/disable-pnpinplacerecordsmanagementforsite/</guid>
      <description>SYNOPSIS Disables in place records management for a site.
SYNTAX Disable-PnPInPlaceRecordsManagementForSite [-Connection &amp;lt;PnPConnection&amp;gt;] EXAMPLES  </description>
    </item>
    
    <item>
      <title>Disable-PnPPowerShellTelemetry</title>
      <link>https://pnp.github.io/powershell/cmdlets/disable-pnppowershelltelemetry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/disable-pnppowershelltelemetry/</guid>
      <description>SYNOPSIS Disables PnP PowerShell telemetry tracking
SYNTAX Disable-PnPPowerShellTelemetry [-Force] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Disables PnP PowerShell telemetry tracking
EXAMPLES EXAMPLE 1 Disable-PnPPowerShellTelemetry Will prompt you to confirm to disable telemetry tracking.
EXAMPLE 2 Disable-PnPPowerShellTelemetry -Force Will disable telemetry tracking without prompting.
PARAMETERS -Force Specifying the Force parameter will skip the confirmation question.
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Disable-PnPSharingForNonOwnersOfSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/disable-pnpsharingfornonownersofsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/disable-pnpsharingfornonownersofsite/</guid>
      <description>SYNOPSIS Configures the site to only allow sharing of the site and items in the site by owners
SYNTAX Disable-PnPSharingForNonOwnersOfSite [-Identity &amp;lt;SitePipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Configures the site to only allow sharing of the site and items in the site by owners. At this point there is no interface available yet to undo this action through script. You will have to do so through the user interface of SharePoint.</description>
    </item>
    
    <item>
      <title>Disable-PnPSiteClassification</title>
      <link>https://pnp.github.io/powershell/cmdlets/disable-pnpsiteclassification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/disable-pnpsiteclassification/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Directory.ReadWrite.All  Disables Site Classifications for the tenant
SYNTAX Disable-PnPSiteClassification [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Disable-PnPSiteClassification Disables Site Classifications for your tenant.
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Disable-PnPTenantServicePrincipal</title>
      <link>https://pnp.github.io/powershell/cmdlets/disable-pnptenantserviceprincipal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/disable-pnptenantserviceprincipal/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Enables the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
SYNTAX Disable-PnPTenantServicePrincipal [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Enables the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question.</description>
    </item>
    
    <item>
      <title>Disconnect-PnPOnline</title>
      <link>https://pnp.github.io/powershell/cmdlets/disconnect-pnponline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/disconnect-pnponline/</guid>
      <description>SYNOPSIS Disconnects the context
SYNTAX Disconnect-PnPOnline [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Disconnects the current context and requires you to build up a new connection in order to use the Cmdlets again. Using Connect-PnPOnline to connect to a different site has the same effect.
EXAMPLES EXAMPLE 1 Disconnect-PnPOnline This will clear out all active tokens
PARAMETERS -Connection Connection to be used by cmdlet
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Enable-PnPCommSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/enable-pnpcommsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/enable-pnpcommsite/</guid>
      <description>SYNOPSIS Enables the modern communication site experience on a classic team site.
SYNTAX Enable-PnPCommSite [[-DesignPackageId] &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command will enable the modern site experience on a classic team site. The site must be the root site of the site collection.
EXAMPLES EXAMPLE 1 Enable-PnPCommSite Enables the modern communication site experience on a classic team site
EXAMPLE 2 Enable-PnPCommSite -DesignPackageId 6142d2a0-63a5-4ba0-aede-d9fefca2c767 Enables the modern communication site experience on a classic team site, allowing to specify the design package to be applied</description>
    </item>
    
    <item>
      <title>Enable-PnPFeature</title>
      <link>https://pnp.github.io/powershell/cmdlets/enable-pnpfeature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/enable-pnpfeature/</guid>
      <description>SYNOPSIS Enables a feature
SYNTAX Enable-PnPFeature [-Identity] &amp;lt;Guid&amp;gt; [-Force] [-Scope &amp;lt;FeatureScope&amp;gt;] [-Sandboxed] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will enable the feature with the id &amp;ldquo;99a00f6e-fb81-4dc7-8eac-e09c6f9132fe&amp;rdquo;
EXAMPLE 2 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Force This will enable the feature with the id &amp;ldquo;99a00f6e-fb81-4dc7-8eac-e09c6f9132fe&amp;rdquo; with force.
EXAMPLE 3 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Web This will enable the feature with the id &amp;ldquo;99a00f6e-fb81-4dc7-8eac-e09c6f9132fe&amp;rdquo; with the web scope.</description>
    </item>
    
    <item>
      <title>Enable-PnPInPlaceRecordsManagementForSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/enable-pnpinplacerecordsmanagementforsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/enable-pnpinplacerecordsmanagementforsite/</guid>
      <description>SYNOPSIS Enables in place records management for a site.
SYNTAX Enable-PnPInPlaceRecordsManagementForSite [-Connection &amp;lt;PnPConnection&amp;gt;] EXAMPLES  </description>
    </item>
    
    <item>
      <title>Enable-PnPPowerShellTelemetry</title>
      <link>https://pnp.github.io/powershell/cmdlets/enable-pnppowershelltelemetry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/enable-pnppowershelltelemetry/</guid>
      <description>SYNOPSIS Enables PnP PowerShell telemetry tracking.
SYNTAX Enable-PnPPowerShellTelemetry [-Force] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION In order to help to make PnP PowerShell better, we can track anonymous telemetry. We track the version of the cmdlets you are using, which cmdlet you are executing and which version of SharePoint you are connecting to. Use Disable-PnPPowerShellTelemetry to turn this off, alternative, use the -NoTelemetry switch on Connect-PnPOnline to turn it off for that session.
EXAMPLES EXAMPLE 1 Enable-PnPPowerShellTelemetry Will prompt you to confirm to enable telemetry tracking.</description>
    </item>
    
    <item>
      <title>Enable-PnPSiteClassification</title>
      <link>https://pnp.github.io/powershell/cmdlets/enable-pnpsiteclassification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/enable-pnpsiteclassification/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Directory.ReadWrite.All  Enables Site Classifications for the tenant
SYNTAX Enable-PnPSiteClassification -Classifications &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt; -DefaultClassification &amp;lt;String&amp;gt; [-UsageGuidelinesUrl &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Connect-PnPOnline -Scopes &amp;#34;Directory.ReadWrite.All&amp;#34; Enable-PnPSiteClassification -Classifications &amp;#34;HBI&amp;#34;,&amp;#34;LBI&amp;#34;,&amp;#34;Top Secret&amp;#34; -DefaultClassification &amp;#34;LBI&amp;#34; Enables Site Classifications for your tenant and provides three classification values. The default value will be set to &amp;ldquo;LBI&amp;rdquo;
EXAMPLE 2 Connect-PnPOnline -Scopes &amp;#34;Directory.ReadWrite.All&amp;#34; Enable-PnPSiteClassification -Classifications &amp;#34;HBI&amp;#34;,&amp;#34;LBI&amp;#34;,&amp;#34;Top Secret&amp;#34; -UsageGuidelinesUrl https://aka.ms/m365pnp Enables Site Classifications for your tenant and provides three classification values.</description>
    </item>
    
    <item>
      <title>Enable-PnPTenantServicePrincipal</title>
      <link>https://pnp.github.io/powershell/cmdlets/enable-pnptenantserviceprincipal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/enable-pnptenantserviceprincipal/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Enables the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
SYNTAX Enable-PnPTenantServicePrincipal [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Enables the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question.</description>
    </item>
    
    <item>
      <title>Export-PnPClientSidePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/export-pnpclientsidepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/export-pnpclientsidepage/</guid>
      <description>SYNOPSIS Exports a Client Side Page to a PnP Provisioning Template
SYNTAX Export-PnPClientSidePage [-Identity] &amp;lt;ClientSidePagePipeBind&amp;gt; [-PersistBrandingFiles] [-Out &amp;lt;String&amp;gt;] [-Force] [-Configuration &amp;lt;ExtractConfigurationPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPClientSidePage -Identity Home.aspx Exports the page &amp;lsquo;Home.aspx&amp;rsquo; to a new PnP Provisioning Template
PARAMETERS -Configuration Specify a JSON configuration file to configure the extraction progress.
Type: ExtractConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>Export-PnPClientSidePageMapping</title>
      <link>https://pnp.github.io/powershell/cmdlets/export-pnpclientsidepagemapping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/export-pnpclientsidepagemapping/</guid>
      <description>SYNOPSIS Get&amp;rsquo;s the built-in maping files or a custom mapping file for your publishing portal page layouts. These mapping files are used to tailor the page transformation experience.
SYNTAX Export-PnPClientSidePageMapping [-BuiltInWebPartMapping [&amp;lt;SwitchParameter&amp;gt;]] [-BuiltInPageLayoutMapping [&amp;lt;SwitchParameter&amp;gt;]] [-CustomPageLayoutMapping [&amp;lt;SwitchParameter&amp;gt;]] [-PublishingPage &amp;lt;PagePipeBind&amp;gt;] [-AnalyzeOOBPageLayouts [&amp;lt;SwitchParameter&amp;gt;]] [-Folder &amp;lt;String&amp;gt;] [-Overwrite [&amp;lt;SwitchParameter&amp;gt;]] [-Logging [&amp;lt;SwitchParameter&amp;gt;]] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] EXAMPLES  </description>
    </item>
    
    <item>
      <title>Export-PnPListToSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/export-pnplisttoprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/export-pnplisttoprovisioningtemplate/</guid>
      <description>SYNOPSIS Exports one or more lists to provisioning template
SYNTAX Export-PnPListToSiteTemplate -List &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt; [[-Out] &amp;lt;String&amp;gt;] [[-Schema] &amp;lt;XMLPnPSchemaVersion&amp;gt;] [-Force] [-OutputInstance] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPListToSiteTemplate -Out template.xml -List &amp;#34;Documents&amp;#34; Extracts a list to a new provisioning template including the list specified by title or ID.
EXAMPLE 2 Export-PnPListToSiteTemplate -Out template.pnp -List &amp;#34;Documents&amp;#34;,&amp;#34;Events&amp;#34; Extracts a list to a new provisioning template Office Open XML file, including the lists specified by title or ID.</description>
    </item>
    
    <item>
      <title>Export-PnPTaxonomy</title>
      <link>https://pnp.github.io/powershell/cmdlets/export-pnptaxonomy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/export-pnptaxonomy/</guid>
      <description>SYNOPSIS Exports a taxonomy to either the output or to a file.
SYNTAX Export-PnPTaxonomy [-TermSetId &amp;lt;Guid&amp;gt;] [-IncludeID] [-Path &amp;lt;String&amp;gt;] [-TermStoreName &amp;lt;String&amp;gt;] [-Force] [-Delimiter &amp;lt;String&amp;gt;] [-Lcid &amp;lt;Int32&amp;gt;] [-Encoding &amp;lt;Encoding&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPTaxonomy Exports the full taxonomy to the standard output
EXAMPLE 2 Export-PnPTaxonomy -Path c:\output.txt Exports the full taxonomy the file output.txt
EXAMPLE 3 Export-PnPTaxonomy -Path c:\output.txt -TermSetId f6f43025-7242-4f7a-b739-41fa32847254 Exports the term set with the specified id</description>
    </item>
    
    <item>
      <title>Export-PnPTermGroupToXml</title>
      <link>https://pnp.github.io/powershell/cmdlets/export-pnptermgrouptoxml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/export-pnptermgrouptoxml/</guid>
      <description>SYNOPSIS Exports a taxonomy TermGroup to either the output or to an XML file.
SYNTAX Export-PnPTermGroupToXml [-Identity &amp;lt;TermGroupPipeBind&amp;gt;] [-Out &amp;lt;String&amp;gt;] [-FullTemplate] [-Encoding &amp;lt;Encoding&amp;gt;] [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPTermGroupToXml Exports all term groups in the default site collection term store to the standard output
EXAMPLE 2 Export-PnPTermGroupToXml -Out output.xml Exports all term groups in the default site collection term store to the file &amp;lsquo;output.xml&amp;rsquo; in the current folder</description>
    </item>
    
    <item>
      <title>Export-PnPUserInfo</title>
      <link>https://pnp.github.io/powershell/cmdlets/export-pnpuserinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/export-pnpuserinfo/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Export user information from site user information list.
SYNTAX Export-PnPUserInfo -LoginName &amp;lt;String&amp;gt; [-Site &amp;lt;String&amp;gt;] DESCRIPTION Export user information from the site user information list. If the Site parameter has not been specified, the current connect to site will be used.
EXAMPLES EXAMPLE 1 Export-PnPUserInfo -LoginName user@domain.com -Site &amp;#34;https://yoursite.sharepoint.com/sites/team&amp;#34; This exports user data with the email address user@domain.com from the site collection specified.</description>
    </item>
    
    <item>
      <title>Export-PnPUserProfile</title>
      <link>https://pnp.github.io/powershell/cmdlets/export-pnpuserprofile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/export-pnpuserprofile/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Export user profile data.
SYNTAX Export-PnPUserProfile -LoginName &amp;lt;String&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Export user profile data.
EXAMPLES EXAMPLE 1 Export-PnPUserProfile -LoginName user@domain.com This exports user profile data with the email address user@domain.com.
EXAMPLE 2 Export-PnPUserProfile -LoginName user@domain.com | ConvertTo-Csv | Out-File MyFile.csv This exports user profile data with the email address user@domain.com, converts it to a CSV format and writes the result to the file MyFile.</description>
    </item>
    
    <item>
      <title>Find-PnPFile</title>
      <link>https://pnp.github.io/powershell/cmdlets/find-pnpfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/find-pnpfile/</guid>
      <description>SYNOPSIS Finds a file in the virtual file system of the web.
SYNTAX Web (Default) Find-PnPFile [-Match] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] List Find-PnPFile [-Match] &amp;lt;String&amp;gt; -List &amp;lt;ListPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Folder Find-PnPFile [-Match] &amp;lt;String&amp;gt; -Folder &amp;lt;FolderPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Find-PnPFile -Match *.master Will return all masterpages located in the current web.
EXAMPLE 2 Find-PnPFile -List &amp;#34;Documents&amp;#34; -Match *.pdf Will return all pdf files located in given list.</description>
    </item>
    
    <item>
      <title>Get-PnPAADUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpaaduser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpaaduser/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, User.Read.All, User.ReadWrite.All  Retrieves users from Azure Active Directory
SYNTAX Return a list (Default) Get-PnPAADUser [-Filter &amp;lt;String&amp;gt;] [-OrderBy &amp;lt;String&amp;gt;] [-Select &amp;lt;String[]&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] Return by specific ID Get-PnPAADUser [-Identity &amp;lt;String&amp;gt;] [-Select &amp;lt;String[]&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] Return the delta Get-PnPAADUser [-Filter &amp;lt;String&amp;gt;] [-OrderBy &amp;lt;String&amp;gt;] [-Select &amp;lt;String[]&amp;gt;] [-Delta] [-DeltaToken &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAADUser Retrieves all users from Azure Active Directory</description>
    </item>
    
    <item>
      <title>Get-PnPAccessToken</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpaccesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpaccesstoken/</guid>
      <description>SYNOPSIS Returns the current OAuth Access token
SYNTAX Get-PnPAccessToken [-Decoded] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API. Doesn&amp;rsquo;t work with all Connect-PnPOnline options.
EXAMPLES EXAMPLE 1 Get-PnPAccessToken Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Decoded Returns the details from the access token in a decoded manner</description>
    </item>
    
    <item>
      <title>Get-PnPAlert</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpalert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpalert/</guid>
      <description>SYNOPSIS Returns registered alerts for a user.
SYNTAX Get-PnPAlert [[-List] &amp;lt;ListPipeBind&amp;gt;] [-User &amp;lt;UserPipeBind&amp;gt;] [-Title &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAlert Returns all registered alerts for the current user
EXAMPLE 2 Get-PnPAlert -List &amp;#34;Demo List&amp;#34; Returns all alerts registered on the given list for the current user.
EXAMPLE 3 Get-PnPAlert -List &amp;#34;Demo List&amp;#34; -User &amp;#34;i:0#.f|membership|Alice@contoso.onmicrosoft.com&amp;#34; Returns all alerts registered on the given list for the specified user.</description>
    </item>
    
    <item>
      <title>Get-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpapp/</guid>
      <description>SYNOPSIS Returns the available apps from the app catalog
SYNTAX Get-PnPApp [[-Identity] &amp;lt;AppMetadataPipeBind&amp;gt;] [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPApp This will return all available apps from the tenant app catalog. It will list the installed version in the current site.
EXAMPLE 2 Get-PnPApp -Scope Site This will return all available apps from the site collection scoped app catalog. It will list the installed version in the current site.</description>
    </item>
    
    <item>
      <title>Get-PnPAppAuthAccessToken</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpappauthaccesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpappauthaccesstoken/</guid>
      <description>SYNOPSIS Returns the access token
SYNTAX Get-PnPAppAuthAccessToken [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns the access token from the current client context (only works with App-Only authentication)
EXAMPLES EXAMPLE 1 $accessToken = Get-PnPAppAuthAccessToken This will put the access token from current context in the $accessToken variable. Will only work in App authentication flow (App+user or App-Only)
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPAppErrors</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpapperrors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpapperrors/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns application errors.
SYNTAX Get-PnPAppErrors -ProductId &amp;lt;Guid&amp;gt; [-StartTimeInUtc &amp;lt;DateTime&amp;gt;] [-EndTimeInUtc &amp;lt;DateTime&amp;gt;] DESCRIPTION The Get-PnPAppErrors cmdlet returns application monitoring errors (if available) for the application that is specified by ProductId between StartTimeInUtc in Coordinated Universal Time (UTC) and EndTimeInUtc in UTC.
Based on server configuration, errors are available for a limited time. The default is seven days. Older errors are purged.</description>
    </item>
    
    <item>
      <title>Get-PnPAppInfo</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpappinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpappinfo/</guid>
      <description>SYNOPSIS Returns information about installed apps.
SYNTAX By Id Get-PnPAppInfo -ProductId &amp;lt;Guid&amp;gt; By Name Get-PnPAppInfo -Name &amp;lt;String&amp;gt; DESCRIPTION The Get-PnPAppInfo cmdlet gets all the installed applications from an external marketplace or from the App Catalog that contain Name in their application names or the installed application with mentioned ProductId.
The returned collection of installed applications contains Product ID (GUID), Product name and Source.
EXAMPLES EXAMPLE 1 Get-PnPAppInfo -Name &amp;#34;Excel Service&amp;#34; This will return all installed apps from the external marketplace or from the App Catalog that contain &amp;ldquo;Excel Service&amp;rdquo; in the application name.</description>
    </item>
    
    <item>
      <title>Get-PnPApplicationCustomizer</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpapplicationcustomizer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpapplicationcustomizer/</guid>
      <description>SYNOPSIS Returns all SharePoint Framework client side extension application customizers
SYNTAX Custom Action Id Get-PnPApplicationCustomizer [-Identity &amp;lt;Guid&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-ThrowExceptionIfCustomActionNotFound] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Client Side Component Id Get-PnPApplicationCustomizer -ClientSideComponentId &amp;lt;Guid&amp;gt; [-Scope &amp;lt;CustomActionScope&amp;gt;] [-ThrowExceptionIfCustomActionNotFound] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns all SharePoint Framework client side extension application customizers registered on the current web and/or site
EXAMPLES EXAMPLE 1 Get-PnPApplicationCustomizer Returns the custom action representing the SharePoint Framework client side extension registrations registered on the current site collection and web.</description>
    </item>
    
    <item>
      <title>Get-PnPAuditing</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpauditing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpauditing/</guid>
      <description>SYNOPSIS Get the Auditing setting of a site
SYNTAX Get-PnPAuditing [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAuditing Gets the auditing settings of the current site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPAuthenticationRealm</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpauthenticationrealm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpauthenticationrealm/</guid>
      <description>SYNOPSIS Returns the authentication realm
SYNTAX Get-PnPAuthenticationRealm [[-Url] &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Gets the authentication realm for the current web
EXAMPLES EXAMPLE 1 Get-PnPAuthenticationRealm This will get the authentication realm for the current connected site
EXAMPLE 2 Get-PnPAuthenticationRealm -Url &amp;#34;https://contoso.sharepoint.com&amp;#34; This will get the authentication realm for https://contoso.sharepoint.com
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPAvailableClientSideComponents</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpavailableclientsidecomponents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpavailableclientsidecomponents/</guid>
      <description>SYNOPSIS Gets the available client side components on a particular page
SYNTAX Get-PnPAvailableClientSideComponents [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; [-Component &amp;lt;ClientSideComponentPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAvailableClientSideComponents -Page &amp;#34;MyPage.aspx&amp;#34; Gets the list of available client side components on the page &amp;lsquo;MyPage.aspx&amp;rsquo;
EXAMPLE 2 Get-PnPAvailableClientSideComponents $page Gets the list of available client side components on the page contained in the $page variable
EXAMPLE 3 Get-PnPAvailableClientSideComponents -Page &amp;#34;MyPage.aspx&amp;#34; -ComponentName &amp;#34;HelloWorld&amp;#34; Gets the client side component &amp;lsquo;HelloWorld&amp;rsquo; if available on the page &amp;lsquo;MyPage.</description>
    </item>
    
    <item>
      <title>Get-PnPAvailableLanguage</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpavailablelanguage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpavailablelanguage/</guid>
      <description>SYNOPSIS Returns the available languages on the current web
SYNTAX Get-PnPAvailableLanguage [[-Identity] &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAvailableLanguage This will return the available languages in the current web
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid of the web or web object</description>
    </item>
    
    <item>
      <title>Get-PnPAzureCertificate</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpazurecertificate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpazurecertificate/</guid>
      <description>SYNOPSIS Get PEM values and manifest settings for an existing certificate (.pfx) for use when using CSOM via an app-only ADAL application.
See https://github.com/SharePoint/PnP-PowerShell/tree/master/Samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started.
KeyCredentials contains the ADAL app manifest sections.
Certificate contains the PEM encoded certificate.
PrivateKey contains the PEM encoded private key of the certificate.
SYNTAX Get-PnPAzureCertificate -CertificatePath &amp;lt;String&amp;gt; [-CertificatePassword &amp;lt;SecureString&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAzureCertificate -CertificatePath &amp;#34;mycert.pfx&amp;#34; This will output PEM values and ADAL app manifest settings for the certificate mycert.</description>
    </item>
    
    <item>
      <title>Get-PnPBrowserIdleSignout</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpbrowseridlesignout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpbrowseridlesignout/</guid>
      <description>SYNOPSIS Used to retrieve the current configuration values for Idle session sign-out policy.
SYNTAX Get-PnPBrowserIdleSignout DESCRIPTION Use this cmdlet to retrieve the current configuration values for Idle session sign-out policy, the time at which users are warned and subsequently signed out of Microsft 365 after a period of browser inactivity in SharePoint and OneDrive.
EXAMPLES EXAMPLE 1 Get-PnPBrowserIdleSignOut This example retrieves the current configuration values for Idle session sign-out
RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPBuiltInDesignPackageVisibility</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpbuiltindesignpackagevisibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpbuiltindesignpackagevisibility/</guid>
      <description>SYNOPSIS Gets the visibility of the available built-in Design Packages.
SYNTAX Get-PnPBuiltInDesignPackageVisibility [-DesignPackage &amp;lt;DesignPackageType&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Use this cmdlet to retrieve the current visibility state of each built-in design package.
EXAMPLES EXAMPLE 1 Get-PnPBuiltInDesignPackageVisibility -DesignPackage Showcase This example retrieves the current visibility state of Showcase built-in design package.
EXAMPLE 2 Get-PnPBuiltInDesignPackageVisibility This example retrieves the current visibility state of each built-in design package.
PARAMETERS -DesignPackage Name of the design package, available names are</description>
    </item>
    
    <item>
      <title>Get-PnPClientSideComponent</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpclientsidecomponent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpclientsidecomponent/</guid>
      <description>SYNOPSIS Retrieve one or more Client-Side components from a site page
SYNTAX Get-PnPClientSideComponent [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; [-InstanceId &amp;lt;Guid&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows the retrieval of the components placed on a modern sitepage along with its properties. Note that for a newly created modern site, the Home.aspx page will not be returning any components. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published.</description>
    </item>
    
    <item>
      <title>Get-PnPClientSidePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpclientsidepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpclientsidepage/</guid>
      <description>SYNOPSIS Gets a modern site page
SYNTAX Get-PnPClientSidePage [-Identity] &amp;lt;ClientSidePagePipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows the retrieval of a modern sitepage along with its properties and contents on it. Note that for a newly created modern site, the Columns and Sections of the Home.aspx page will not be filled according to the actual site page contents. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published.</description>
    </item>
    
    <item>
      <title>Get-PnPConnection</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpconnection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpconnection/</guid>
      <description>SYNOPSIS Returns the current context
SYNTAX Get-PnPConnection [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns a PnP PowerShell Connection for use with the -Connection parameter on other cmdlets.
EXAMPLES EXAMPLE 1 $ctx = Get-PnPConnection This will put the current connection for use with the -Connection parameter on other cmdlets.
PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPContentType</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpcontenttype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpcontenttype/</guid>
      <description>SYNOPSIS Retrieves a content type
SYNTAX Get-PnPContentType [[-Identity] &amp;lt;ContentTypePipeBind&amp;gt;] [-List &amp;lt;ListPipeBind&amp;gt;] [-InSiteHierarchy] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPContentType This will get a listing of all available content types within the current web
EXAMPLE 2 Get-PnPContentType -InSiteHierarchy This will get a listing of all available content types within the site collection
EXAMPLE 3 Get-PnPContentType -Identity &amp;#34;Project Document&amp;#34; This will get the content type with the name &amp;ldquo;Project Document&amp;rdquo; within the current context</description>
    </item>
    
    <item>
      <title>Get-PnPContentTypePublishingHubUrl</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpcontenttypepublishinghuburl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpcontenttypepublishinghuburl/</guid>
      <description>SYNOPSIS Returns the url to Content Type Publishing Hub
SYNTAX Get-PnPContentTypePublishingHubUrl [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $url = Get-PnPContentTypePublishingHubUrl Connect-PnPOnline -Url $url Get-PnPContentType This will retrieve the url to the content type hub, connect to it, and then retrieve the content types form that site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPContext</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpcontext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpcontext/</guid>
      <description>SYNOPSIS Returns the current context
SYNTAX Get-PnPContext [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns a Client Side Object Model context
EXAMPLES EXAMPLE 1 $ctx = Get-PnPContext This will put the current context in the $ctx variable.
EXAMPLE 2 Connect-PnPOnline -Url $siteAurl -Credentials $credentials $ctx = Get-PnPContext Get-PnPList # returns the lists from site specified with $siteAurl Connect-PnPOnline -Url $siteBurl -Credentials $credentials Get-PnPList # returns the lists from the site specified with $siteBurl Set-PnPContext -Context $ctx # switch back to site A Get-PnPList # returns the lists from site A PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPCustomAction</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpcustomaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpcustomaction/</guid>
      <description>SYNOPSIS Return user custom actions
SYNTAX Get-PnPCustomAction [-Identity &amp;lt;Guid&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-ThrowExceptionIfCustomActionNotFound] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns all or a specific user custom action
EXAMPLES EXAMPLE 1 Get-PnPCustomAction Returns all custom actions of the current site.
EXAMPLE 2 Get-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Returns the custom action with the id &amp;lsquo;aa66f67e-46c0-4474-8a82-42bf467d07f2&amp;rsquo;.
EXAMPLE 3 Get-PnPCustomAction -Scope web Returns all custom actions for the current web object.
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPDefaultColumnValues</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpdefaultcolumnvalues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpdefaultcolumnvalues/</guid>
      <description>SYNOPSIS Gets the default column values for all folders in document library
SYNTAX Get-PnPDefaultColumnValues [-List] &amp;lt;ListPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Gets the default column values for a document library, per folder. Supports both text, people and taxonomy fields.
EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Name or Url of the list.</description>
    </item>
    
    <item>
      <title>Get-PnPDeletedMicrosoft365Group</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpdeletedmicrosoft365group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpdeletedmicrosoft365group/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All  Gets one deleted Microsoft 365 Group or a list of deleted Microsoft 365 Groups
SYNTAX Get-PnPDeletedMicrosoft365Group [-Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPDeletedMicrosoft365Group Retrieves all deleted Microsoft 365 Groups
EXAMPLE 2 Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Retrieves a specific deleted Microsoft 365 Group based on its ID
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPDocumentSetTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpdocumentsettemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpdocumentsettemplate/</guid>
      <description>SYNOPSIS Retrieves a document set template
SYNTAX Get-PnPDocumentSetTemplate [-Identity] &amp;lt;DocumentSetPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPDocumentSetTemplate -Identity &amp;#34;Test Document Set&amp;#34; This will get the document set template with the name &amp;ldquo;Test Document Set&amp;rdquo;
EXAMPLE 2 Get-PnPDocumentSetTemplate -Identity &amp;#34;0x0120D520005DB65D094035A241BAC9AF083F825F3B&amp;#34; This will get the document set template with the id &amp;ldquo;0x0120D520005DB65D094035A241BAC9AF083F825F3B&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPEventReceiver</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpeventreceiver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpeventreceiver/</guid>
      <description>SYNOPSIS Return registered eventreceivers
SYNTAX Get-PnPEventReceiver [-List &amp;lt;ListPipeBind&amp;gt;] [-Identity &amp;lt;EventReceiverPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns all registered or a specific eventreceiver
EXAMPLES EXAMPLE 1 Get-PnPEventReceiver This will return all registered event receivers on the current web
EXAMPLE 2 Get-PnPEventReceiver -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return the event receiver with the provided ReceiverId &amp;ldquo;fb689d0e-eb99-4f13-beb3-86692fd39f22&amp;rdquo; from the current web
EXAMPLE 3 Get-PnPEventReceiver -Identity MyReceiver This will return the event receiver with the provided ReceiverName &amp;ldquo;MyReceiver&amp;rdquo; from the current web</description>
    </item>
    
    <item>
      <title>Get-PnPException</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpexception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpexception/</guid>
      <description>SYNOPSIS Returns the last exception that occurred
SYNTAX Get-PnPException [-All] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns the last exception which can be used while debugging PnP Cmdlets
EXAMPLES EXAMPLE 1 Get-PnPException Returns the last exception
EXAMPLE 2 Get-PnPException -All Returns all exceptions that occurred
PARAMETERS -All Show all exceptions
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPExternalUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpexternaluser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpexternaluser/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns external users in the tenant.
SYNTAX Get-PnPExternalUser [-Position &amp;lt;Integer&amp;gt;] [-PageSize &amp;lt;Integer&amp;gt;] [-Filter &amp;lt;String&amp;gt;] [-SortOrder &amp;lt;SortOrder&amp;gt;] [-SiteUrl &amp;lt;String&amp;gt;] [-ShowOnlyUsersWithAcceptingAccountNotMatchInvitedAccount &amp;lt;Boolean&amp;gt;] DESCRIPTION The Get-PnPExternalUser cmdlet returns external users that are located in the tenant based on specified criteria.
EXAMPLES EXAMPLE 1 Get-PnPExternalUser -Position 0 -PageSize 2 Returns the first two external users in the collection.
EXAMPLE 2 Get-PnPExternalUser -Position 2 -PageSize 2 Returns two external users from the third page of the collection.</description>
    </item>
    
    <item>
      <title>Get-PnPFeature</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpfeature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpfeature/</guid>
      <description>SYNOPSIS Returns all activated or a specific activated feature
SYNTAX Get-PnPFeature [[-Identity] &amp;lt;FeaturePipeBind&amp;gt;] [-Scope &amp;lt;FeatureScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPFeature This will return all activated web scoped features
EXAMPLE 2 Get-PnPFeature -Scope Site This will return all activated site scoped features
EXAMPLE 3 Get-PnPFeature -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return a specific activated web scoped feature
EXAMPLE 4 Get-PnPFeature -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 -Scope Site This will return a specific activated site scoped feature</description>
    </item>
    
    <item>
      <title>Get-PnPField</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpfield/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpfield/</guid>
      <description>SYNOPSIS Returns a field from a list or site
SYNTAX Get-PnPField [-List &amp;lt;ListPipeBind&amp;gt;] [[-Identity] &amp;lt;FieldPipeBind&amp;gt;] [-Group &amp;lt;String&amp;gt;] [-InSiteHierarchy] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPField Gets all the fields from the current site
EXAMPLE 2 Get-PnPField -List &amp;#34;Demo list&amp;#34; -Identity &amp;#34;Speakers&amp;#34; Gets the speakers field from the list Demo list
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPFile</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpfile/</guid>
      <description>SYNOPSIS Downloads a file.
SYNTAX Return as file object (Default) Get-PnPFile [-Url] &amp;lt;String&amp;gt; [-AsFileObject] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Return as list item Get-PnPFile [-Url] &amp;lt;String&amp;gt; [-AsListItem] [-ThrowExceptionIfFileNotFound] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Save to local path Get-PnPFile [-Url] &amp;lt;String&amp;gt; [-Path &amp;lt;String&amp;gt;] [-Filename &amp;lt;String&amp;gt;] [-AsFile] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Return as string Get-PnPFile [-Url] &amp;lt;String&amp;gt; [-AsString] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPFile -Url /sites/project/_catalogs/themes/15/company.spcolor Retrieves the file and downloads it to the current folder</description>
    </item>
    
    <item>
      <title>Get-PnPFileVersion</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpfileversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpfileversion/</guid>
      <description>SYNOPSIS Retrieves all versions of a file.
SYNTAX Get-PnPFileVersion -Url &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPFileVersion -Url Documents/MyDocument.docx Retrieves the file version information for the specified file.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPFolder</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpfolder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpfolder/</guid>
      <description>SYNOPSIS Return a folder object
SYNTAX Folder By Url Get-PnPFolder [-Url] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Folders In List Get-PnPFolder [-List] &amp;lt;ListPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Retrieves a folder if it exists or all folders inside a provided list or library. Use Resolve-PnPFolder to create the folder if it does not exist.
EXAMPLES EXAMPLE 1 Get-PnPFolder -Url &amp;#34;Shared Documents&amp;#34; Returns the folder called &amp;lsquo;Shared Documents&amp;rsquo; which is located in the root of the current web</description>
    </item>
    
    <item>
      <title>Get-PnPFolderItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpfolderitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpfolderitem/</guid>
      <description>SYNOPSIS List content in folder
SYNTAX Folder via url Get-PnPFolderItem [[-FolderSiteRelativeUrl] &amp;lt;String&amp;gt;] [-ItemType &amp;lt;String&amp;gt;] [-ItemName &amp;lt;String&amp;gt;] [-Recursive] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Folder via pipebind Get-PnPFolderItem [[-Identity] &amp;lt;FolderPipeBind&amp;gt;] [-ItemType &amp;lt;String&amp;gt;] [-ItemName &amp;lt;String&amp;gt;] [-Recursive] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPFolderItem -FolderSiteRelativeUrl &amp;#34;SitePages&amp;#34; Returns the contents of the folder SitePages which is located in the root of the current web
EXAMPLE 2 Get-PnPFolderItem -FolderSiteRelativeUrl &amp;#34;SitePages&amp;#34; -ItemName &amp;#34;Default.aspx&amp;#34; Returns the file &amp;lsquo;Default.</description>
    </item>
    
    <item>
      <title>Get-PnPFooter</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpfooter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpfooter/</guid>
      <description>SYNOPSIS Gets the configuration regarding the footer of the current web
SYNTAX Get-PnPFooter [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Allows the current configuration of the footer in the current web to be retrieved. The footer currently only works on Modern Communication sites.
EXAMPLES EXAMPLE 1 Get-PnPFooter Returns the current footer configuration of the current web
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPGraphAccessToken</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpgraphaccesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpgraphaccesstoken/</guid>
      <description>SYNOPSIS Returns the current OAuth Access token for the Microsoft Graph API
SYNTAX Get-PnPGraphAccessToken [-Decoded] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API
EXAMPLES EXAMPLE 1 Get-PnPAccessToken Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API
EXAMPLE 2 Get-PnPAccessToken -Decoded Gets the full OAuth 2.0 Token to consume the Microsoft Graph API
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPGraphSubscription</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpgraphsubscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpgraphsubscription/</guid>
      <description>SYNOPSIS Gets subscriptions from Microsoft Graph. Requires the Azure Active Directory application permission &amp;lsquo;Subscription.Read.All&amp;rsquo;.
SYNTAX Return a list (Default) Get-PnPGraphSubscription [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] Return by specific ID Get-PnPGraphSubscription [-Identity &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPGraphSubscription Retrieves all subscriptions from Microsoft Graph
EXAMPLE 2 Get-PnPGraphSubscription -Identity 328c7693-5524-44ac-a946-73e02d6b0f98 Retrieves the subscription from Microsoft Graph with the id 328c7693-5524-44ac-a946-73e02d6b0f98
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpgroup/</guid>
      <description>SYNOPSIS Returns a specific SharePoint group or all SharePoint groups in site.
SYNTAX All (Default) Get-PnPGroup [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] ByName Get-PnPGroup [[-Identity] &amp;lt;GroupPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Members Get-PnPGroup [-AssociatedMemberGroup] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Visitors Get-PnPGroup [-AssociatedVisitorGroup] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Owners Get-PnPGroup [-AssociatedOwnerGroup] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPGroup Returns all SharePoint groups in a site</description>
    </item>
    
    <item>
      <title>Get-PnPGroupMembers</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpgroupmembers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpgroupmembers/</guid>
      <description>SYNOPSIS Retrieves all members of a group
SYNTAX Get-PnPGroupMembers -Identity &amp;lt;GroupPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command will return all the users that are a member of the provided SharePoint Group
EXAMPLES EXAMPLE 1 Get-PnPGroupMembers -Identity &amp;#39;Marketing Site Members&amp;#39; Returns all the users that are a member of the group &amp;lsquo;Marketing Site Members&amp;rsquo; in the current sitecollection
EXAMPLE 2 Get-PnPGroup | Get-PnPGroupMembers Returns all the users that are a member of any of the groups in the current sitecollection</description>
    </item>
    
    <item>
      <title>Get-PnPGroupPermissions</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpgrouppermissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpgrouppermissions/</guid>
      <description>SYNOPSIS Returns the permissions for a specific SharePoint group
SYNTAX Get-PnPGroupPermissions [-Identity] &amp;lt;GroupPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPGroupPermissions -Identity &amp;#39;My Site Members&amp;#39; Returns the permissions for the SharePoint group with the name &amp;lsquo;My Site Members&amp;rsquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Get the permissions of a specific group by name</description>
    </item>
    
    <item>
      <title>Get-PnPHideDefaultThemes</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnphidedefaultthemes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnphidedefaultthemes/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns if the default / OOTB themes should be visible to users or not.
SYNTAX Get-PnPHideDefaultThemes [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns if the default themes are visible. Use Set-PnPHideDefaultThemes to change this value.
You must be a SharePoint Online global administrator to run the cmdlet.
EXAMPLES EXAMPLE 1 Get-PnPHideDefaultThemes This example returns the current setting if the default themes should be visible</description>
    </item>
    
    <item>
      <title>Get-PnPHomePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnphomepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnphomepage/</guid>
      <description>SYNOPSIS Return the homepage
SYNTAX Get-PnPHomePage [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns the URL to the page set as home page
EXAMPLES EXAMPLE 1 Get-PnPHomePage Will return the URL of the home page of the web.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPHomeSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnphomesite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnphomesite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the home site url for your tenant
SYNTAX Get-PnPHomeSite [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPHomeSite Returns the home site url for your tenant
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPHubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnphubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnphubsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieve all or a specific hubsite.
SYNTAX Get-PnPHubSite [[-Identity] &amp;lt;HubSitePipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPHubSite Returns all hubsite properties
EXAMPLE 2 Get-PnPHubSite -Identity &amp;#34;https://contoso.sharepoint.com/sites/myhubsite&amp;#34; Returns the properties of the specified hubsite
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPHubSiteChild</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnphubsitechild/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnphubsitechild/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieves all sites linked to a specific hub site
SYNTAX Get-PnPHubSiteChild -Identity &amp;lt;HubSitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Retrieves all sites linked to a specific hub site
EXAMPLES EXAMPLE 1 Get-PnPHubSiteChild -Identity &amp;#34;https://contoso.sharepoint.com/sites/myhubsite&amp;#34; Returns the sites having configured the provided hub site as their hub site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPIndexedPropertyKeys</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpindexedpropertykeys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpindexedpropertykeys/</guid>
      <description>SYNOPSIS Returns the keys of the property bag values that have been marked for indexing by search
SYNTAX Get-PnPIndexedPropertyKeys [-List &amp;lt;ListPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name from where to get the indexed properties</description>
    </item>
    
    <item>
      <title>Get-PnPInPlaceRecordsManagement</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpinplacerecordsmanagement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpinplacerecordsmanagement/</guid>
      <description>SYNOPSIS Returns if the place records management feature is enabled.
SYNTAX Get-PnPInPlaceRecordsManagement [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPInPlaceRecordsManagement Returns if $true if in place records management is active
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPIsSiteAliasAvailable</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpissitealiasavailable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpissitealiasavailable/</guid>
      <description>SYNOPSIS Validates if a certain alias is still available to be used to create a new site collection for. If it is not, it will propose an alternative alias and URL which is still available.
SYNTAX Get-PnPIsSiteAliasAvailable [-Identity &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPIsSiteAliasAvailable -Identity &amp;#34;HR&amp;#34; Validates if the alias &amp;ldquo;HR&amp;rdquo; is still available to be used
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPJavaScriptLink</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpjavascriptlink/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpjavascriptlink/</guid>
      <description>SYNOPSIS Returns all or a specific custom action(s) with location type ScriptLink
SYNTAX Get-PnPJavaScriptLink [[-Name] &amp;lt;String&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-ThrowExceptionIfJavaScriptLinkNotFound] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPJavaScriptLink Returns all web scoped JavaScript links
EXAMPLE 2 Get-PnPJavaScriptLink -Scope All Returns all web and site scoped JavaScript links
EXAMPLE 3 Get-PnPJavaScriptLink -Scope Web Returns all Web scoped JavaScript links
EXAMPLE 4 Get-PnPJavaScriptLink -Scope Site Returns all Site scoped JavaScript links</description>
    </item>
    
    <item>
      <title>Get-PnPKnowledgeHubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpknowledgehubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpknowledgehubsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Gets the Knowledge Hub Site URL for your tenant
SYNTAX Get-PnPKnowledgeHubSite [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPKnowledgeHubSite Returns the Knowledge Hub Site Url for your tenant
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPLabel</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnplabel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnplabel/</guid>
      <description>SYNOPSIS Gets the Office 365 retention label/tag of the specified list or library (if applicable)
SYNTAX Get-PnPLabel -List &amp;lt;ListPipeBind&amp;gt; [-ValuesOnly] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPLabel -List &amp;#34;Demo List&amp;#34; -ValuesOnly This gets the Office 365 retention label which is set to a list or a library
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPList</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnplist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnplist/</guid>
      <description>SYNOPSIS Returns lists from SharePoint
SYNTAX Get-PnPList [[-Identity] &amp;lt;ListPipeBind&amp;gt;] [-ThrowExceptionIfListNotFound] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPList Returns all lists in the current web
EXAMPLE 2 Get-PnPList -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe Returns a list with the given id
EXAMPLE 3 Get-PnPList -Identity Lists/Announcements Returns a list with the given url
EXAMPLE 4 Get-PnPList | Where-Object {$_.RootFolder.ServerRelativeUrl -like &amp;#34;/lists/*&amp;#34;} This examples shows how to do wildcard searches on the list URL.</description>
    </item>
    
    <item>
      <title>Get-PnPListInformationRightsManagement</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnplistinformationrightsmanagement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnplistinformationrightsmanagement/</guid>
      <description>SYNOPSIS Get the site closure status of the site which has a site policy applied
SYNTAX Get-PnPListInformationRightsManagement -List &amp;lt;ListPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListInformationRightsManagement -List &amp;#34;Documents&amp;#34; Returns Information Rights Management (IRM) settings for the list. See &amp;lsquo;Get-Help Set-PnPListInformationRightsManagement -Detailed&amp;rsquo; for more information about the various values.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPListItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnplistitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnplistitem/</guid>
      <description>SYNOPSIS Retrieves list items
SYNTAX All Items (Default) Get-PnPListItem [-List] &amp;lt;ListPipeBind&amp;gt; [-FolderServerRelativeUrl &amp;lt;String&amp;gt;] [-Fields &amp;lt;String[]&amp;gt;] [-PageSize &amp;lt;Int32&amp;gt;] [-ScriptBlock &amp;lt;ScriptBlock&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] By Id Get-PnPListItem [-List] &amp;lt;ListPipeBind&amp;gt; [-Id &amp;lt;Int32&amp;gt;] [-Fields &amp;lt;String[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] By Unique Id Get-PnPListItem [-List] &amp;lt;ListPipeBind&amp;gt; [-UniqueId &amp;lt;Guid&amp;gt;] [-Fields &amp;lt;String[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] By Query Get-PnPListItem [-List] &amp;lt;ListPipeBind&amp;gt; [-Query &amp;lt;String&amp;gt;] [-FolderServerRelativeUrl &amp;lt;String&amp;gt;] [-PageSize &amp;lt;Int32&amp;gt;] [-ScriptBlock &amp;lt;ScriptBlock&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListItem -List Tasks Retrieves all list items from the Tasks list</description>
    </item>
    
    <item>
      <title>Get-PnPListRecordDeclaration</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnplistrecorddeclaration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnplistrecorddeclaration/</guid>
      <description>SYNOPSIS Returns the manual record declaration settings for a list
SYNTAX Get-PnPListRecordDeclaration -List &amp;lt;ListPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListRecordDeclaration -List &amp;#34;Documents&amp;#34; Returns the record declaration setting for the list &amp;ldquo;Documents&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to retrieve the record declaration settings for</description>
    </item>
    
    <item>
      <title>Get-PnPManagementApiAccessToken</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpmanagementapiaccesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpmanagementapiaccesstoken/</guid>
      <description>SYNOPSIS Gets an access token for the Office 365 Management API
SYNTAX Get-PnPManagementApiAccessToken -TenantId &amp;lt;String&amp;gt; -ClientId &amp;lt;String&amp;gt; -ClientSecret &amp;lt;String&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPManagementApiAccessToken -TenantId $tenantId -ClientId $clientId -ClientSecret $clientSecret) Retrieves access token for the Office 365 Management API
PARAMETERS -ClientId The App\Client ID of the app which gives you access to the Office 365 Management API
Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSecret The Client Secret of the app which gives you access to the Office 365 Management API</description>
    </item>
    
    <item>
      <title>Get-PnPMasterPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpmasterpage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpmasterpage/</guid>
      <description>SYNOPSIS Returns the URLs of the default Master Page and the custom Master Page.
SYNTAX Get-PnPMasterPage [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPMicrosoft365Group</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpmicrosoft365group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpmicrosoft365group/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All  Gets one Microsoft 365 Group or a list of Microsoft 365 Groups
SYNTAX Get-PnPMicrosoft365Group [-Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt;] [-ExcludeSiteUrl] [-IncludeClassification] [-IncludeHasTeam] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-Microsoft365Group Retrieves all the Microsoft 365 Groups
EXAMPLE 2 Get-Microsoft365Group -Identity $groupId Retrieves a specific Microsoft 365 Group based on its ID
EXAMPLE 3 Get-Microsoft365Group -Identity $groupDisplayName Retrieves a specific or list of Microsoft 365 Groups that start with the given DisplayName</description>
    </item>
    
    <item>
      <title>Get-PnPMicrosoft365GroupMembers</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpmicrosoft365groupmembers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpmicrosoft365groupmembers/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All, User.Read.All, User.ReadWrite.All  Gets members of a particular Microsoft 365 Group (aka Unified Group). Requires the Azure Active Directory application permissions &amp;lsquo;Group.Read.All&amp;rsquo; and &amp;lsquo;User.Read.All&amp;rsquo;.
SYNTAX Get-PnPMicrosoft365GroupMembers -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupMembers -Identity $groupId Retrieves all the members of a specific Microsoft 365 Group based on its ID
EXAMPLE 2 Get-PnPMicrosoft365GroupMembers -Identity $group Retrieves all the members of a specific Microsoft 365 Group based on the group&amp;rsquo;s object instance</description>
    </item>
    
    <item>
      <title>Get-PnPMicrosoft365GroupOwners</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpmicrosoft365groupowners/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpmicrosoft365groupowners/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All, User.Read.All, User.ReadWrite.All  Gets owners of a particular Microsoft 365 Group
SYNTAX Get-PnPMicrosoft365GroupOwners -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupOwners -Identity $groupId Retrieves all the owners of a specific Microsoft 365 Group based on its ID
EXAMPLE 2 Get-PnPMicrosoft365GroupOwners -Identity $group Retrieves all the owners of a specific Microsoft 365 Group based on the group&amp;rsquo;s object instance</description>
    </item>
    
    <item>
      <title>Get-PnPNavigationNode</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpnavigationnode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpnavigationnode/</guid>
      <description>SYNOPSIS Returns all or a specific navigation node
SYNTAX All nodes by location (Default) Get-PnPNavigationNode [-Location &amp;lt;NavigationType&amp;gt;] [-Tree] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] A single node by ID Get-PnPNavigationNode [-Id &amp;lt;Int32&amp;gt;] [-Tree] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPNavigationNode Returns all navigation nodes in the quicklaunch navigation
EXAMPLE 2 Get-PnPNavigationNode -Location QuickLaunch Returns all navigation nodes in the quicklaunch navigation
EXAMPLE 3 Get-PnPNavigationNode -Location TopNavigationBar Returns all navigation nodes in the top navigation bar</description>
    </item>
    
    <item>
      <title>Get-PnPOffice365CurrentServiceStatus</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365currentservicestatus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365currentservicestatus/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Office 365 Management API: ServiceHealth.Read  Gets current service status of the Office 365 Services from the Office 365 Management API
SYNTAX Get-PnPOffice365CurrentServiceStatus [-Workload &amp;lt;Office365Workload&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOffice365CurrentServiceStatus Retrieves the current service status of all Office 365 services
EXAMPLE 2 Get-PnPOffice365CurrentServiceStatus -Workload SharePoint Retrieves the current service status of SharePoint Online
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPOffice365HistoricalServiceStatus</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365historicalservicestatus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365historicalservicestatus/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Office 365 Management API: ServiceHealth.Read  Gets the historical service status of the Office 365 Services of the last 7 days from the Office 365 Management API
SYNTAX Get-PnPOffice365HistoricalServiceStatus [-Workload &amp;lt;Office365Workload&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOffice365HistoricalServiceStatus Retrieves the historical service status of all Office 365 services
EXAMPLE 2 Get-PnPOffice365HistoricalServiceStatus -Workload SharePoint Retrieves the historical service status of SharePoint Online
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPOffice365ServiceMessage</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365servicemessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365servicemessage/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Office 365 Management API: ServiceHealth.Read  Gets the service messages regarding services in Office 365 from the Office 365 Management API
SYNTAX Get-PnPOffice365ServiceMessage [-Workload &amp;lt;Office365Workload&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOffice365ServiceMessage Retrieves the service messages regarding services in Office 365
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Workload Allows retrieval of the service messages for only one particular service.</description>
    </item>
    
    <item>
      <title>Get-PnPOffice365Services</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpoffice365services/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Office 365 Management API: ServiceHealth.Read  Gets the services available in Office 365 from the Office 365 Management API
SYNTAX Get-PnPOffice365Services [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOffice365Services Retrieves the current services available in Office 365
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPOfficeManagementApiAccessToken</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpofficemanagementapiaccesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpofficemanagementapiaccesstoken/</guid>
      <description>SYNOPSIS Gets an access token for the Microsoft Office 365 Management API from the current connection
SYNTAX Get-PnPOfficeManagementApiAccessToken [-Decoded] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPManagementApiAccessToken Gets the OAuth 2.0 Access Token to consume the Microsoft Office 365 Management API
EXAMPLE 2 Get-PnPManagementApiAccessToken -Decoded Gets the full OAuth 2.0 Token to consume the Microsoft Office 365 Management API
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPOrgAssetsLibrary</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnporgassetslibrary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnporgassetslibrary/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the list of all the configured organizational asset libraries
SYNTAX Get-PnPOrgAssetsLibrary [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOrgAssetsLibrary Returns the list of all the configured organizational asset sites
EXAMPLE 2 (Get-PnPOrgAssetsLibrary)[0].OrgAssetsLibraries[0].LibraryUrl.DecodedUrl Returns the server relative url of the first document library which has been flagged as organizational asset library, i.e. &amp;ldquo;sites/branding/logos&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPOrgNewsSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnporgnewssite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnporgnewssite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the list of all the configured organizational news sites.
SYNTAX Get-PnPOrgNewsSite [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOrgNewsSite Returns the list of all the configured organizational news sites.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPPersonalSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/request-pnppersonalsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/request-pnppersonalsite/</guid>
      <description>SYNOPSIS Requests that one or more users be enqueued for a Personal Site to be created.
SYNTAX Request-PnPPersonalSite -UserEmails &amp;lt;String[]&amp;gt; [-NoWait] DESCRIPTION The Request-PnPPersonalSite cmdlet requests that the users specified be enqueued so that a Personal Site be created for each. The actual Personal site is created by a Timer Job later.
 [!NOTE] • You must specify a string array of user logins that contains one or more valid user email (logins) and cannot contain any empty fields.</description>
    </item>
    
    <item>
      <title>Get-PnPPowerShellTelemetryEnabled</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnppowershelltelemetryenabled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnppowershelltelemetryenabled/</guid>
      <description>SYNOPSIS Returns true if the PnP PowerShell Telemetry has been enabled.
SYNTAX Get-PnPPowerShellTelemetryEnabled [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION In order to help to make PnP PowerShell better, we can track anonymous telemetry. We track the version of the cmdlets you are using, which cmdlet you are executing and which version of SharePoint you are connecting to. Use Disable-PnPPowerShellTelemetry to turn this off, alternative, use the -NoTelemetry switch on Connect-PnPOnline to turn it off for that session.</description>
    </item>
    
    <item>
      <title>Get-PnPProperty</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpproperty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpproperty/</guid>
      <description>SYNOPSIS Returns a previously not loaded property of a ClientObject
SYNTAX Get-PnPProperty [-ClientObject] &amp;lt;ClientObject&amp;gt; [-Property] &amp;lt;String[]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Will populate properties of an object and optionally, if needed, load the value from the server. If one property is specified its value will be returned to the output.
EXAMPLES EXAMPLE 1 $web = Get-PnPWeb Get-PnPProperty -ClientObject $web -Property Id, Lists $web.Lists Will load both the Id and Lists properties of the specified Web object.</description>
    </item>
    
    <item>
      <title>Get-PnPPropertyBag</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnppropertybag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnppropertybag/</guid>
      <description>SYNOPSIS Returns the property bag values.
SYNTAX Get-PnPPropertyBag [[-Key] &amp;lt;String&amp;gt;] [-Folder &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPPropertyBag This will return all web property bag values
EXAMPLE 2 Get-PnPPropertyBag -Key MyKey This will return the value of the key MyKey from the web property bag
EXAMPLE 3 Get-PnPPropertyBag -Folder /MyFolder This will return all property bag values for the folder MyFolder which is located in the root of the current web</description>
    </item>
    
    <item>
      <title>Get-PnPPublishingImageRendition</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnppublishingimagerendition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnppublishingimagerendition/</guid>
      <description>SYNOPSIS Returns all image renditions or if Identity is specified a specific one
SYNTAX Get-PnPPublishingImageRendition [[-Identity] &amp;lt;ImageRenditionPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPPublishingImageRendition Returns all Image Renditions
EXAMPLE 2 Get-PnPPublishingImageRendition -Identity &amp;#34;Test&amp;#34; Returns the image rendition named &amp;ldquo;Test&amp;rdquo;
EXAMPLE 3 Get-PnPPublishingImageRendition -Identity 2 Returns the image rendition where its id equals 2
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPRecycleBinItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnprecyclebinitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnprecyclebinitem/</guid>
      <description>SYNOPSIS Returns the items in the recycle bin from the context
SYNTAX All (Default) Get-PnPRecycleBinItem [-RowLimit &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Identity Get-PnPRecycleBinItem [-Identity &amp;lt;Guid&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] FirstStage Get-PnPRecycleBinItem [-FirstStage] [-RowLimit &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] SecondStage Get-PnPRecycleBinItem [-SecondStage] [-RowLimit &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPRecycleBinItem Returns all items in both the first and the second stage recycle bins in the current site collection</description>
    </item>
    
    <item>
      <title>Get-PnPRequestAccessEmails</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnprequestaccessemails/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnprequestaccessemails/</guid>
      <description>SYNOPSIS Returns the request access e-mail addresses
SYNTAX Get-PnPRequestAccessEmails [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPRequestAccessEmails This will return all the request access e-mail addresses for the current web
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPRoleDefinition</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnproledefinition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnproledefinition/</guid>
      <description>SYNOPSIS Retrieves a Role Definitions of a site
SYNTAX Get-PnPRoleDefinition [[-Identity] &amp;lt;RoleDefinitionPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPRoleDefinition Retrieves the Role Definitions (Permission Levels) settings of the current site
EXAMPLE 2 Get-PnPRoleDefinition -Identity Read Retrieves the specified Role Definition (Permission Level) settings of the current site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPSearchConfiguration</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsearchconfiguration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsearchconfiguration/</guid>
      <description>SYNOPSIS Returns the search configuration
SYNTAX Xml (Default) Get-PnPSearchConfiguration [-Scope &amp;lt;SearchConfigurationScope&amp;gt;] [-Path &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] OutputFormat Get-PnPSearchConfiguration [-Scope &amp;lt;SearchConfigurationScope&amp;gt;] [-OutputFormat &amp;lt;OutputFormat&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSearchConfiguration Returns the search configuration for the current web
EXAMPLE 2 Get-PnPSearchConfiguration -Scope Site Returns the search configuration for the current site collection
EXAMPLE 3 Get-PnPSearchConfiguration -Scope Subscription Returns the search configuration for the current tenant
EXAMPLE 4 Get-PnPSearchConfiguration -Path searchconfig.</description>
    </item>
    
    <item>
      <title>Get-PnPSearchCrawlLog</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsearchcrawllog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsearchcrawllog/</guid>
      <description>SYNOPSIS Returns entries from the SharePoint search crawl log. Make sure you are granted access to the crawl log via the SharePoint search admin center at https://-admin.sharepoint.com/_layouts/15/searchadmin/crawllogreadpermission.aspx in order to run this cmdlet.
SYNTAX Get-PnPSearchCrawlLog [-LogLevel &amp;lt;LogLevel&amp;gt;] [-RowLimit &amp;lt;Int32&amp;gt;] [-Filter &amp;lt;String&amp;gt;] [-ContentSource &amp;lt;ContentSource&amp;gt;] [-StartDate &amp;lt;DateTime&amp;gt;] [-EndDate &amp;lt;DateTime&amp;gt;] [-RawFormat] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSearchCrawlLog Returns the last 100 crawl log entries for site content.
EXAMPLE 2 Get-PnPSearchCrawlLog -Filter &amp;#34;https://contoso-my.</description>
    </item>
    
    <item>
      <title>Get-PnPSearchSettings</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsearchsettings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsearchsettings/</guid>
      <description>SYNOPSIS Retrieves search settings for a site
SYNTAX Get-PnPSearchSettings [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSearchSettings Retrieve search settings for the site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPSharingForNonOwnersOfSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsharingfornonownersofsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsharingfornonownersofsite/</guid>
      <description>SYNOPSIS Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share
SYNTAX Get-PnPSharingForNonOwnersOfSite [-Identity &amp;lt;SitePipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share. You can disable sharing by non owners by using Disable-PnPSharingForNonOwnersOfSite.</description>
    </item>
    
    <item>
      <title>Get-PnPSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsite/</guid>
      <description>SYNOPSIS Returns the current site collection from the context.
SYNTAX Get-PnPSite [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSite Gets the current site
EXAMPLE 2 Get-PnPSite -Includes RootWeb,ServerRelativeUrl Gets the current site specifying to include RootWeb and ServerRelativeUrl properties. For the full list of properties see https://docs.microsoft.com/previous-versions/office/sharepoint-server/ee538579(v%3doffice.15)
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteClassification</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsiteclassification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsiteclassification/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All  Returns the defined Site Classifications for the tenant
SYNTAX Get-PnPSiteClassification [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteClassification Returns the currently set site classifications for the tenant.
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPSiteClosure</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsiteclosure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsiteclosure/</guid>
      <description>SYNOPSIS Get the site closure status of the site which has a site policy applied
SYNTAX Get-PnPSiteClosure [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteClosure Get the site closure status of the site.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteCollectionAdmin</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitecollectionadmin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitecollectionadmin/</guid>
      <description>SYNOPSIS Returns the current site collection administrators of the site collection in the current context
SYNTAX Get-PnPSiteCollectionAdmin [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command will return all current site collection administrators of the site collection in the current context
EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionAdmin This will return all the current site collection administrators of the site collection in the current context
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteCollectionAppCatalogs</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitecollectionappcatalogs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitecollectionappcatalogs/</guid>
      <description>SYNOPSIS Returns site collection scoped app catalogs
SYNTAX Get-PnPSiteCollectionAppCatalogs [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns site collection scoped app catalogs
EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionAppCatalogs Will return the site collection app catalogs
PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPSiteCollectionTermStore</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitecollectiontermstore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitecollectiontermstore/</guid>
      <description>SYNOPSIS Returns the site collection term store
SYNTAX Get-PnPSiteCollectionTermStore [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionTermStore Returns the site collection term store.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteDesign</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesign/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieve Site Designs that have been registered on the current tenant.
SYNTAX Get-PnPSiteDesign [[-Identity] &amp;lt;TenantSiteDesignPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteDesign Returns all registered site designs
EXAMPLE 2 Get-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered site designs
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteDesignRights</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesignrights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesignrights/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the principals with design rights on a specific Site Design
SYNTAX Get-PnPSiteDesignRights [-Identity] &amp;lt;TenantSiteDesignPipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns the principals with rights on a specific site design
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteDesignRun</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesignrun/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesignrun/</guid>
      <description>SYNOPSIS Retrieves a list of site designs applied to a specified site collection. If the WebUrl parameter is not specified we show the list of designs applied to the current site. The returned output includes the ID of the scheduled job, the web and site IDs, and the site design ID, version, and title.
SYNTAX Get-PnPSiteDesignRun [-SiteDesignId &amp;lt;Guid&amp;gt;] [-WebUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteDesignRun This example returns a list of the site designs applied to the current site.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteDesignRunStatus</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesignrunstatus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesignrunstatus/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieves and displays a list of all site script actions executed for a specified site design applied to a site.
SYNTAX Get-PnPSiteDesignRunStatus -Run &amp;lt;TenantSiteDesignRun&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $myrun = Get-PnPSiteDesignRun -WebUrl &amp;#34;https://contoso.sharepoint.com/sites/project-playbook&amp;#34; -SiteDesignId cefd782e-sean-4814-a68a-b33b116c302f Get-PnPSiteDesignRunStatus -Run $myrun This example gets the run for a specific site design applied to a site and sets it to a variable.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteDesignTask</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesigntask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitedesigntask/</guid>
      <description>SYNOPSIS Used to retrieve a scheduled site design script. It takes the ID of the scheduled site design task and the URL for the site where the site design is scheduled to be applied.
SYNTAX Get-PnPSiteDesignTask [-Identity &amp;lt;TenantSiteDesignTaskPipeBind&amp;gt;] [-WebUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteDesignTask -Identity 501z8c32-4147-44d4-8607-26c2f67cae82 This example retrieves a site design task given the provided site design task id
EXAMPLE 2 Get-PnPSiteDesignTask This example retrieves all site design tasks currently scheduled on the current site</description>
    </item>
    
    <item>
      <title>Get-PnPSiteGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitegroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitegroup/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Gets all the groups in the current or specified site collection.
SYNTAX Get-PnPSiteGroup [-Group &amp;lt;String&amp;gt;] [-Site &amp;lt;SitePipeBind&amp;gt;] DESCRIPTION Use the Get-PnPSiteGroup cmdlet to get all the groups on the specified or currently connected site collection.
EXAMPLES EXAMPLE 1 Get-PnPSiteGroup Returns all SharePoint groups in the current connected to site
EXAMPLE 2 Get-PnPSiteGroup -Site &amp;#34;https://contoso.sharepoint.com/sites/siteA&amp;#34; This will return all SharePoint groups in the specified site</description>
    </item>
    
    <item>
      <title>Get-PnPSitePolicy</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitepolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitepolicy/</guid>
      <description>SYNOPSIS Retrieves all or a specific site policy
SYNTAX Get-PnPSitePolicy [-AllAvailable] [-Name &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSitePolicy Retrieves the current applied site policy.
EXAMPLE 2 Get-PnPSitePolicy -AllAvailable Retrieves all available site policies.
EXAMPLE 3 Get-PnPSitePolicy -Name &amp;#34;Contoso HBI&amp;#34; Retrieves an available site policy with the name &amp;ldquo;Contoso HBI&amp;rdquo;.
PARAMETERS -AllAvailable Retrieve all available site policies
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteScript</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitescript/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieve Site Scripts that have been registered on the current tenant.
SYNTAX Get-PnPSiteScript [[-Identity] &amp;lt;TenantSiteScriptPipeBind&amp;gt;] [[-SiteDesign] &amp;lt;TenantSiteDesignPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteScript Returns all registered site scripts
EXAMPLE 2 Get-PnPSiteScript -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered site script
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteScriptFromList</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitescriptfromlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitescriptfromlist/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Generates a Site Script from an existing list
SYNTAX Get-PnPSiteScriptFromList -Url &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows a Site Script to be generated off of an existing list on your tenant. Connect to your SharePoint Online Admin site before executing this command.
EXAMPLES EXAMPLE 1 Get-PnPSiteScriptFromList -Url &amp;#34;https://contoso.sharepoint.com/sites/teamsite/lists/MyList&amp;#34; Returns the generated Site Script JSON from the list &amp;ldquo;MyList&amp;rdquo; at the provided Url</description>
    </item>
    
    <item>
      <title>Get-PnPSiteScriptFromWeb</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitescriptfromweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitescriptfromweb/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Generates a Site Script from an existing site
SYNTAX All components Get-PnPSiteScriptFromWeb -Url &amp;lt;String&amp;gt; [-Lists &amp;lt;String[]&amp;gt;] [-IncludeAll] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Specific components Get-PnPSiteScriptFromWeb -Url &amp;lt;String&amp;gt; [-Lists &amp;lt;String[]&amp;gt;] [-IncludeBranding] [-IncludeLinksToExportedItems] [-IncludeRegionalSettings] [-IncludeSiteExternalSharingCapability] [-IncludeTheme] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows a Site Script to be generated off of an existing site on your tenant. Connect to your SharePoint Online Admin site before executing this command.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteSearchQueryResults</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsitesearchqueryresults/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsitesearchqueryresults/</guid>
      <description>SYNOPSIS Executes a search query to retrieve indexed site collections
SYNTAX Limit (Default) Get-PnPSiteSearchQueryResults [[-Query] &amp;lt;String&amp;gt;] [-StartRow &amp;lt;Int32&amp;gt;] [-MaxResults &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] All Get-PnPSiteSearchQueryResults [[-Query] &amp;lt;String&amp;gt;] [-All] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteSearchQueryResults Returns the top 500 site collections indexed by SharePoint Search
EXAMPLE 2 Get-PnPSiteSearchQueryResults -Query &amp;#34;WebTemplate:STS&amp;#34; Returns the top 500 site collections indexed by SharePoint Search which have are based on the STS (Team Site) template</description>
    </item>
    
    <item>
      <title>Get-PnPSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpprovisioningtemplate/</guid>
      <description>SYNOPSIS Generates a provisioning site template from a web
SYNTAX Get-PnPSiteTemplate [[-Out] &amp;lt;String&amp;gt;] [[-Schema] &amp;lt;XMLPnPSchemaVersion&amp;gt;] [-IncludeAllTermGroups] [-IncludeSiteCollectionTermGroup] [-IncludeSiteGroups] [-IncludeTermGroupsSecurity] [-IncludeSearchConfiguration] [-PersistBrandingFiles] [-PersistPublishingFiles] [-IncludeNativePublishingFiles] [-IncludeHiddenLists] [-IncludeAllClientSidePages] [-SkipVersionCheck] [-PersistMultiLanguageResources] [-ResourceFilePrefix &amp;lt;String&amp;gt;] [-Handlers &amp;lt;Handlers&amp;gt;] [-ExcludeHandlers &amp;lt;Handlers&amp;gt;] [-ExtensibilityHandlers &amp;lt;ExtensibilityHandler[]&amp;gt;] [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-ContentTypeGroups &amp;lt;String[]&amp;gt;] [-Force] [-NoBaseTemplate] [-Encoding &amp;lt;Encoding&amp;gt;] [-TemplateDisplayName &amp;lt;String&amp;gt;] [-TemplateImagePreviewUrl &amp;lt;String&amp;gt;] [-TemplateProperties &amp;lt;Hashtable&amp;gt;] [-OutputInstance] [-ExcludeContentTypesFromSyndication] [-ListsToExtract &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt;] [-Configuration &amp;lt;ExtractConfigurationPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteTemplate -Out template.pnp Extracts a provisioning template in Office Open XML from the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPSiteUserInvitations</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsiteuserinvitations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsiteuserinvitations/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Searches against all stored sharing links and retrieves the email invites
SYNTAX Get-PnPSiteUserInvitations [[-Site] &amp;lt;SitePipeBind&amp;gt;] -EmailAddress &amp;lt;string&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Searches against all stored sharing links on a Site and retrieves the email invites. If the site parameter is omitted the current site will be searched.
EXAMPLES EXAMPLE 1 Get-PnPiteUserInvitations -Site &amp;#34;https://contoso.sharepoint.com/sites/ContosoWeb1/&amp;#34; -EmailAddress someone@example.com This example retrieves email invites stored in the ContosoWeb1 site to the user with email address someone@example.</description>
    </item>
    
    <item>
      <title>Get-PnPStorageEntity</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpstorageentity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpstorageentity/</guid>
      <description>SYNOPSIS Retrieve Storage Entities / Farm Properties from either the Tenant App Catalog or from the current site if it has a site scope app catalog.
SYNTAX Get-PnPStorageEntity [-Key &amp;lt;String&amp;gt;] [-Scope &amp;lt;StorageEntityScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPStorageEntity Returns all site storage entities/farm properties
EXAMPLE 2 Get-PnPStorageEntity -Key MyKey Returns the storage entity/farm property with the given key.
EXAMPLE 3 Get-PnPStorageEntity -Scope Site Returns all site collection scoped storage entities</description>
    </item>
    
    <item>
      <title>Get-PnPStoredCredential</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpstoredcredential/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpstoredcredential/</guid>
      <description>SYNOPSIS Get a credential
SYNTAX Get-PnPStoredCredential -Name &amp;lt;String&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns a stored credential from the Windows Credential Manager
EXAMPLES EXAMPLE 1 Get-PnPStoredCredential -Name O365 Returns the credential associated with the specified identifier
EXAMPLE 2 Get-PnPStoredCredential -Name testEnvironment -Type OnPrem Gets the credential associated with the specified identifier from the credential manager and then will return a credential that can be used for on-premises authentication
PARAMETERS -Name The credential to retrieve.</description>
    </item>
    
    <item>
      <title>Get-PnPStructuralNavigationCacheSiteState</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpstructuralnavigationcachesitestate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpstructuralnavigationcachesitestate/</guid>
      <description>SYNOPSIS Get the structural navigation caching state for a site collection.
SYNTAX Get-PnPStructuralNavigationCacheSiteState [-SiteUrl &amp;lt;String&amp;gt;]DESCRIPTION The Get-PnPStructuralNavigationCacheSiteState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used. Learn more.
EXAMPLES Example 1 Get-PnPStructuralNavigationCacheSiteState -SiteUrl &amp;#34;https://contoso.sharepoint.com/sites/product/&amp;#34; This example checks if structural navigation caching is enabled for the entire site collection https://contoso.</description>
    </item>
    
    <item>
      <title>Get-PnPStructuralNavigationCacheWebState</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpstructuralnavigationcachewebstate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpstructuralnavigationcachewebstate/</guid>
      <description>SYNOPSIS Get the structural navigation caching state for a web.
SYNTAX Get-PnPStructuralNavigationCacheWebState [-WebUrl &amp;lt;String&amp;gt;]DESCRIPTION The Get-PnPStructuralNavigationCacheWebState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a web in a site collection. If the WebUrl parameter has not been specified the currently connected to web will be used. Learn more.
EXAMPLES Example 1 Get-PnPStructuralNavigationCacheWebState -WebUrl &amp;#34;https://contoso.sharepoint.com/sites/product/electronics&amp;#34; This example checks if structural navigation caching is enabled for the web https://contoso.</description>
    </item>
    
    <item>
      <title>Get-PnPSubWebs</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpsubwebs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpsubwebs/</guid>
      <description>SYNOPSIS Returns the subwebs of the current web
SYNTAX Get-PnPSubWebs [[-Identity] &amp;lt;WebPipeBind&amp;gt;] [-Recurse] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSubWebs Retrieves all subsites of the current context returning the Id, Url, Title and ServerRelativeUrl of each subsite in the output
EXAMPLE 2 Get-PnPSubWebs -Recurse Retrieves all subsites of the current context and all of their nested child subsites returning the Id, Url, Title and ServerRelativeUrl of each subsite in the output</description>
    </item>
    
    <item>
      <title>Get-PnPTaxonomyItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptaxonomyitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptaxonomyitem/</guid>
      <description>SYNOPSIS Returns a taxonomy item
SYNTAX Get-PnPTaxonomyItem [-TermPath] &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPTaxonomySession</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptaxonomysession/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptaxonomysession/</guid>
      <description>SYNOPSIS Returns a taxonomy session
SYNTAX Get-PnPTaxonomySession [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Get-PnPTeamsApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpteamsapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpteamsapp/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of AppCatalog.Read.All, Directory.ReadWrite.All  Gets one Microsoft Teams App or a list of all apps.
SYNTAX Get-PnPTeamsApp [-Identity &amp;lt;TeamsAppPipeBind&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsApp Retrieves all the Microsoft Teams Apps
EXAMPLE 2 Get-PnPTeamsApp -Identity a54224d7-608b-4839-bf74-1b68148e65d4 Retrieves a specific Microsoft Teams App
EXAMPLE 3 Get-PnPTeamsApp -Identity &amp;#34;MyTeamsApp&amp;#34; Retrieves a specific Microsoft Teams App
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPTeamsChannel</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpteamschannel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpteamschannel/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All  Gets the channels for a specified Team.
SYNTAX Get-PnPTeamsChannel -Team &amp;lt;TeamsTeamPipeBind&amp;gt; [-Identity &amp;lt;TeamsChannelPipeBind&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 Retrieves all channels for the specified team
EXAMPLE 2 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity &amp;#34;Test Channel&amp;#34; Retrieves the channel called &amp;lsquo;Test Channel&amp;rsquo;
EXAMPLE 3 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity &amp;#34;19:796d063b63e34497aeaf092c8fb9b44e@thread.skype&amp;#34; Retrieves the channel specified by its channel id</description>
    </item>
    
    <item>
      <title>Get-PnPTeamsChannelMessage</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpteamschannelmessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpteamschannelmessage/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Sends a message to a Microsoft Teams Channel.
SYNTAX Get-PnPTeamsChannelMessage -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Channel &amp;lt;TeamsChannelPipeBind&amp;gt; [-IncludeDeleted] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelMessage -Team MyTestTeam -Channel &amp;#34;My Channel&amp;#34; Gets all messages of the specified channel
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify the group id, mailNickname or display name of the team to use.</description>
    </item>
    
    <item>
      <title>Get-PnPTeamsTab</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpteamstab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpteamstab/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All  Gets one or all tabs in a channel.
SYNTAX Get-PnPTeamsTab -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Channel &amp;lt;TeamsChannelPipeBind&amp;gt; [-Identity &amp;lt;TeamsTabPipeBind&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype Retrieves the tabs for the specified Microsoft Teams instance and channel
EXAMPLE 2 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity &amp;#34;Wiki&amp;#34; Retrieves a tab with the display name &amp;lsquo;Wiki&amp;rsquo; from the specified team and channel</description>
    </item>
    
    <item>
      <title>Get-PnPTeamsTeam</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpteamsteam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpteamsteam/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All  Gets one Microsoft Teams Team or a list of Teams.
SYNTAX Get-PnPTeamsTeam [-Identity &amp;lt;TeamsTeamPipeBind&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsTeam Retrieves all the Microsoft Teams instances
EXAMPLE 2 Get-PnPTeamsTeam -Identity $groupId Retrieves a specific Microsoft Teams instance
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Get-PnPTeamsUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpteamsuser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpteamsuser/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All  Returns owners, members or guests from a team.
SYNTAX Get-PnPTeamsUser -Team &amp;lt;TeamsTeamPipeBind&amp;gt; [-Channel &amp;lt;TeamsChannelPipeBind&amp;gt;] [-Role &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsUser -Team MyTeam Returns all owners, members or guests from the specified team.
EXAMPLE 2 Get-PnPTeamsUser -Team MyTeam -Role Owner Returns all owners from the specified team.
EXAMPLE 3 Get-PnPTeamsUser -Team MyTeam -Role Member Returns all members from the specified team.</description>
    </item>
    
    <item>
      <title>Get-PnPTenant</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenant/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns organization-level site collection properties
SYNTAX Get-PnPTenant [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns organization-level site collection properties such as StorageQuota, StorageQuotaAllocated, ResourceQuota, ResourceQuotaAllocated, and SiteCreationMode.
Currently, there are no parameters for this cmdlet.
You must have the SharePoint Online admin or Global admin role to run the cmdlet.
EXAMPLES EXAMPLE 1 Get-PnPTenant This example returns all tenant settings</description>
    </item>
    
    <item>
      <title>Get-PnPTenantAppCatalogUrl</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantappcatalogurl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantappcatalogurl/</guid>
      <description>SYNOPSIS Retrieves the url of the tenant scoped app catalog
SYNTAX Get-PnPTenantAppCatalogUrl [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantAppCatalogUrl Returns the url of the tenant scoped app catalog site collection
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPTenantCdnEnabled</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantcdnenabled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantcdnenabled/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieves if the Office 365 Content Delivery Network has been enabled.
SYNTAX Get-PnPTenantCdnEnabled -CdnType &amp;lt;SPOTenantCdnType&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Enables or disabled the public or private Office 365 Content Delivery Network (CDN).
EXAMPLES EXAMPLE 1 Get-PnPTenantCdnEnabled -CdnType Public Returns the enabled status of the specified CDN
PARAMETERS -CdnType The type of cdn to retrieve the origins from</description>
    </item>
    
    <item>
      <title>Get-PnPTenantCdnOrigin</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantcdnorigin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantcdnorigin/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the current registered origins from the public or private content delivery network (CDN).
SYNTAX Get-PnPTenantCdnOrigin -CdnType &amp;lt;SPOTenantCdnType&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns the current registered origins from the public or private content delivery network (CDN).
EXAMPLES EXAMPLE 1 Get-PnPTenantCdnOrigin -CdnType Public Returns the configured CDN origins for the specified CDN type
PARAMETERS -CdnType The type of cdn to retrieve the origins from</description>
    </item>
    
    <item>
      <title>Get-PnPTenantCdnPolicies</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantcdnpolicies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantcdnpolicies/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the CDN Policies for the specified CDN (Public | Private).
SYNTAX Get-PnPTenantCdnPolicies -CdnType &amp;lt;SPOTenantCdnType&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Enables or disabled the public or private Office 365 Content Delivery Network (CDN).
EXAMPLES EXAMPLE 1 Get-PnPTenantCdnPolicies -CdnType Public Returns the policies for the specified CDN type
PARAMETERS -CdnType The type of cdn to retrieve the policies from</description>
    </item>
    
    <item>
      <title>Get-PnPTenantId</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantid/</guid>
      <description>SYNOPSIS Returns the Tenant ID
SYNTAX Get-PnPTenantId [-TenantUrl &amp;lt;String&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantId Returns the current Tenant Id. A valid connection with Connect-PnPOnline is required.
EXAMPLE 2 Get-PnPTenantId -TenantUrl &amp;#34;https://contoso.sharepoint.com&amp;#34; Returns the Tenant ID for the specified tenant. Can be executed without a connecting first with Connect-PnPOnline
PARAMETERS -TenantUrl Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPTenantRecycleBinItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantrecyclebinitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantrecyclebinitem/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns all modern and classic site collections in the tenant scoped recycle bin
SYNTAX Get-PnPTenantRecycleBinItem [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command will return all the items in the tenant recycle bin for the Office 365 tenant you are connected to. Be sure to connect to the SharePoint Online Admin endpoint (https://yourtenantname-admin.sharepoint.com) in order for this command to work.</description>
    </item>
    
    <item>
      <title>Get-PnPTenantSequence</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantsequence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantsequence/</guid>
      <description>SYNOPSIS Returns one ore more provisioning sequence object(s) from a tenant template
SYNTAX Get-PnPTenantSequence -Template &amp;lt;ProvisioningHierarchy&amp;gt; [-Identity &amp;lt;ProvisioningSequencePipeBind&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantSequence -Template $myTemplateObject Returns all sequences from the specified tenant template
EXAMPLE 2 Get-PnPTenantSequence -Template $myTemplateObject -Identity &amp;#34;mysequence&amp;#34; Returns the specified sequence from the specified tenant template
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Optional Id of the sequence</description>
    </item>
    
    <item>
      <title>Get-PnPTenantSequenceSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantsequencesite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantsequencesite/</guid>
      <description>SYNOPSIS Returns one ore more sites from a tenant template
SYNTAX Get-PnPTenantSequenceSite -Sequence &amp;lt;ProvisioningSequence&amp;gt; [-Identity &amp;lt;ProvisioningSitePipeBind&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantSequenceSite -Sequence $mysequence Returns all sites from the specified sequence
EXAMPLE 2 Get-PnPTenantSequenceSite -Sequence $mysequence -Identity 8058ea99-af7b-4bb7-b12a-78f93398041e Returns the specified site from the specified sequence
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Optional Id of the site</description>
    </item>
    
    <item>
      <title>Get-PnPTenantServicePrincipal</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantserviceprincipal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantserviceprincipal/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
SYNTAX Get-PnPTenantServicePrincipal [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns the current tenant&amp;rsquo;s &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Get-PnPTenantServicePrincipalPermissionGrants</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantserviceprincipalpermissiongrants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantserviceprincipalpermissiongrants/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Gets the collection of permission grants for the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal
SYNTAX Get-PnPTenantServicePrincipalPermissionGrants [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Gets the collection of permission grants for the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
A permission grant contains the following properties:
 ClientId: The objectId of the service principal granted consent to impersonate the user when accessing the resource(represented by the resourceId).</description>
    </item>
    
    <item>
      <title>Get-PnPTenantServicePrincipalPermissionRequests</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantserviceprincipalpermissionrequests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantserviceprincipalpermissionrequests/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Gets the collection of permission requests for the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal
SYNTAX Get-PnPTenantServicePrincipalPermissionRequests [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Gets the collection of permission requests for the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
Permission request object
A permission request contains the following properties:
 Id: The identifier of the request. Resource: The resource that the application requires access to.</description>
    </item>
    
    <item>
      <title>Get-PnPTenantSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieve site information.
SYNTAX Get-PnPTenantSite [[-Url] &amp;lt;String&amp;gt;] [-Template &amp;lt;String&amp;gt;] [-Detailed] [-IncludeOneDriveSites] [-Filter &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Use this cmdlet to retrieve site information from your tenant administration.
EXAMPLES EXAMPLE 1 Get-PnPTenantSite Returns all site collections
EXAMPLE 2 Get-PnPTenantSite -Url &amp;#34;http://tenant.sharepoint.com/sites/projects&amp;#34; Returns information about the project site
EXAMPLE 3 Get-PnPTenantSite -Detailed Returns all sites with the full details of these sites</description>
    </item>
    
    <item>
      <title>Get-PnPTenantSyncClientRestriction</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenantsyncclientrestriction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenantsyncclientrestriction/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns organization-level OneDrive synchronization restriction settings
SYNTAX Get-PnPTenantSyncClientRestriction [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns organization-level OneDrive synchronization restriction properties such as BlockMacSync, OptOutOfGrooveBlock, and TenantRestrictionEnabled.
Currently, there are no parameters for this cmdlet.
You must have the SharePoint Online admin or Global admin role to run the cmdlet.
EXAMPLES EXAMPLE 1 Get-PnPTenantSyncClientRestriction This example returns all tenant OneDrive synchronization restriction settings</description>
    </item>
    
    <item>
      <title>Get-PnPTenantTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenanttemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenanttemplate/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Generates a provisioning tenant template from a site. If the site is a hubsite any connected site will be included.
SYNTAX Extract a template to a file Get-PnPTenantTemplate [-SiteUrl &amp;lt;String&amp;gt;] [-Out] &amp;lt;String&amp;gt; [-Force] [-Configuration &amp;lt;ExtractConfigurationPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Extract a template as an object Get-PnPTenantTemplate [-SiteUrl &amp;lt;String&amp;gt;] [-AsInstance] [-Configuration &amp;lt;ExtractConfigurationPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantTemplate -Out tenanttemplate.</description>
    </item>
    
    <item>
      <title>Get-PnPTenantTheme</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptenanttheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptenanttheme/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns all or a specific theme
SYNTAX Get-PnPTenantTheme [[-Name] &amp;lt;String&amp;gt;] [-AsJson] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns all or a specific tenant theme.
EXAMPLES EXAMPLE 1 Get-PnPTenantTheme Returns all themes
EXAMPLE 2 Get-PnPTenantTheme -Name &amp;#34;MyCompanyTheme&amp;#34; Returns the specified theme
PARAMETERS -AsJson {{ Fill AsJson Description }}
Type: SwitchParameter Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPTerm</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpterm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpterm/</guid>
      <description>SYNOPSIS Returns a Term Store Term.
SYNTAX By Term Id Get-PnPTerm -Identity &amp;lt;Guid&amp;gt; [-TermStore &amp;lt;Guid&amp;gt;] [-IncludeChildTerms] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] By Term Name Get-PnPTerm -Identity &amp;lt;Name&amp;gt; -TermSet &amp;lt;Guid|Name&amp;gt; -TermGroup &amp;lt;Guid|Name&amp;gt; [-TermStore &amp;lt;Guid&amp;gt;] [-Recursive] [-IncludeChildTerms] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Retries a Term Store Term.
EXAMPLES EXAMPLE 1 Get-PnPTerm -TermSet &amp;#34;Departments&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34; Returns all term in the termset &amp;ldquo;Departments&amp;rdquo; which is in the group &amp;ldquo;Corporate&amp;rdquo; from the site collection termstore</description>
    </item>
    
    <item>
      <title>Get-PnPTermGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptermgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptermgroup/</guid>
      <description>SYNOPSIS Returns a taxonomy term group
SYNTAX Get-PnPTermGroup [-Identity &amp;lt;TaxonomyTermGroupPipeBind&amp;gt;] [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTermGroup Returns all Term Groups in the site collection termstore
EXAMPLE 2 Get-PnPTermGroup -Identity &amp;#34;Departments&amp;#34; Returns the termgroup named &amp;ldquo;Departments&amp;rdquo; from the site collection termstore
EXAMPLE 3 Get-PnPTermGroup -Identity ab2af486-e097-4b4a-9444-527b251f1f8d Returns the termgroup with the given ID from the site collection termstore
PARAMETERS -Identity Name of the taxonomy term group to retrieve.</description>
    </item>
    
    <item>
      <title>Get-PnPTermLabel</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptermlabel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptermlabel/</guid>
      <description>SYNOPSIS Returns all or a specific translation label for a term.
SYNTAX By Term Id Get-PnPTermLabel -Term &amp;lt;Guid&amp;gt; [-Lcid &amp;lt;Int32&amp;gt;] [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [&amp;lt;CommonParameters&amp;gt;]By Term Name Get-PnPTermLabel -Term &amp;lt;String&amp;gt; [-Lcid &amp;lt;Int32&amp;gt;] -TermSet &amp;lt;TaxonomyTermSetPipeBind&amp;gt;-TermGroup &amp;lt;TaxonomyTermGroupPipeBind&amp;gt; [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [&amp;lt;CommonParameters&amp;gt;]DESCRIPTION This cmdlets allows to retrieve all or a specific translation label for a term
EXAMPLES Example 1 Get-PnPTermLabel -Term af8601d6-d925-46dd-af7b-4a58515ffd83 Returns all translation labels for a term
Example 2 Get-PnPTermLabel -Term af8601d6-d925-46dd-af7b-4a58515ffd83 -Lcid 1033 Returns all translation labels for a term for a specific language</description>
    </item>
    
    <item>
      <title>Get-PnPTermSet</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptermset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptermset/</guid>
      <description>SYNOPSIS Returns a taxonomy term set
SYNTAX Get-PnPTermSet [-Identity &amp;lt;TaxonomyTermSetPipeBind&amp;gt;] [-TermGroup] &amp;lt;TaxonomyTermGroupPipeBind&amp;gt;[-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;][&amp;lt;CommonParameters&amp;gt;]DESCRIPTION This cmdlet returns a termset from the taxonomy store.
EXAMPLES EXAMPLE 1 Get-PnPTermSet -TermGroup &amp;#34;Corporate&amp;#34; Returns all termsets in the group &amp;ldquo;Corporate&amp;rdquo; from the site collection termstore
EXAMPLE 2 Get-PnPTermSet -Identity &amp;#34;Departments&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34; Returns the termset named &amp;ldquo;Departments&amp;rdquo; from the termgroup called &amp;ldquo;Corporate&amp;rdquo; from the site collection termstore
EXAMPLE 3 Get-PnPTermSet -Identity ab2af486-e097-4b4a-9444-527b251f1f8d -TermGroup &amp;#34;Corporate Returns the termset with the given id from the termgroup called &amp;ldquo;Corporate&amp;rdquo; from the site collection termstore</description>
    </item>
    
    <item>
      <title>Get-PnPTheme</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptheme/</guid>
      <description>SYNOPSIS Returns the current theme/composed look of the current web.
SYNTAX Get-PnPTheme [-DetectCurrentComposedLook] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTheme Returns the current composed look of the current web.
EXAMPLE 2 Get-PnPTheme -DetectCurrentComposedLook Returns the current composed look of the current web, and will try to detect the currently applied composed look based upon the actual site. Without this switch the cmdlet will first check for the presence of a property bag variable called _PnP_SiteTemplateComposedLookInfo that contains composed look information when applied through the provisioning engine or the Set-PnPTheme cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPTimeZoneId</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnptimezoneid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnptimezoneid/</guid>
      <description>SYNOPSIS Returns a time zone ID
SYNTAX Get-PnPTimeZoneId [[-Match] &amp;lt;String&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION In order to create a new classic site you need to specify the timezone this site will use. Use the cmdlet to retrieve a list of possible values.
EXAMPLES EXAMPLE 1 Get-PnPTimeZoneId This will return all time zone IDs in use by Office 365.
EXAMPLE 2 Get-PnPTimeZoneId -Match Stockholm This will return the time zone IDs for Stockholm</description>
    </item>
    
    <item>
      <title>Get-PnPUnifiedAuditLog</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpunifiedauditlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpunifiedauditlog/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Office 365 Management API: ActivityFeed.Read  Gets unified audit logs from the Office 365 Management API. Requires the Azure Active Directory application permission &amp;lsquo;ActivityFeed.Read&amp;rsquo;.
SYNTAX Get-PnPUnifiedAuditLog [-ContentType &amp;lt;AuditContentType&amp;gt;] [-StartTime &amp;lt;DateTime&amp;gt;] [-EndTime &amp;lt;DateTime&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPUnifiedAuditLog -ContentType SharePoint -StartTime (Get-Date).AddDays(-1) -EndTime (Get-Date).AddDays(-2) Retrieves the audit logs of SharePoint happening between the current time yesterday and the current time the day before yesterday</description>
    </item>
    
    <item>
      <title>Get-PnPUPABulkImportStatus</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpupabulkimportstatus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpupabulkimportstatus/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Get user profile bulk import status.
SYNTAX Get-PnPUPABulkImportStatus [-JobId &amp;lt;Guid&amp;gt;] [-IncludeErrorDetails] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Retrieve information about the status of submitted user profile bulk upload jobs.
EXAMPLES EXAMPLE 1 Get-PnPUPABulkImportStatus This will list the status of all submitted user profile bulk import jobs.
EXAMPLE 2 Get-PnPUPABulkImportStatus -IncludeErrorDetails This will list the status of all submitted user profile bulk import jobs, and if it contains an error it will include the error log messages if present.</description>
    </item>
    
    <item>
      <title>Get-PnPUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpuser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpuser/</guid>
      <description>SYNOPSIS Returns site users of current web
SYNTAX Identity based request (Default) Get-PnPUser [-Identity &amp;lt;UserPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] With rights assigned Get-PnPUser [-WithRightsAssigned] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] With rights assigned detailed Get-PnPUser [-WithRightsAssignedDetailed] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command will return all users that exist in the current site collection&amp;rsquo;s User Information List, optionally identifying their current permissions to this site
EXAMPLES EXAMPLE 1 Get-PnPUser Returns all users from the User Information List of the current site collection regardless if they currently have rights to access the current site</description>
    </item>
    
    <item>
      <title>Get-PnPUserOneDriveQuota</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpuseronedrivequota/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpuseronedrivequota/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Retrieves the current quota set on the OneDrive for Business site for a specific user
SYNTAX Get-PnPUserOneDriveQuota [-Account] &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows you to request the quota set on the OneDrive for Business site of a specific user. You must connect to the tenant admin website (https://:-admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet.</description>
    </item>
    
    <item>
      <title>Get-PnPUserProfileProperty</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpuserprofileproperty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpuserprofileproperty/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  You must connect to the tenant admin website (https://:-admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet.
SYNTAX Get-PnPUserProfileProperty [-Account] &amp;lt;String[]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Requires a connection to a SharePoint Tenant Admin site.
EXAMPLES EXAMPLE 1 Get-PnPUserProfileProperty -Account &amp;#39;user@domain.com&amp;#39; Returns the profile properties for the specified user
EXAMPLE 2 Get-PnPUserProfileProperty -Account &amp;#39;user@domain.com&amp;#39;,&amp;#39;user2@domain.com&amp;#39; Returns the profile properties for the specified users</description>
    </item>
    
    <item>
      <title>Get-PnPView</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpview/</guid>
      <description>SYNOPSIS Returns one or all views from a list
SYNTAX Get-PnPView [-List] &amp;lt;ListPipeBind&amp;gt; [-Identity &amp;lt;ViewPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPView -List &amp;#34;Demo List&amp;#34; Returns all views associated from the specified list
EXAMPLE 2 Get-PnPView -List &amp;#34;Demo List&amp;#34; -Identity &amp;#34;Demo View&amp;#34; Returns the view called &amp;ldquo;Demo View&amp;rdquo; from the specified list
EXAMPLE 3 Get-PnPView -List &amp;#34;Demo List&amp;#34; -Identity &amp;#34;5275148a-6c6c-43d8-999a-d2186989a661&amp;#34; Returns the view with the specified ID from the specified list</description>
    </item>
    
    <item>
      <title>Get-PnPWeb</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpweb/</guid>
      <description>SYNOPSIS Returns the current web object
SYNTAX Get-PnPWeb [[-Identity] &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWeb This will return the current web
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid of the web or web object</description>
    </item>
    
    <item>
      <title>Get-PnPWebhookSubscriptions</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpwebhooksubscriptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpwebhooksubscriptions/</guid>
      <description>SYNOPSIS Gets all the Webhook subscriptions of the resource
SYNTAX Get-PnPWebhookSubscriptions [-List &amp;lt;ListPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWebhookSubscriptions -List MyList Gets all Webhook subscriptions of the list MyList
EXAMPLE 2 Get-PnPList | Get-PnPWebhookSubscriptions Gets all Webhook subscriptions of the all the lists
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPWebPart</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpwebpart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpwebpart/</guid>
      <description>SYNOPSIS Returns a web part definition object
SYNTAX Get-PnPWebPart -ServerRelativePageUrl &amp;lt;String&amp;gt; [-Identity &amp;lt;WebPartPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWebPart -ServerRelativePageUrl &amp;#34;/sites/demo/sitepages/home.aspx&amp;#34; Returns all webparts defined on the given page.
EXAMPLE 2 Get-PnPWebPart -ServerRelativePageUrl &amp;#34;/sites/demo/sitepages/home.aspx&amp;#34; -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 Returns a specific web part defined on the given page.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPWebPartProperty</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpwebpartproperty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpwebpartproperty/</guid>
      <description>SYNOPSIS Returns a web part property
SYNTAX Get-PnPWebPartProperty -ServerRelativePageUrl &amp;lt;String&amp;gt; -Identity &amp;lt;Guid&amp;gt; [-Key &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 Returns all properties of the web part.
EXAMPLE 2 Get-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 -Key &amp;#34;Title&amp;#34; Returns the title property of the web part.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPWebPartXml</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpwebpartxml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpwebpartxml/</guid>
      <description>SYNOPSIS Returns the web part XML of a web part registered on a site
SYNTAX Get-PnPWebPartXml -ServerRelativePageUrl &amp;lt;String&amp;gt; -Identity &amp;lt;WebPartPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWebPartXml -ServerRelativePageUrl &amp;#34;/sites/demo/sitepages/home.aspx&amp;#34; -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 Returns the web part XML for a given web part on a page.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Get-PnPWebTemplates</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpwebtemplates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpwebtemplates/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns the available classic web templates
SYNTAX Get-PnPWebTemplates [-Lcid &amp;lt;UInt32&amp;gt;] [-CompatibilityLevel &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Will list all available classic templates one can use to create a site. Modern templates will not be returned.
EXAMPLES EXAMPLE 1 Get-PnPWebTemplates EXAMPLE 2 Get-PnPWebTemplates -LCID 1033 Returns all webtemplates for the Locale with ID 1033 (English)
EXAMPLE 3 Get-PnPWebTemplates -CompatibilityLevel 15 Returns all webtemplates for the compatibility level 15</description>
    </item>
    
    <item>
      <title>Get-PnPWikiPageContent</title>
      <link>https://pnp.github.io/powershell/cmdlets/get-pnpwikipagecontent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/get-pnpwikipagecontent/</guid>
      <description>SYNOPSIS Gets the contents/source of a wiki page
SYNTAX Get-PnPWikiPageContent [-ServerRelativePageUrl] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWikiPageContent -PageUrl &amp;#39;/sites/demo1/pages/wikipage.aspx&amp;#39; Gets the content of the page &amp;lsquo;/sites/demo1/pages/wikipage.aspx&amp;rsquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl The server relative URL for the wiki page</description>
    </item>
    
    <item>
      <title>Grant-PnPHubSiteRights</title>
      <link>https://pnp.github.io/powershell/cmdlets/grant-pnphubsiterights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/grant-pnphubsiterights/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Grant additional permissions to the permissions already in place to associate sites to Hub Sites for one or more specific users
SYNTAX Grant-PnPHubSiteRights [-Identity] &amp;lt;HubSitePipeBind&amp;gt; -Principals &amp;lt;String[]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Grant-PnPHubSiteRights -Identity &amp;#34;https://contoso.sharepoint.com/sites/hubsite&amp;#34; -Principals &amp;#34;myuser@mydomain.com&amp;#34;,&amp;#34;myotheruser@mydomain.com&amp;#34; This example shows how to grant rights to myuser and myotheruser to associate their sites with the provided Hub Site</description>
    </item>
    
    <item>
      <title>Grant-PnPSiteDesignRights</title>
      <link>https://pnp.github.io/powershell/cmdlets/grant-pnpsitedesignrights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/grant-pnpsitedesignrights/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Grants the specified principals rights to use the site design.
SYNTAX Grant-PnPSiteDesignRights [-Identity] &amp;lt;TenantSiteDesignPipeBind&amp;gt; -Principals &amp;lt;String[]&amp;gt; [-Rights &amp;lt;TenantSiteDesignPrincipalRights&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Grant-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -Principals &amp;#34;myuser@mydomain.com&amp;#34;,&amp;#34;myotheruser@mydomain.com&amp;#34; Grants the specified principals View rights on the site design specified
EXAMPLE 2 Get-PnPSiteDesign -Title &amp;#34;MySiteDesign&amp;#34; -SiteScriptIds 438548fd-60dd-42cf-b843-2db506c8e259 -WebTemplate TeamSite | Grant-PnPSiteDesignRights -Principals &amp;#34;myuser@mydomain.com&amp;#34;,&amp;#34;myotheruser@mydomain.com&amp;#34; Grants the specified principals View rights on the site design specified</description>
    </item>
    
    <item>
      <title>Grant-PnPTenantServicePrincipalPermission</title>
      <link>https://pnp.github.io/powershell/cmdlets/grant-pnptenantserviceprincipalpermission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/grant-pnptenantserviceprincipalpermission/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Explicitly grants a specified permission to the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal
SYNTAX Grant-PnPTenantServicePrincipalPermission -Scope &amp;lt;String&amp;gt; -Resource &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Grant-PnPTenantServicePrincipalPermission -Scope &amp;#34;Group.Read.All&amp;#34; -Resource &amp;#34;Microsoft Graph&amp;#34; This will explicitly grant the Group.Read.All permission on the Microsoft Graph resource
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Import-PnPTaxonomy</title>
      <link>https://pnp.github.io/powershell/cmdlets/import-pnptaxonomy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/import-pnptaxonomy/</guid>
      <description>SYNOPSIS Imports a taxonomy from either a string array or a file
SYNTAX Direct Import-PnPTaxonomy [-Terms &amp;lt;String[]&amp;gt;] [-Lcid &amp;lt;Int32&amp;gt;] [-TermStoreName &amp;lt;String&amp;gt;] [-Delimiter &amp;lt;String&amp;gt;] [-SynchronizeDeletions] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] File Import-PnPTaxonomy -Path &amp;lt;String&amp;gt; [-Lcid &amp;lt;Int32&amp;gt;] [-TermStoreName &amp;lt;String&amp;gt;] [-Delimiter &amp;lt;String&amp;gt;] [-SynchronizeDeletions] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Import-PnPTaxonomy -Terms &amp;#39;Company|Locations|Stockholm&amp;#39; Creates a new termgroup, &amp;lsquo;Company&amp;rsquo;, a termset &amp;lsquo;Locations&amp;rsquo; and a term &amp;lsquo;Stockholm&amp;rsquo;
EXAMPLE 2 Import-PnPTaxonomy -Terms &amp;#39;Company|Locations|Stockholm|Central&amp;#39;,&amp;#39;Company|Locations|Stockholm|North&amp;#39; Creates a new termgroup, &amp;lsquo;Company&amp;rsquo;, a termset &amp;lsquo;Locations&amp;rsquo;, a term &amp;lsquo;Stockholm&amp;rsquo; and two subterms: &amp;lsquo;Central&amp;rsquo;, and &amp;lsquo;North&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Import-PnPTermGroupFromXml</title>
      <link>https://pnp.github.io/powershell/cmdlets/import-pnptermgroupfromxml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/import-pnptermgroupfromxml/</guid>
      <description>SYNOPSIS Imports a taxonomy TermGroup from either the input or from an XML file.
SYNTAX XML Import-PnPTermGroupFromXml [[-Xml] &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] File Import-PnPTermGroupFromXml [-Path &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Import-PnPTermGroupFromXml -Xml $xml Imports the XML based termgroup information located in the $xml variable
EXAMPLE 2 Import-PnPTermGroupFromXml -Path input.xml Imports the XML file specified by the path.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>Import-PnPTermSet</title>
      <link>https://pnp.github.io/powershell/cmdlets/import-pnptermset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/import-pnptermset/</guid>
      <description>SYNOPSIS Imports a taxonomy term set from a file in the standard format.
SYNTAX Import-PnPTermSet -GroupName &amp;lt;String&amp;gt; -Path &amp;lt;String&amp;gt; [-TermSetId &amp;lt;Guid&amp;gt;] [-SynchronizeDeletions] [-IsOpen &amp;lt;Boolean&amp;gt;] [-Contact &amp;lt;String&amp;gt;] [-Owner &amp;lt;String&amp;gt;] [-TermStoreName &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION The format of the file is the same as that used by the import function in the web interface. A sample file can be obtained from the web interface.
This is a CSV file, with the following headings:</description>
    </item>
    
    <item>
      <title>Initialize-PnPPowerShellAuthentication</title>
      <link>https://pnp.github.io/powershell/cmdlets/initialize-pnppowershellauthentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/initialize-pnppowershellauthentication/</guid>
      <description>SYNOPSIS Initializes a Azure AD App and optionally creates a new self-signed certificate to use with the application registration.
SYNTAX Generate Certificate Initialize-PnPPowerShellAuthentication -ApplicationName &amp;lt;String&amp;gt; -Tenant &amp;lt;String&amp;gt; [-CommonName &amp;lt;String&amp;gt;] [-OutPath &amp;lt;String&amp;gt;] [-Store &amp;lt;StoreLocation&amp;gt;] [-Scopes &amp;lt;String[]&amp;gt;] [-Country &amp;lt;String&amp;gt;] [-State &amp;lt;String&amp;gt;] [-Locality &amp;lt;String&amp;gt;] [-Organization &amp;lt;String&amp;gt;] [-OrganizationUnit &amp;lt;String&amp;gt;] [-ValidYears &amp;lt;Int&amp;gt;] [-CertificatePassword &amp;lt;SecureString&amp;gt;] Existing Certificate Initialize-PnPPowerShellAuthentication -CertificatePath &amp;lt;String&amp;gt; -ApplicationName &amp;lt;String&amp;gt; -Tenant &amp;lt;String&amp;gt; [-Scopes &amp;lt;String[]&amp;gt;] [-CertificatePassword &amp;lt;SecureString&amp;gt;] DESCRIPTION Initializes a Azure AD App and optionally creates a new self-signed certificate to use with the application registration.</description>
    </item>
    
    <item>
      <title>Install-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/install-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/install-pnpapp/</guid>
      <description>SYNOPSIS Installs an available app from the app catalog
SYNTAX Install-PnPApp [-Identity] &amp;lt;AppMetadataPipeBind&amp;gt; [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Wait] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Install-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will install an app that is available in the tenant scoped app catalog, specified by the id, to the current site.
EXAMPLE 2 Install-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will install an app that is available in the site collection scoped app catalog, specified by the id, to the current site.</description>
    </item>
    
    <item>
      <title>Install-PnPSolution</title>
      <link>https://pnp.github.io/powershell/cmdlets/install-pnpsolution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/install-pnpsolution/</guid>
      <description>SYNOPSIS Installs a sandboxed solution to a site collection. WARNING! This method can delete your composed look gallery due to the method used to activate the solution. We recommend you to only to use this cmdlet if you are okay with that.
SYNTAX Install-PnPSolution -PackageId &amp;lt;Guid&amp;gt; -SourceFilePath &amp;lt;String&amp;gt; [-MajorVersion &amp;lt;Int32&amp;gt;] [-MinorVersion &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Install-PnPSolution -PackageId c2f5b025-7c42-4d3a-b579-41da3b8e7254 -SourceFilePath mypackage.wsp Installs the package to the current site</description>
    </item>
    
    <item>
      <title>Invoke-PnPQuery</title>
      <link>https://pnp.github.io/powershell/cmdlets/invoke-pnpquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/invoke-pnpquery/</guid>
      <description>SYNOPSIS Executes the currently queued actions
SYNTAX Invoke-PnPQuery [-RetryCount &amp;lt;Int32&amp;gt;] [-RetryWait &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Executes any queued actions / changes on the SharePoint Client Side Object Model Context
EXAMPLES EXAMPLE 1 Invoke-PnPQuery -RetryCount 5 This will execute any queued actions / changes on the SharePoint Client Side Object Model Context and will retry 5 times in case of throttling.
EXAMPLE 2 Invoke-PnPQuery -RetryWait 10 This will execute any queued actions / changes on the SharePoint Client Side Object Model Context and delay the execution for 10 seconds before it retries the execution.</description>
    </item>
    
    <item>
      <title>Invoke-PnPSiteDesign</title>
      <link>https://pnp.github.io/powershell/cmdlets/invoke-pnpsitedesign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/invoke-pnpsitedesign/</guid>
      <description>SYNOPSIS Apply a Site Design to an existing site. * Requires Tenant Administration Rights *
SYNTAX Invoke-PnPSiteDesign [-Identity] &amp;lt;TenantSiteDesignPipeBind&amp;gt; [-WebUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Invoke-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Applies the specified site design to the current site.
EXAMPLE 2 Invoke-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -WebUrl &amp;#34;https://contoso.sharepoint.com/sites/mydemosite&amp;#34; Applies the specified site design to the specified site.
EXAMPLE 3 Get-PnPSiteDesign | ?{$_.Title -eq &amp;#34;Demo&amp;#34;} | Invoke-PnPSiteDesign Applies the specified site design to the specified site.</description>
    </item>
    
    <item>
      <title>Invoke-PnPSiteSwap</title>
      <link>https://pnp.github.io/powershell/cmdlets/invoke-pnpsiteswap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/invoke-pnpsiteswap/</guid>
      <description>SYNOPSIS Invokes a job to swap the location of a site with another site while archiving the original site.
SYNTAX Invoke-PnPSiteSwap -SourceUrl &amp;lt;string&amp;gt; -TargetUrl &amp;lt;string&amp;gt; -ArchiveUrl &amp;lt;string&amp;gt; [-DisableRedirection] [-NoWait] DESCRIPTION Swaps the location of a source site with a target site while archiving the original target site.
Please note, the target site must be either:
 The root site, for example https://tenant-name.sharepoint.com; or The search center site, for example https://tenant-name.sharepoint.com/search.  When the swap is initiated, the target site is moved to the archive location and the source site is moved to the target location.</description>
    </item>
    
    <item>
      <title>Invoke-PnPSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/invoke-pnpsitetemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/invoke-pnpsitetemplate/</guid>
      <description>SYNOPSIS Applies a site template to a web
SYNTAX Path Invoke-PnPSiteTemplate [-Path] &amp;lt;String&amp;gt; [-TemplateId &amp;lt;String&amp;gt;] [-ResourceFolder &amp;lt;String&amp;gt;] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Parameters &amp;lt;Hashtable&amp;gt;] [-Handlers &amp;lt;Handlers&amp;gt;] [-ExcludeHandlers &amp;lt;Handlers&amp;gt;] [-ExtensibilityHandlers &amp;lt;ExtensibilityHandler[]&amp;gt;] [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Instance Invoke-PnPSiteTemplate [-TemplateId &amp;lt;String&amp;gt;] [-ResourceFolder &amp;lt;String&amp;gt;] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Parameters &amp;lt;Hashtable&amp;gt;] [-Handlers &amp;lt;Handlers&amp;gt;] [-ExcludeHandlers &amp;lt;Handlers&amp;gt;] [-ExtensibilityHandlers &amp;lt;ExtensibilityHandler[]&amp;gt;] [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-InputInstance &amp;lt;SiteTemplate&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Invoke-PnPSiteTemplate -Path template.</description>
    </item>
    
    <item>
      <title>Invoke-PnPSPRestMethod</title>
      <link>https://pnp.github.io/powershell/cmdlets/invoke-pnpsprestmethod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/invoke-pnpsprestmethod/</guid>
      <description>SYNOPSIS Invokes a REST request towards a SharePoint site
SYNTAX Invoke-PnPSPRestMethod -Url &amp;lt;String&amp;gt; [-Method &amp;lt;HttpRequestMethod&amp;gt;] [-Content &amp;lt;Object&amp;gt;] [-ContentType &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] DESCRIPTION Invokes a REST request towards a SharePoint site
EXAMPLES  </description>
    </item>
    
    <item>
      <title>Invoke-PnPTenantTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/invoke-pnptenanttemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/invoke-pnptenanttemplate/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Applies a tenant template to the current tenant. You must have the Office 365 Global Admin role to run this cmdlet successfully.
SYNTAX By Path Invoke-PnPTenantTemplate [-Path] &amp;lt;String&amp;gt; [-SequenceId &amp;lt;String&amp;gt;] [-ResourceFolder &amp;lt;String&amp;gt;] [-Handlers &amp;lt;Handlers&amp;gt;] [-ExcludeHandlers &amp;lt;Handlers&amp;gt;] [-ExtensibilityHandlers &amp;lt;ExtensibilityHandler[]&amp;gt;] [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-Parameters &amp;lt;Hashtable&amp;gt;] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Configuration &amp;lt;ApplyConfigurationPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] By Object Invoke-PnPTenantTemplate [-Template] &amp;lt;ProvisioningHierarchy&amp;gt; [-SequenceId &amp;lt;String&amp;gt;] [-ResourceFolder &amp;lt;String&amp;gt;] [-Handlers &amp;lt;Handlers&amp;gt;] [-ExcludeHandlers &amp;lt;Handlers&amp;gt;] [-ExtensibilityHandlers &amp;lt;ExtensibilityHandler[]&amp;gt;] [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-Parameters &amp;lt;Hashtable&amp;gt;] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Configuration &amp;lt;ApplyConfigurationPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Invoke-PnPTenantTemplate -Path myfile.</description>
    </item>
    
    <item>
      <title>Invoke-PnPWebAction</title>
      <link>https://pnp.github.io/powershell/cmdlets/invoke-pnpwebaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/invoke-pnpwebaction/</guid>
      <description>SYNOPSIS Executes operations on web, lists and list items.
SYNTAX Invoke-PnPWebAction [-ListName &amp;lt;String&amp;gt;] [-Webs &amp;lt;Web[]&amp;gt;] [-WebAction &amp;lt;System.Action`1[Microsoft.SharePoint.Client.Web]&amp;gt;] [-ShouldProcessWebAction &amp;lt;System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean]&amp;gt;] [-PostWebAction &amp;lt;System.Action`1[Microsoft.SharePoint.Client.Web]&amp;gt;] [-ShouldProcessPostWebAction &amp;lt;System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean]&amp;gt;] [-WebProperties &amp;lt;String[]&amp;gt;] [-ListAction &amp;lt;System.Action`1[Microsoft.SharePoint.Client.List]&amp;gt;] [-ShouldProcessListAction &amp;lt;System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean]&amp;gt;] [-PostListAction &amp;lt;System.Action`1[Microsoft.SharePoint.Client.List]&amp;gt;] [-ShouldProcessPostListAction &amp;lt;System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean]&amp;gt;] [-ListProperties &amp;lt;String[]&amp;gt;] [-ListItemAction &amp;lt;System.Action`1[Microsoft.SharePoint.Client.ListItem]&amp;gt;] [-ShouldProcessListItemAction &amp;lt;System.Func`2[Microsoft.SharePoint.Client.ListItem,System.Boolean]&amp;gt;] [-ListItemProperties &amp;lt;String[]&amp;gt;] [-SubWebs] [-DisableStatisticsOutput] [-SkipCounting] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Invoke-PnPWebAction -ListAction ${function:ListAction} This will call the function ListAction on all the lists located on the current web.</description>
    </item>
    
    <item>
      <title>Measure-PnPList</title>
      <link>https://pnp.github.io/powershell/cmdlets/measure-pnplist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/measure-pnplist/</guid>
      <description>SYNOPSIS Returns statistics on the list object. This may fail on lists larger than the list view threshold
SYNTAX Measure-PnPList [-Identity] &amp;lt;ListPipeBind&amp;gt; [-ItemLevel] [-BrokenPermissions] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Measure-PnPList &amp;#34;Documents&amp;#34; Gets statistics on Documents document library
EXAMPLE 2 Measure-PnPList &amp;#34;Documents&amp;#34; -BrokenPermissions -ItemLevel Displays items and folders with broken permissions inside Documents library
PARAMETERS -BrokenPermissions Show items with broken permissions
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Measure-PnPWeb</title>
      <link>https://pnp.github.io/powershell/cmdlets/measure-pnpweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/measure-pnpweb/</guid>
      <description>SYNOPSIS Returns statistics on the web object
SYNTAX Measure-PnPWeb [[-Identity] &amp;lt;WebPipeBind&amp;gt;] [-Recursive] [-IncludeHiddenList] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Measure-PnPWeb Gets statistics on the current web
EXAMPLE 2 Measure-PnPWeb $web -Recursive Gets statistics on the provided web including all its subwebs
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IncludeHiddenList Include hidden lists in statistics calculation</description>
    </item>
    
    <item>
      <title>Move-PnPClientSideComponent</title>
      <link>https://pnp.github.io/powershell/cmdlets/move-pnpclientsidecomponent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/move-pnpclientsidecomponent/</guid>
      <description>SYNOPSIS Moves a Client-Side Component to a different section/column
SYNTAX Move to other section Move-PnPClientSideComponent [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -InstanceId &amp;lt;Guid&amp;gt; -Section &amp;lt;Int32&amp;gt; [-Position &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Move to other section and column Move-PnPClientSideComponent [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -InstanceId &amp;lt;Guid&amp;gt; -Section &amp;lt;Int32&amp;gt; -Column &amp;lt;Int32&amp;gt; [-Position &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Move to other column Move-PnPClientSideComponent [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -InstanceId &amp;lt;Guid&amp;gt; -Column &amp;lt;Int32&amp;gt; [-Position &amp;lt;Int32&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Move within a column Move-PnPClientSideComponent [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -InstanceId &amp;lt;Guid&amp;gt; -Position &amp;lt;Int32&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Moves a Client-Side Component to a different location on the page.</description>
    </item>
    
    <item>
      <title>Move-PnPFile</title>
      <link>https://pnp.github.io/powershell/cmdlets/move-pnpfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/move-pnpfile/</guid>
      <description>SYNOPSIS Moves a file or folder to a different location
SYNTAX Site Relative (Default) Move-PnPFile [-SiteRelativeUrl] &amp;lt;String&amp;gt; [-TargetUrl] &amp;lt;String&amp;gt; [-OverwriteIfAlreadyExists] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Server Relative Move-PnPFile [-ServerRelativeUrl] &amp;lt;String&amp;gt; [-TargetUrl] &amp;lt;String&amp;gt; [-OverwriteIfAlreadyExists] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Other Site Collection Move-PnPFile [[-ServerRelativeUrl] &amp;lt;String&amp;gt;] [[-SiteRelativeUrl] &amp;lt;String&amp;gt;] [-TargetServerRelativeLibrary] &amp;lt;String&amp;gt; [-OverwriteIfAlreadyExists] [-AllowSchemaMismatch] [-AllowSmallerVersionLimitOnDestination] [-IgnoreVersionHistory] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Allows moving a file or folder to a different location inside the same document library, such as in a subfolder, to a different document library on the same site collection or to a document library on another site collection</description>
    </item>
    
    <item>
      <title>Move-PnPFolder</title>
      <link>https://pnp.github.io/powershell/cmdlets/move-pnpfolder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/move-pnpfolder/</guid>
      <description>SYNOPSIS Move a folder to another location in the current web. If you want to move a folder to a different site collection, use the Move-PnPFile cmdlet instead, which also supports moving folders and also accross site collections.
SYNTAX Move-PnPFolder -Folder &amp;lt;String&amp;gt; -TargetFolder &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Move-PnPFolder -Folder Documents/Reports -TargetFolder &amp;#39;Archived Reports&amp;#39; This will move the folder Reports in the Documents library to the &amp;lsquo;Archived Reports&amp;rsquo; library</description>
    </item>
    
    <item>
      <title>Move-PnPItemProxy</title>
      <link>https://pnp.github.io/powershell/cmdlets/move-pnpitemproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/move-pnpitemproxy/</guid>
      <description>SYNOPSIS Proxy cmdlet for using Move-Item between SharePoint provider and FileSystem provider
SYNTAX Path (Default) Move-PnPItemProxy [-Path] &amp;lt;String[]&amp;gt; [[-Destination] &amp;lt;String&amp;gt;] [-Container] [-Force] [-Filter &amp;lt;String&amp;gt;] [-Include &amp;lt;String[]&amp;gt;] [-Exclude &amp;lt;String[]&amp;gt;] [-PassThru] [-Credential &amp;lt;PSCredential&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] LiteralPath Move-PnPItemProxy [-LiteralPath] &amp;lt;String[]&amp;gt; [[-Destination] &amp;lt;String&amp;gt;] [-Container] [-Force] [-Filter &amp;lt;String&amp;gt;] [-Include &amp;lt;String[]&amp;gt;] [-Exclude &amp;lt;String[]&amp;gt;] [-PassThru] [-Credential &amp;lt;PSCredential&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Container {{ Fill Container Description }}</description>
    </item>
    
    <item>
      <title>Move-PnPListItemToRecycleBin</title>
      <link>https://pnp.github.io/powershell/cmdlets/move-pnplistitemtorecyclebin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/move-pnplistitemtorecyclebin/</guid>
      <description>SYNOPSIS Moves an item from a list to the Recycle Bin
SYNTAX Move-PnPListItemToRecycleBin [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Move-PnPListItemToRecycleBin -List &amp;#34;Demo List&amp;#34; -Identity &amp;#34;1&amp;#34; -Force Moves the listitem with id &amp;ldquo;1&amp;rdquo; from the &amp;ldquo;Demo List&amp;rdquo; list to the Recycle Bin.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Move-PnPRecycleBinItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/move-pnprecyclebinitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/move-pnprecyclebinitem/</guid>
      <description>SYNOPSIS Moves all items or a specific item in the first stage recycle bin of the current site collection to the second stage recycle bin
SYNTAX Move-PnPRecycleBinItem [-Identity &amp;lt;RecycleBinItemPipeBind&amp;gt;] [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Move-PnpRecycleBinItem Moves all the items in the first stage recycle bin of the current site collection to the second stage recycle bin
EXAMPLE 2 Move-PnpRecycleBinItem -Identity 26ffff29-b526-4451-9b6f-7f0e56ba7125 Moves the item with the provided ID in the first stage recycle bin of the current site collection to the second stage recycle bin without asking for confirmation first</description>
    </item>
    
    <item>
      <title>New-PnPAzureCertificate</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpazurecertificate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpazurecertificate/</guid>
      <description>SYNOPSIS Generate a new 2048bit self-signed certificate and manifest settings for use when using CSOM via an app-only ADAL application.
See https://github.com/SharePoint/PnP-PowerShell/tree/master/Samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started.
KeyCredentials contains the ADAL app manifest sections.
Certificate contains the PEM encoded certificate.
PrivateKey contains the PEM encoded private key of the certificate.
SYNTAX New-PnPAzureCertificate [[-CommonName] &amp;lt;String&amp;gt;] [[-Country] &amp;lt;String&amp;gt;] [[-State] &amp;lt;String&amp;gt;] [[-Locality] &amp;lt;String&amp;gt;] [[-Organization] &amp;lt;String&amp;gt;] [[-OrganizationUnit] &amp;lt;String&amp;gt;] [[-OutPfx] &amp;lt;String&amp;gt;] [[-OutCert] &amp;lt;String&amp;gt;] [[-ValidYears] &amp;lt;Int32&amp;gt;] [[-CertificatePassword] &amp;lt;SecureString&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPAzureCertificate -OutPfx pnp.</description>
    </item>
    
    <item>
      <title>New-PnPExtensibilityHandlerObject</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpextensibilityhandlerobject/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpextensibilityhandlerobject/</guid>
      <description>SYNOPSIS Creates an ExtensibilityHandler Object, to be used by the Get-PnPSiteTemplate cmdlet
SYNTAX New-PnPExtensibilityHandlerObject [-Assembly] &amp;lt;String&amp;gt; -Type &amp;lt;String&amp;gt; [-Configuration &amp;lt;String&amp;gt;] [-Disabled] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $handler = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler Get-PnPSiteTemplate -Out NewTemplate.xml -ExtensibilityHandlers $handler This will create a new ExtensibilityHandler object that is run during extraction of the template
PARAMETERS -Assembly The full assembly name of the handler
Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Configuration Any configuration data you want to send to the handler</description>
    </item>
    
    <item>
      <title>New-PnPGraphSubscription</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpgraphsubscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpgraphsubscription/</guid>
      <description>SYNOPSIS Creates a new Microsof Graph Subscription which allows your webhook API to be called when a change occurs in Microsoft Graph
SYNTAX New-PnPGraphSubscription -ChangeType &amp;lt;GraphSubscriptionChangeType&amp;gt; -NotificationUrl &amp;lt;String&amp;gt; -Resource &amp;lt;String&amp;gt; [-ExpirationDateTime &amp;lt;DateTime&amp;gt;] [-ClientState &amp;lt;String&amp;gt;] [-LatestSupportedTlsVersion &amp;lt;GraphSubscriptionTlsVersion&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Creates a new Microsof Graph Subscription. The required Azure Active Directory application permission depends on the resource creating the subscription for, see https://docs.microsoft.com/graph/api/subscription-post-subscriptions#permissions. For a sample ASP.NET WebApi webhook implementation to receive the notifications from Microsoft Graph, see https://github.</description>
    </item>
    
    <item>
      <title>New-PnPGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpgroup/</guid>
      <description>SYNOPSIS Adds group to the Site Groups List and returns a group object
SYNTAX New-PnPGroup -Title &amp;lt;String&amp;gt; [-Description &amp;lt;String&amp;gt;] [-Owner &amp;lt;String&amp;gt;] [-AllowRequestToJoinLeave] [-AutoAcceptRequestToJoinLeave] [-AllowMembersEditMembership] [-OnlyAllowMembersViewMembership] [-DisallowMembersViewMembership] [-RequestToJoinEmail &amp;lt;String&amp;gt;] [-SetAssociatedGroup &amp;lt;AssociatedGroupType&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPGroup -Title &amp;#34;My Site Users&amp;#34; PARAMETERS -AllowMembersEditMembership A switch parameter that specifies whether group members can modify membership in the group
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowRequestToJoinLeave A switch parameter that specifies whether to allow users to request membership in the group and to allow users to request to leave the group</description>
    </item>
    
    <item>
      <title>New-PnPList</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnplist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnplist/</guid>
      <description>SYNOPSIS Creates a new list
SYNTAX New-PnPList -Title &amp;lt;String&amp;gt; -Template &amp;lt;ListTemplateType&amp;gt; [-Url &amp;lt;String&amp;gt;] [-Hidden] [-EnableVersioning] [-EnableContentTypes] [-OnQuickLaunch] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPList -Title Announcements -Template Announcements Create a new announcements list
EXAMPLE 2 New-PnPList -Title &amp;#34;Demo List&amp;#34; -Url &amp;#34;lists/DemoList&amp;#34; -Template Announcements Create an announcements list with a title that is different from the url
EXAMPLE 3 New-PnPList -Title HiddenList -Template GenericList -Hidden Create a new custom list and hides it from the SharePoint UI</description>
    </item>
    
    <item>
      <title>New-PnPMicrosoft365Group</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpmicrosoft365group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpmicrosoft365group/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.ReadWrite.All, Group.Create, Group.ReadWrite.All  Creates a new Microsoft 365 Group
SYNTAX New-PnPMicrosoft365Group -DisplayName &amp;lt;String&amp;gt; -Description &amp;lt;String&amp;gt; -MailNickname &amp;lt;String&amp;gt; [-Owners &amp;lt;String[]&amp;gt;] [-Members &amp;lt;String[]&amp;gt;] [-IsPrivate] [-GroupLogoPath &amp;lt;String&amp;gt;] [-CreateTeam] [-Force] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname Creates a public Microsoft 365 Group with all the required properties
EXAMPLE 2 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -Owners $arrayOfOwners -Members $arrayOfMembers Creates a public Microsoft 365 Group with all the required properties, and with a custom list of Owners and a custom list of Members</description>
    </item>
    
    <item>
      <title>New-PnPPersonalSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnppersonalsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnppersonalsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Office365 only: Creates a personal / OneDrive For Business site
SYNTAX New-PnPPersonalSite [-Email] &amp;lt;String[]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $users = (&amp;#39;katiej@contoso.onmicrosoft.com&amp;#39;,&amp;#39;garth@contoso.onmicrosoft.com&amp;#39;) New-PnPPersonalSite -Email $users Creates a personal / OneDrive For Business site for the 2 users in the variable $users
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>New-PnPSdnProvider</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpsdnprovider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpsdnprovider/</guid>
      <description>SYNOPSIS Adds a new Software-Defined Networking (SDN) provider
SYNTAX New-PnPSdnProvider -Identity &amp;lt;String&amp;gt; -License &amp;lt;String&amp;gt; [-Confirm] [-WhatIf] DESCRIPTION This Cmdlet creates a new Software-Defined Networking, and it receives two parameters, the Identity (ID) of the Hive and the License key of the Hive.
EXAMPLES EXAMPLE 1 New-PnPSdnProvider -ID &amp;#34;Hive&amp;#34; -License &amp;#34;&amp;#34; This example creates the Hive for a SDN Provider.
PARAMETERS -Identity Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -License Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs.</description>
    </item>
    
    <item>
      <title>New-PnPSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpsite/</guid>
      <description>SYNOPSIS Creates either a communication site or a Microsoft 365 group-connected team site
SYNTAX New-PnPSite -Type &amp;lt;SiteType&amp;gt; [-HubSiteId &amp;lt;Guid&amp;gt;] [-Wait] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION The New-PnPSite cmdlet creates a new site collection for the current tenant. Currently only &amp;lsquo;modern&amp;rsquo; sites like Communication Site and the Modern Microsoft 365 group-connected team sites are supported. If you want to create a classic site, use New-PnPTenantSite.
EXAMPLES EXAMPLE 1 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.</description>
    </item>
    
    <item>
      <title>New-PnPSiteGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpsitegroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpsitegroup/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Creates a new group in a SharePoint Online site collection.
SYNTAX New-PnPSiteGroup -Group &amp;lt;String&amp;gt; -PermissionLevels &amp;lt;String[]&amp;gt; [-Site &amp;lt;SitePipeBind&amp;gt;] DESCRIPTION A SharePoint group is a set of individual users. SharePoint groups enable you to manage sets of users instead of individual users.
EXAMPLES EXAMPLE 1 New-PnPSiteGroup -Site &amp;#34;https://contoso.sharepoint.com/sites/siteA&amp;#34; -Group &amp;#34;Project Leads&amp;#34; -PermissionLevels &amp;#34;Full Control&amp;#34; This example creates a group named Project Leads with the Full Control permission level on the site collection https://contoso.</description>
    </item>
    
    <item>
      <title>New-PnPSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpprovisioningtemplate/</guid>
      <description>SYNOPSIS Creates a new provisioning template object
SYNTAX New-PnPSiteTemplate [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $template = New-PnPSiteTemplate Creates a new instance of a site template object.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run.</description>
    </item>
    
    <item>
      <title>New-PnPSiteTemplateFromFolder</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpprovisioningtemplatefromfolder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpprovisioningtemplatefromfolder/</guid>
      <description>SYNOPSIS Generates a provisioning template from a given folder, including only files that are present in that folder
SYNTAX New-PnPSiteTemplateFromFolder [[-Out] &amp;lt;String&amp;gt;] [[-Folder] &amp;lt;String&amp;gt;] [[-TargetFolder] &amp;lt;String&amp;gt;] [-Match &amp;lt;String&amp;gt;] [-ContentType &amp;lt;ContentTypePipeBind&amp;gt;] [-Properties &amp;lt;Hashtable&amp;gt;] [[-Schema] &amp;lt;XMLPnPSchemaVersion&amp;gt;] [-AsIncludeFile] [-Force] [-Encoding &amp;lt;Encoding&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPSiteTemplateFromFolder -Out template.xml Creates an empty provisioning template, and includes all files in the current folder.
EXAMPLE 2 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\temp Creates an empty provisioning template, and includes all files in the c:\temp folder.</description>
    </item>
    
    <item>
      <title>New-PnPTeamsApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpteamsapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpteamsapp/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of AppCatalog.ReadWrite.All, Directory.ReadWrite.All  Adds an app to the Teams App Catalog.
SYNTAX New-PnPTeamsApp -Path &amp;lt;String&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTeamsApp -Path c:\myapp.zip Adds the app as defined in the zip file to the Teams App Catalog
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The path pointing to the packaged/zip file containing the app</description>
    </item>
    
    <item>
      <title>New-PnPTeamsTeam</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpteamsteam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpteamsteam/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Creates a new Team in Microsoft Teams. The cmdlet will create a Microsoft 365 group and then add a team to the group.
SYNTAX For an existing group New-PnPTeamsTeam -GroupId &amp;lt;String&amp;gt; [-Owner &amp;lt;String&amp;gt;] [-AllowAddRemoveApps &amp;lt;Boolean&amp;gt;] [-AllowChannelMentions &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateChannels &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateRemoveConnectors &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateRemoveTabs &amp;lt;Boolean&amp;gt;] [-AllowCustomMemes &amp;lt;Boolean&amp;gt;] [-AllowDeleteChannels &amp;lt;Boolean&amp;gt;] [-AllowGiphy &amp;lt;Boolean&amp;gt;] [-AllowGuestCreateUpdateChannels &amp;lt;Boolean&amp;gt;] [-AllowGuestDeleteChannels &amp;lt;Boolean&amp;gt;] [-AllowOwnerDeleteMessages &amp;lt;Boolean&amp;gt;] [-AllowStickersAndMemes &amp;lt;Boolean&amp;gt;] [-AllowTeamMentions &amp;lt;Boolean&amp;gt;] [-AllowUserDeleteMessages &amp;lt;Boolean&amp;gt;] [-AllowUserEditMessages &amp;lt;Boolean&amp;gt;] [-GiphyContentRating &amp;lt;TeamGiphyContentRating&amp;gt;] [-ShowInTeamsSearchAndSuggestions &amp;lt;Boolean&amp;gt;] [-Classification &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] For a new group New-PnPTeamsTeam -DisplayName &amp;lt;String&amp;gt; [-MailNickName &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Owner &amp;lt;String&amp;gt;] [-AllowAddRemoveApps &amp;lt;Boolean&amp;gt;] [-AllowChannelMentions &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateChannels &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateRemoveConnectors &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateRemoveTabs &amp;lt;Boolean&amp;gt;] [-AllowCustomMemes &amp;lt;Boolean&amp;gt;] [-AllowDeleteChannels &amp;lt;Boolean&amp;gt;] [-AllowGiphy &amp;lt;Boolean&amp;gt;] [-AllowGuestCreateUpdateChannels &amp;lt;Boolean&amp;gt;] [-AllowGuestDeleteChannels &amp;lt;Boolean&amp;gt;] [-AllowOwnerDeleteMessages &amp;lt;Boolean&amp;gt;] [-AllowStickersAndMemes &amp;lt;Boolean&amp;gt;] [-AllowTeamMentions &amp;lt;Boolean&amp;gt;] [-AllowUserDeleteMessages &amp;lt;Boolean&amp;gt;] [-AllowUserEditMessages &amp;lt;Boolean&amp;gt;] [-GiphyContentRating &amp;lt;TeamGiphyContentRating&amp;gt;] [-Visibility &amp;lt;TeamVisibility&amp;gt;] [-ShowInTeamsSearchAndSuggestions &amp;lt;Boolean&amp;gt;] [-Classification &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTeamsTeam -DisplayName &amp;#34;myPnPDemo1&amp;#34; -Visibility Private -AllowCreateUpdateRemoveTabs $false -AllowUserDeleteMessages $false This will create a newTeam called &amp;ldquo;myPnPDemo1&amp;rdquo; and sets the privacy to Private, as we well as preventing users from deleting their messages or update/remove tabs.</description>
    </item>
    
    <item>
      <title>New-PnPTenantSequence</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequence/</guid>
      <description>SYNOPSIS Creates a new tenant sequence object
SYNTAX New-PnPTenantSequence [-Id &amp;lt;String&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $sequence = New-PnPTenantSequence Creates a new instance of a tenant sequence object.
EXAMPLE 2 $sequence = New-PnPTenantSequence -Id &amp;#34;MySequence&amp;#34; Creates a new instance of a tenant sequence object and sets the Id to the value specified.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id Optional Id of the sequence</description>
    </item>
    
    <item>
      <title>New-PnPTenantSequenceCommunicationSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequencecommunicationsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequencecommunicationsite/</guid>
      <description>SYNOPSIS Creates a communication site object
SYNTAX New-PnPTenantSequenceCommunicationSite -Url &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; [-Language &amp;lt;UInt32&amp;gt;] [-Owner &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Classification &amp;lt;String&amp;gt;] [-SiteDesignId &amp;lt;String&amp;gt;] [-HubSite] [-AllowFileSharingForGuestUsers] [-TemplateIds &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceCommunicationSite -Url &amp;#34;/sites/mycommunicationsite&amp;#34; -Title &amp;#34;My Team Site&amp;#34; Creates a new communication site object with the specified variables
PARAMETERS -AllowFileSharingForGuestUsers Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>New-PnPTenantSequenceTeamNoGroupSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequenceteamnogroupsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequenceteamnogroupsite/</guid>
      <description>SYNOPSIS Creates a new team site without a Microsoft 365 group in-memory object
SYNTAX New-PnPTenantSequenceTeamNoGroupSite -Url &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; -TimeZoneId &amp;lt;UInt32&amp;gt; [-Language &amp;lt;UInt32&amp;gt;] [-Owner &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-HubSite] [-TemplateIds &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamNoGroupSite -Url &amp;#34;/sites/MyTeamSite&amp;#34; -Title &amp;#34;My Team Site&amp;#34; Creates a new team site object with the specified variables
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Type: UInt32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs.</description>
    </item>
    
    <item>
      <title>New-PnPTenantSequenceTeamNoGroupSubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequenceteamnogroupsubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequenceteamnogroupsubsite/</guid>
      <description>SYNOPSIS Creates a team site subsite with no Microsoft 365 group object
SYNTAX New-PnPTenantSequenceTeamNoGroupSubSite -Url &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; -TimeZoneId &amp;lt;UInt32&amp;gt; [-Language &amp;lt;UInt32&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-TemplateIds &amp;lt;String[]&amp;gt;] [-QuickLaunchDisabled] [-UseDifferentPermissionsFromParentSite] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamNoGroupSubSite -Url &amp;#34;MyTeamSubsite&amp;#34; -Title &amp;#34;My Team Site&amp;#34; -TimeZoneId 4 Creates a new team site subsite object with the specified variables
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -QuickLaunchDisabled Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Type: UInt32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseDifferentPermissionsFromParentSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs.</description>
    </item>
    
    <item>
      <title>New-PnPTenantSequenceTeamSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequenceteamsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptenantsequenceteamsite/</guid>
      <description>SYNOPSIS Creates a team site object
SYNTAX New-PnPTenantSequenceTeamSite -Alias &amp;lt;String&amp;gt; -Title &amp;lt;String&amp;gt; [-Description &amp;lt;String&amp;gt;] [-DisplayName &amp;lt;String&amp;gt;] [-Classification &amp;lt;String&amp;gt;] [-Public] [-HubSite] [-TemplateIds &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamSite -Alias &amp;#34;MyTeamSite&amp;#34; -Title &amp;#34;My Team Site&amp;#34; Creates a new team site object with the specified variables
PARAMETERS -Alias Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>New-PnPTenantSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptenantsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptenantsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Creates a new (classic) site collection for the current tenant
SYNTAX New-PnPTenantSite -Title &amp;lt;String&amp;gt; -Url &amp;lt;String&amp;gt; -Owner &amp;lt;String&amp;gt; [-Lcid &amp;lt;UInt32&amp;gt;] [-Template &amp;lt;String&amp;gt;] -TimeZone &amp;lt;Int32&amp;gt; [-ResourceQuota &amp;lt;Double&amp;gt;] [-ResourceQuotaWarningLevel &amp;lt;Double&amp;gt;] [-StorageQuota &amp;lt;Int64&amp;gt;] [-StorageQuotaWarningLevel &amp;lt;Int64&amp;gt;] [-RemoveDeletedSite] [-Wait] [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION The New-PnPTenantSite cmdlet creates a new site collection for the current company. However, creating a new SharePoint Online site collection fails if a deleted site with the same URL exists in the Recycle Bin.</description>
    </item>
    
    <item>
      <title>New-PnPTenantTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptenanttemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptenanttemplate/</guid>
      <description>SYNOPSIS Creates a new tenant template object
SYNTAX New-PnPTenantTemplate [-Author &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-DisplayName &amp;lt;String&amp;gt;] [-Generator &amp;lt;String&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 $template = New-PnPTenantTemplate Creates a new instance of a tenant template object.
PARAMETERS -Author Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Generator Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs.</description>
    </item>
    
    <item>
      <title>New-PnPTermGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptermgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptermgroup/</guid>
      <description>SYNOPSIS Creates a taxonomy term group
SYNTAX New-PnPTermGroup -Name &amp;lt;String&amp;gt; [-Id &amp;lt;Guid&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-TermStore &amp;lt;PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore]&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTermGroup -GroupName &amp;#34;Countries&amp;#34; Creates a new taxonomy term group named &amp;ldquo;Countries&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description to use for the term group.</description>
    </item>
    
    <item>
      <title>New-PnPTermLabel</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptermlabel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptermlabel/</guid>
      <description>SYNOPSIS Creates a localized label for a taxonomy term
SYNTAX New-PnPTermLabel -Term &amp;lt;TaxonomyTermPipeBind&amp;gt; -Name &amp;lt;String&amp;gt; -Lcid &amp;lt;Int32&amp;gt; [-IsDefault] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Creates a localized label for a taxonomy term. Use Get-PnPTerm -Include Labels to request the current labels on a taxonomy term.
EXAMPLES EXAMPLE 1 New-PnPTermLabel -Name &amp;#34;Finanzwesen&amp;#34; -Lcid 1031 -Term (Get-PnPTerm -Identity &amp;#34;Finance&amp;#34; -TermSet &amp;#34;Departments&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34;) Creates a new localized taxonomy label in German (LCID 1031) named &amp;ldquo;Finanzwesen&amp;rdquo; for the term &amp;ldquo;Finance&amp;rdquo; in the termset Departments which is located in the &amp;ldquo;Corporate&amp;rdquo; termgroup</description>
    </item>
    
    <item>
      <title>New-PnPTermSet</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnptermset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnptermset/</guid>
      <description>SYNOPSIS Creates a taxonomy term set
SYNTAX New-PnPTermSet -Name &amp;lt;String&amp;gt; [-Id &amp;lt;Guid&amp;gt;] [-Lcid &amp;lt;Int32&amp;gt;] -TermGroup &amp;lt;TermGroupPipeBind&amp;gt; [-Contact &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-IsOpenForTermCreation] [-IsNotAvailableForTagging] [-Owner &amp;lt;String&amp;gt;] [-StakeHolders &amp;lt;String[]&amp;gt;] [-CustomProperties &amp;lt;Hashtable&amp;gt;] [-TermStore &amp;lt;PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore]&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTermSet -Name &amp;#34;Department&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34; Creates a new termset named &amp;ldquo;Department&amp;rdquo; in the group named &amp;ldquo;Corporate&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>New-PnPUPABulkImportJob</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpupabulkimportjob/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpupabulkimportjob/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Submit up a new user profile bulk import job.
SYNTAX New-PnPUPABulkImportJob [-Folder] &amp;lt;String&amp;gt; [-Path] &amp;lt;String&amp;gt; [-UserProfilePropertyMapping] &amp;lt;Hashtable&amp;gt; [-IdProperty] &amp;lt;String&amp;gt; [[-IdType] &amp;lt;ImportProfilePropertiesUserIdType&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION See https://docs.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online for information on the API and how the bulk import process works.
EXAMPLES EXAMPLE 1 @&amp;#34; { &amp;#34;value&amp;#34;: [ { &amp;#34;IdName&amp;#34;: &amp;#34;mikaels@contoso.com&amp;#34;, &amp;#34;Department&amp;#34;: &amp;#34;PnP&amp;#34;, }, { &amp;#34;IdName&amp;#34;: &amp;#34;vesaj@contoso.com&amp;#34;, &amp;#34;Department&amp;#34;: &amp;#34;PnP&amp;#34;, } ] } &amp;#34;@ &amp;gt; profiles.</description>
    </item>
    
    <item>
      <title>New-PnPUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpuser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpuser/</guid>
      <description>SYNOPSIS Adds a user to the built-in Site User Info List and returns a user object
SYNTAX New-PnPUser -LoginName &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPUser -LoginName user@company.com Adds a new user with the login user@company.com to the current site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>New-PnPWeb</title>
      <link>https://pnp.github.io/powershell/cmdlets/new-pnpweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/new-pnpweb/</guid>
      <description>SYNOPSIS Creates a new subweb under the current web
SYNTAX New-PnPWeb -Title &amp;lt;String&amp;gt; -Url &amp;lt;String&amp;gt; [-Description &amp;lt;String&amp;gt;] [-Locale &amp;lt;Int32&amp;gt;] -Template &amp;lt;String&amp;gt; [-BreakInheritance] [-InheritNavigation] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPWeb -Title &amp;#34;Project A Web&amp;#34; -Url projectA -Description &amp;#34;Information about Project A&amp;#34; -Locale 1033 -Template &amp;#34;STS#0&amp;#34; Creates a new subweb under the current web with URL projectA
PARAMETERS -BreakInheritance By default the subweb will inherit its security from its parent, specify this switch to break this inheritance</description>
    </item>
    
    <item>
      <title>Publish-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/publish-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/publish-pnpapp/</guid>
      <description>SYNOPSIS Publishes/Deploys/Trusts an available app in the app catalog
SYNTAX Publish-PnPApp [-Identity] &amp;lt;AppMetadataPipeBind&amp;gt; [-SkipFeatureDeployment] [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Publish-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f This will deploy/trust an app into the app catalog. Notice that the app needs to be available in the tenant scoped app catalog
EXAMPLE 2 Publish-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f -Scope Site This will deploy/trust an app into the app catalog. Notice that the app needs to be available in the site collection scoped app catalog</description>
    </item>
    
    <item>
      <title>Read-PnPSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/read-pnpprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/read-pnpprovisioningtemplate/</guid>
      <description>SYNOPSIS Loads/Reads a PnP file from the file system or a string
SYNTAX By Path Read-PnPSiteTemplate [-Path] &amp;lt;String&amp;gt; [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] By XML Read-PnPSiteTemplate [-Xml] &amp;lt;String&amp;gt; [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Read-PnPSiteTemplate -Path template.pnp Loads a PnP file from the file system
EXAMPLE 2 Read-PnPSiteTemplate -Path template.pnp -TemplateProviderExtensions $extensions Loads a PnP file from the file system using some custom template provider extensions while loading the file.
EXAMPLE 3 Read-PnPSiteTemplate -Xml $xml Reads a PnP Provisioning template from a string containing the XML of a provisioning template</description>
    </item>
    
    <item>
      <title>Read-PnPTenantTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/read-pnptenanttemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/read-pnptenanttemplate/</guid>
      <description>SYNOPSIS Loads/Reads a PnP tenant template from the file system and returns an in-memory instance of this template.
SYNTAX Read-PnPTenantTemplate [-Path] &amp;lt;String&amp;gt; [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Read-PnPTenantTemplate -Path template.pnp Reads a PnP tenant template file from the file system and returns an in-memory instance
PARAMETERS -Path Filename to read from, optionally including full path.
Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template.</description>
    </item>
    
    <item>
      <title>Register-PnPAppCatalogSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/register-pnpappcatalogsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/register-pnpappcatalogsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Creates a new App Catalog Site and sets this site as the Tenant App Catalog
SYNTAX Register-PnPAppCatalogSite -Url &amp;lt;String&amp;gt; -Owner &amp;lt;String&amp;gt; -TimeZoneId &amp;lt;Int32&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Register-PnPAppCatalogSite -Url &amp;#34;https://yourtenant.sharepoint.com/sites/appcatalog&amp;#34; -Owner admin@domain.com -TimeZoneId 4 This will create a new appcatalog site if no app catalog is already present. Use -Force to create a new appcatalog site if one has already been registered.</description>
    </item>
    
    <item>
      <title>Register-PnPHubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/register-pnphubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/register-pnphubsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Registers a site as a hubsite
SYNTAX Register-PnPHubSite -Site &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Registers a site as a hubsite
EXAMPLES EXAMPLE 1 Register-PnPHubSite -Site &amp;#34;https://tenant.sharepoint.com/sites/myhubsite&amp;#34; This example registers the specified site as a hubsite
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPAlert</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpalert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpalert/</guid>
      <description>SYNOPSIS Removes an alert for a user
SYNTAX Remove-PnPAlert [-User &amp;lt;UserPipeBind&amp;gt;] -Identity &amp;lt;AlertPipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPAlert -Identity 641ac67f-0ce0-4837-874a-743c8f8572a7 Removes the alert with the specified ID for the current user
EXAMPLE 2 Remove-PnPAlert -Identity 641ac67f-0ce0-4837-874a-743c8f8572a7 -User &amp;#34;i:0#.f|membership|Alice@contoso.onmicrosoft.com&amp;#34; Removes the alert with the specified ID for the user specified
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpapp/</guid>
      <description>SYNOPSIS Removes an app from the app catalog
SYNTAX Remove-PnPApp [-Identity] &amp;lt;AppMetadataPipeBind&amp;gt; [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will remove the specified app from the tenant scoped app catalog
EXAMPLE 2 Remove-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will remove the specified app from the site collection scoped app catalog
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPApplicationCustomizer</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpapplicationcustomizer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpapplicationcustomizer/</guid>
      <description>SYNOPSIS Removes a SharePoint Framework client side extension application customizer
SYNTAX Custom Action Id Remove-PnPApplicationCustomizer [[-Identity] &amp;lt;UserCustomActionPipeBind&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Client Side Component Id Remove-PnPApplicationCustomizer -ClientSideComponentId &amp;lt;Guid&amp;gt; [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes a SharePoint Framework client side extension application customizer by removing a user custom action from a web or sitecollection
EXAMPLES EXAMPLE 1 Remove-PnPApplicationCustomizer -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Removes the custom action representing the client side extension registration with the id &amp;lsquo;aa66f67e-46c0-4474-8a82-42bf467d07f2&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Remove-PnPClientSideComponent</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpclientsidecomponent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpclientsidecomponent/</guid>
      <description>SYNOPSIS Removes a Client-Side component from a page
SYNTAX Remove-PnPClientSideComponent [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -InstanceId &amp;lt;Guid&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPClientSideComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 Removes the control specified from the page.
EXAMPLE 2 $webpart = Get-PnPClientSideComponent -Page &amp;#34;Home&amp;#34; | Where-Object { $_.Title -eq &amp;#34;Site activity&amp;#34; } Remove-PnPClientSideComponent -Page &amp;#34;Home&amp;#34; -InstanceId $webpart.InstanceId -Force Finds a web part with the Title &amp;ldquo;Site activity&amp;rdquo; on the Home.aspx page, then removes it from the page</description>
    </item>
    
    <item>
      <title>Remove-PnPClientSidePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpclientsidepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpclientsidepage/</guid>
      <description>SYNOPSIS Removes a Client-Side Page
SYNTAX Remove-PnPClientSidePage [-Identity] &amp;lt;ClientSidePagePipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPClientSidePage -Identity &amp;#34;MyPage&amp;#34; Removes the Client-Side page named &amp;lsquo;MyPage.aspx&amp;rsquo;
EXAMPLE 2 Remove-PnPClientSidePage -Identity &amp;#34;Templates/MyPageTemplate&amp;#34; Removes the specified Client-Side page which is located in the Templates folder of the Site Pages library.
EXAMPLE 3 Remove-PnPClientSidePage $page Removes the specified Client-Side page which is contained in the $page variable.
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPContentType</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpcontenttype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpcontenttype/</guid>
      <description>SYNOPSIS Removes a content type from a web
SYNTAX Remove-PnPContentType [-Identity] &amp;lt;ContentTypePipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContentType -Identity &amp;#34;Project Document&amp;#34; This will remove a content type called &amp;ldquo;Project Document&amp;rdquo; from the current web
EXAMPLE 2 Remove-PnPContentType -Identity &amp;#34;Project Document&amp;#34; -Force This will remove a content type called &amp;ldquo;Project Document&amp;rdquo; from the current web with force
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPContentTypeFromDocumentSet</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpcontenttypefromdocumentset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpcontenttypefromdocumentset/</guid>
      <description>SYNOPSIS Removes a content type from a document set
SYNTAX Remove-PnPContentTypeFromDocumentSet -ContentType &amp;lt;ContentTypePipeBind&amp;gt; -DocumentSet &amp;lt;DocumentSetPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContentTypeFromDocumentSet -ContentType &amp;#34;Test CT&amp;#34; -DocumentSet &amp;#34;Test Document Set&amp;#34; This will remove the content type called &amp;lsquo;Test CT&amp;rsquo; from the document set called &amp;lsquo;&amp;lsquo;Test Document Set&amp;rsquo;
EXAMPLE 2 Remove-PnPContentTypeFromDocumentSet -ContentType 0x0101001F1CEFF1D4126E4CAD10F00B6137E969 -DocumentSet 0x0120D520005DB65D094035A241BAC9AF083F825F3B This will remove the content type with ID &amp;lsquo;0x0101001F1CEFF1D4126E4CAD10F00B6137E969&amp;rsquo; from the document set with ID &amp;lsquo;0x0120D520005DB65D094035A241BAC9AF083F825F3B&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Remove-PnPContentTypeFromList</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpcontenttypefromlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpcontenttypefromlist/</guid>
      <description>SYNOPSIS Removes a content type from a list
SYNTAX Remove-PnPContentTypeFromList -List &amp;lt;ListPipeBind&amp;gt; -ContentType &amp;lt;ContentTypePipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContentTypeFromList -List &amp;#34;Documents&amp;#34; -ContentType &amp;#34;Project Document&amp;#34; This will remove a content type called &amp;ldquo;Project Document&amp;rdquo; from the &amp;ldquo;Documents&amp;rdquo; list
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The name of a content type, its ID or an actual content type object that needs to be removed from the specified list.</description>
    </item>
    
    <item>
      <title>Remove-PnPCustomAction</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpcustomaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpcustomaction/</guid>
      <description>SYNOPSIS Removes a custom action
SYNTAX Remove-PnPCustomAction [[-Identity] &amp;lt;UserCustomActionPipeBind&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Removes the custom action with the id &amp;lsquo;aa66f67e-46c0-4474-8a82-42bf467d07f2&amp;rsquo;.
EXAMPLE 2 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope web Removes the custom action with the id &amp;lsquo;aa66f67e-46c0-4474-8a82-42bf467d07f2&amp;rsquo; from the current web.
EXAMPLE 3 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 -Force Removes the custom action with the id &amp;lsquo;aa66f67e-46c0-4474-8a82-42bf467d07f2&amp;rsquo; without asking for confirmation.
EXAMPLE 4 Get-PnPCustomAction -Scope All | ?</description>
    </item>
    
    <item>
      <title>Remove-PnPDeletedMicrosoft365Group</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpdeletedmicrosoft365group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpdeletedmicrosoft365group/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Permanently removes one deleted Microsoft 365 Group
SYNTAX Remove-PnPDeletedMicrosoft365Group -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Permanently removes a deleted Microsoft 365 Group based on its ID
EXAMPLE 2 $group = Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Remove-PnPDeletedMicrosoft365Group -Identity $group Permanently removes the provided deleted Microsoft 365 Group
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Remove-PnPDeletedUnifiedGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpdeletedunifiedgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpdeletedunifiedgroup/</guid>
      <description>SYNOPSIS Permanently removes one deleted Office 365 Group (aka Unified Group)
SYNTAX DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPDeletedUnifiedGroup -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Permanently removes a deleted Office 365 Group based on its ID
EXAMPLE 2 $group = Get-PnPDeletedUnifiedGroup -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Remove-PnPDeletedUnifiedGroup -Identity $group Permanently removes the provided deleted Office 365 Group
PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Remove-PnPEventReceiver</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpeventreceiver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpeventreceiver/</guid>
      <description>SYNOPSIS Remove an eventreceiver
SYNTAX Remove-PnPEventReceiver -Identity &amp;lt;EventReceiverPipeBind&amp;gt; [-List &amp;lt;ListPipeBind&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes/unregisters a specific eventreceiver
EXAMPLES EXAMPLE 1 Remove-PnPEventReceiver -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will remove the event receiver with ReceiverId &amp;ldquo;fb689d0e-eb99-4f13-beb3-86692fd39f22&amp;rdquo; from the current web
EXAMPLE 2 Remove-PnPEventReceiver -List ProjectList -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will remove the event receiver with ReceiverId &amp;ldquo;fb689d0e-eb99-4f13-beb3-86692fd39f22&amp;rdquo; from the &amp;ldquo;ProjectList&amp;rdquo; list
EXAMPLE 3 Remove-PnPEventReceiver -List ProjectList -Identity MyReceiver This will remove the event receiver with ReceiverName &amp;ldquo;MyReceiver&amp;rdquo; from the &amp;ldquo;ProjectList&amp;rdquo; list</description>
    </item>
    
    <item>
      <title>Remove-PnPExternalUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpexternaluser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpexternaluser/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes one ore more external users from the tenant.
SYNTAX Remove-PnPExternalUser -UniqueIDs &amp;lt;String[]&amp;gt; [-Confirm] [-WhatIf] DESCRIPTION The Remove-PnPExternalUser cmdlet permanently removes a collection of external users from the tenant.
Users who are removed lose access to all tenant resources.
EXAMPLES EXAMPLE 1 $user = Get-PnPExternalUser -Filter someone@example.com Remove-PnPExternalUser -UniqueIDs @($user.UniqueId) This example removes a specific external user who has the address &amp;ldquo;someone@example.</description>
    </item>
    
    <item>
      <title>Remove-PnPField</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpfield/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpfield/</guid>
      <description>SYNOPSIS Removes a field from a list or a site
SYNTAX Remove-PnPField [-Identity] &amp;lt;FieldPipeBind&amp;gt; [[-List] &amp;lt;ListPipeBind&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPField -Identity &amp;#34;Speakers&amp;#34; Removes the speakers field from the site columns
EXAMPLE 2 Remove-PnPField -List &amp;#34;Demo list&amp;#34; -Identity &amp;#34;Speakers&amp;#34; Removes the speakers field from the list Demo list
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPFieldFromContentType</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpfieldfromcontenttype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpfieldfromcontenttype/</guid>
      <description>SYNOPSIS Removes a site column from a content type
SYNTAX Remove-PnPFieldFromContentType -Field &amp;lt;FieldPipeBind&amp;gt; -ContentType &amp;lt;ContentTypePipeBind&amp;gt; [-DoNotUpdateChildren] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFieldFromContentType -Field &amp;#34;Project_Name&amp;#34; -ContentType &amp;#34;Project Document&amp;#34; This will remove the site column with an internal name of &amp;ldquo;Project_Name&amp;rdquo; from a content type called &amp;ldquo;Project Document&amp;rdquo;
EXAMPLE 2 Remove-PnPFieldFromContentType -Field &amp;#34;Project_Name&amp;#34; -ContentType &amp;#34;Project Document&amp;#34; -DoNotUpdateChildren This will remove the site column with an internal name of &amp;ldquo;Project_Name&amp;rdquo; from a content type called &amp;ldquo;Project Document&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Remove-PnPFile</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpfile/</guid>
      <description>SYNOPSIS Removes a file.
SYNTAX Server Relative Remove-PnPFile [-ServerRelativeUrl] &amp;lt;String&amp;gt; [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Site Relative Remove-PnPFile [-SiteRelativeUrl] &amp;lt;String&amp;gt; [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 PS:&amp;gt;Remove-PnPFile -ServerRelativeUrl /sites/project/_catalogs/themes/15/company.spcolor Removes the file company.spcolor
EXAMPLE 2 PS:&amp;gt;Remove-PnPFile -SiteRelativeUrl _catalogs/themes/15/company.spcolor Removes the file company.spcolor
EXAMPLE 3 PS:&amp;gt;Remove-PnPFile -SiteRelativeUrl _catalogs/themes/15/company.spcolor -Recycle Removes the file company.spcolor and saves it to the Recycle Bin
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPFileFromSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpfilefromprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpfilefromprovisioningtemplate/</guid>
      <description>SYNOPSIS Removes a file from a PnP Provisioning Template
SYNTAX Remove-PnPFileFromSiteTemplate [-Path] &amp;lt;String&amp;gt; [-FilePath] &amp;lt;String&amp;gt; [[-TemplateProviderExtensions] &amp;lt;ITemplateProviderExtension[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFileFromSiteTemplate -Path template.pnp -FilePath filePath Removes a file from an in-memory PnP Provisioning Template
PARAMETERS -FilePath The relative File Path of the file to remove from the in-memory template
Type: String Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename to read the template from, optionally including full path.</description>
    </item>
    
    <item>
      <title>Remove-PnPFileVersion</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpfileversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpfileversion/</guid>
      <description>SYNOPSIS Removes all or a specific file version.
SYNTAX Return as file object (Default) Remove-PnPFileVersion -Url &amp;lt;String&amp;gt; [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] All Remove-PnPFileVersion -Url &amp;lt;String&amp;gt; [-All] [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] By Id Remove-PnPFileVersion -Url &amp;lt;String&amp;gt; [-Identity &amp;lt;FileVersionPipeBind&amp;gt;] [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFileVersion -Url Documents/MyDocument.docx -Identity 512 Removes the file version with Id 512
EXAMPLE 2 Remove-PnPFileVersion -Url Documents/MyDocument.</description>
    </item>
    
    <item>
      <title>Remove-PnPFolder</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpfolder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpfolder/</guid>
      <description>SYNOPSIS Deletes a folder within a parent folder
SYNTAX Remove-PnPFolder -Name &amp;lt;String&amp;gt; -Folder &amp;lt;String&amp;gt; [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFolder -Name NewFolder -Folder _catalogs/masterpage Removes the folder &amp;lsquo;NewFolder&amp;rsquo; from &amp;lsquo;_catalogsmasterpage&amp;rsquo;
EXAMPLE 2 Remove-PnPFolder -Name NewFolder -Folder _catalogs/masterpage -Recycle Removes the folder &amp;lsquo;NewFolder&amp;rsquo; from &amp;lsquo;_catalogsmasterpage&amp;rsquo; and is saved in the Recycle Bin
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPGraphSubscription</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpgraphsubscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpgraphsubscription/</guid>
      <description>SYNOPSIS Removes an existing Microsoft Graph subscription. Required Azure Active Directory application permission depends on the resource the subscription exists on, see https://docs.microsoft.com/graph/api/subscription-delete#permissions.
SYNTAX Remove-PnPGraphSubscription -Identity &amp;lt;GraphSubscriptionPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPGraphSubscription -Identity bc204397-1128-4911-9d70-1d8bceee39da Removes the Microsoft Graph subscription with the id &amp;lsquo;bc204397-1128-4911-9d70-1d8bceee39da&amp;rsquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The unique id or an instance of a Microsoft Graph Subscription</description>
    </item>
    
    <item>
      <title>Remove-PnPGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpgroup/</guid>
      <description>SYNOPSIS Removes a group from a web.
SYNTAX Remove-PnPGroup [[-Identity] &amp;lt;GroupPipeBind&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPGroup -Identity &amp;#34;My Users&amp;#34; Removes the group &amp;ldquo;My Users&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question.</description>
    </item>
    
    <item>
      <title>Remove-PnPHomeSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnphomesite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnphomesite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes the currently set site as the home site
SYNTAX Remove-PnPHomeSite [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPHomeSite Removes the currently set site as the home site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question.</description>
    </item>
    
    <item>
      <title>Remove-PnPHubSiteAssociation</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnphubsiteassociation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnphubsiteassociation/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Disconnects a site from a hubsite.
SYNTAX Remove-PnPHubSiteAssociation -Site &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Disconnects an site from a hubsite
EXAMPLES EXAMPLE 1 Remove-PnPHubSiteAssociation -Site &amp;#34;https://tenant.sharepoint.com/sites/mysite&amp;#34; This example adds the specified site to the hubsite.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPHubToHubAssociation</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnphubtohubassociation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnphubtohubassociation/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes the selected hub site from its parent hub.
SYNTAX By Id Add-PnPHubToHubAssociation -HubSiteId &amp;lt;Guid&amp;gt; By Url Add-PnPHubToHubAssociation -HubSiteUrl &amp;lt;string&amp;gt; DESCRIPTION Use this cmdlet to remove the selected hub site from its parent hub.
EXAMPLES EXAMPLE 1 Remove-PnPHubToHubAssociation -HubSiteId 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 This example removes the hubsite with id 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 from its parent hub.
EXAMPLE 2 Remove-PnPHubToHubAssociation -HubSiteUrl &amp;#34;https://yourtenant.sharepoint.com/sites/hub&amp;#34; This example removes the hubsite with id https://yourtenant.</description>
    </item>
    
    <item>
      <title>Remove-PnPIndexedProperty</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpindexedproperty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpindexedproperty/</guid>
      <description>SYNOPSIS Removes a key from propertybag to be indexed by search. The key and it&amp;rsquo;s value remain in the propertybag, however it will not be indexed anymore.
SYNTAX Remove-PnPIndexedProperty [-Key] &amp;lt;String&amp;gt; [-List &amp;lt;ListPipeBind&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPIndexedProperty -key &amp;#34;MyIndexProperty&amp;#34; Removes the Indexed property &amp;ldquo;MyIndexProperty&amp;rdquo; from the current web
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPJavaScriptLink</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpjavascriptlink/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpjavascriptlink/</guid>
      <description>SYNOPSIS Removes a JavaScript link or block from a web or sitecollection
SYNTAX Remove-PnPJavaScriptLink [[-Identity] &amp;lt;UserCustomActionPipeBind&amp;gt;] [-Force] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPJavaScriptLink -Identity jQuery Removes the injected JavaScript file with the name jQuery from the current web after confirmation
EXAMPLE 2 Remove-PnPJavaScriptLink -Identity jQuery -Scope Site Removes the injected JavaScript file with the name jQuery from the current site collection after confirmation
EXAMPLE 3 Remove-PnPJavaScriptLink -Identity jQuery -Scope Site -Confirm:$false Removes the injected JavaScript file with the name jQuery from the current site collection and will not ask for confirmation</description>
    </item>
    
    <item>
      <title>Remove-PnPKnowledgeHubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpknowledgehubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpknowledgehubsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes the Knowledge Hub Site setting for your tenant
SYNTAX Remove-PnPKnowledgeHubSite [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPKnowledgeHubSite Removes the Knowledge Hub Site setting for your tenant
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Remove-PnPList</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnplist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnplist/</guid>
      <description>SYNOPSIS Deletes a list
SYNTAX Remove-PnPList [-Identity] &amp;lt;ListPipeBind&amp;gt; [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPList -Identity Announcements Removes the list named &amp;lsquo;Announcements&amp;rsquo;. Asks for confirmation.
EXAMPLE 2 Remove-PnPList -Identity Announcements -Force Removes the list named &amp;lsquo;Announcements&amp;rsquo; without asking for confirmation.
EXAMPLE 3 Remove-PnPList -Title Announcements -Recycle Removes the list named &amp;lsquo;Announcements&amp;rsquo; and saves to the Recycle Bin
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPListItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnplistitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnplistitem/</guid>
      <description>SYNOPSIS Deletes an item from a list
SYNTAX Remove-PnPListItem [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; [-Recycle] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPListItem -List &amp;#34;Demo List&amp;#34; -Identity &amp;#34;1&amp;#34; -Force Removes the listitem with id &amp;ldquo;1&amp;rdquo; from the &amp;ldquo;Demo List&amp;rdquo; list
EXAMPLE 2 Remove-PnPListItem -List &amp;#34;Demo List&amp;#34; -Identity &amp;#34;1&amp;#34; -Force -Recycle Removes the listitem with id &amp;ldquo;1&amp;rdquo; from the &amp;ldquo;Demo List&amp;rdquo; list and saves it in the Recycle Bin</description>
    </item>
    
    <item>
      <title>Remove-PnPMicrosoft365Group</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpmicrosoft365group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpmicrosoft365group/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Removes one Microsoft 365 Group
SYNTAX Remove-PnPMicrosoft365Group -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365Group -Identity $groupId Removes an Microsoft 365 Group based on its ID
EXAMPLE 2 Remove-PnPMicrosoft365Group -Identity $group Removes the provided Microsoft 365 Group
EXAMPLE 3 Get-PnPMicrosoft365Group | ? Visibility -eq &amp;#34;Public&amp;#34; | Remove-PnPMicrosoft365Group Removes all the public Microsoft 365 Groups
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Remove-PnPMicrosoft365GroupMember</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpmicrosoft365groupmember/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpmicrosoft365groupmember/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All  Removes members from a particular Microsoft 365 Group
SYNTAX Remove-PnPMicrosoft365GroupMember -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; -Users &amp;lt;String[]&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupMember -Identity &amp;#34;Project Team&amp;#34; -Users &amp;#34;john@contoso.onmicrosoft.com&amp;#34;,&amp;#34;jane@contoso.onmicrosoft.com&amp;#34; Removes the provided two users as members from the Microsoft 365 Group named &amp;ldquo;Project Team&amp;rdquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Remove-PnPMicrosoft365GroupOwner</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpmicrosoft365groupowner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpmicrosoft365groupowner/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All  Removes owners from a particular Microsoft 365 Group
SYNTAX Remove-PnPMicrosoft365GroupOwner -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; -Users &amp;lt;String[]&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupOwner -Identity &amp;#34;Project Team&amp;#34; -Users &amp;#34;john@contoso.onmicrosoft.com&amp;#34;,&amp;#34;jane@contoso.onmicrosoft.com&amp;#34; Removes the provided two users as owners from the Microsoft 365 Group named &amp;ldquo;Project Team&amp;rdquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Remove-PnPNavigationNode</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpnavigationnode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpnavigationnode/</guid>
      <description>SYNOPSIS Removes a menu item from either the quicklaunch or top navigation
SYNTAX Remove a node by ID (Default) Remove-PnPNavigationNode [-Identity] &amp;lt;NavigationNodePipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Remove node by Title Remove-PnPNavigationNode [-Location] &amp;lt;NavigationType&amp;gt; -Title &amp;lt;String&amp;gt; [-Header &amp;lt;String&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] All Nodes Remove-PnPNavigationNode [-All] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPNavigationNode -Identity 1032 Removes the navigation node with the specified id</description>
    </item>
    
    <item>
      <title>Remove-PnPOrgAssetsLibrary</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnporgassetslibrary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnporgassetslibrary/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a given document library as a organizational asset source
SYNTAX Remove-PnPOrgAssetsLibrary -LibraryUrl &amp;lt;String&amp;gt; [-ShouldRemoveFromCdn &amp;lt;Boolean&amp;gt;] [-CdnType &amp;lt;SPOTenantCdnType&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes a given document library as a organizational asset source based on its server relative URL in your Sharepoint Online Tenant. It will not remove the document library itself. It may take some time before this change will be reflected in the webinterface.</description>
    </item>
    
    <item>
      <title>Remove-PnPOrgNewsSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnporgnewssite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnporgnewssite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a given site from the list of organizational news sites.
SYNTAX Remove-PnPOrgNewsSite -OrgNewsSiteUrl &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes a given site from the list of organizational news sites based on its URL in your Sharepoint Online Tenant.
EXAMPLES EXAMPLE 1 Remove-PnPOrgNewsSite -OrgNewsSiteUrl &amp;#34;https://tenant.sharepoint.com/sites/mysite&amp;#34; This example removes the specified site from list of organization&amp;rsquo;s news sites.</description>
    </item>
    
    <item>
      <title>Remove-PnPPropertyBagValue</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnppropertybagvalue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnppropertybagvalue/</guid>
      <description>SYNOPSIS Removes a value from the property bag
SYNTAX Remove-PnPPropertyBagValue [-Key] &amp;lt;String&amp;gt; [-Folder &amp;lt;String&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPPropertyBagValue -Key MyKey This will remove the value with key MyKey from the current web property bag
EXAMPLE 2 Remove-PnPPropertyBagValue -Key MyKey -Folder /MyFolder This will remove the value with key MyKey from the folder MyFolder which is located in the root folder of the current web</description>
    </item>
    
    <item>
      <title>Remove-PnPPublishingImageRendition</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnppublishingimagerendition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnppublishingimagerendition/</guid>
      <description>SYNOPSIS Removes an existing image rendition
SYNTAX Remove-PnPPublishingImageRendition [-Identity] &amp;lt;ImageRenditionPipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPPublishingImageRendition -Name &amp;#34;MyImageRendition&amp;#34; -Width 800 -Height 600 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to remove the Image Rendition.</description>
    </item>
    
    <item>
      <title>Remove-PnPRoleDefinition</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnproledefinition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnproledefinition/</guid>
      <description>SYNOPSIS Remove a Role Definition from a site
SYNTAX Remove-PnPRoleDefinition [-Identity] &amp;lt;RoleDefinitionPipeBind&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPRoleDefinition -Identity MyRoleDefinition Removes the specified Role Definition (Permission Level) from the current site
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation to delete the role definition</description>
    </item>
    
    <item>
      <title>Remove-PnPSdnProvider</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsdnprovider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsdnprovider/</guid>
      <description>SYNOPSIS Removes Software-Defined Networking (SDN) Support in your SharePoint Online tenant.
SYNTAX Remove-PnPSdnProviderr [-Confirm] [-WhatIf] DESCRIPTION Removes SDN Support in your SharePoint Online tenant.
EXAMPLES EXAMPLE 1 Remove-PnPSdnProvider -Confirm:false This command removes the SDN support for your Online Tenant without confirmation.
PARAMETERS -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run.
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPSearchConfiguration</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsearchconfiguration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsearchconfiguration/</guid>
      <description>SYNOPSIS Remove the search configuration
SYNTAX Config Remove-PnPSearchConfiguration -Configuration &amp;lt;String&amp;gt; [-Scope &amp;lt;SearchConfigurationScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Path Remove-PnPSearchConfiguration -Path &amp;lt;String&amp;gt; [-Scope &amp;lt;SearchConfigurationScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSearchConfiguration -Configuration $config Remove the search configuration for the current web (does not remove managed property mappings)
EXAMPLE 2 Remove-PnPSearchConfiguration -Configuration $config -Scope Site Remove the search configuration for the current site collection (does not remove managed property mappings)</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteClassification</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsiteclassification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsiteclassification/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Directory.ReadWrite.All  Removes one or more existing site classification values from the list of available values
SYNTAX Remove-PnPSiteClassification -Classifications &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteClassification -Classifications &amp;#34;HBI&amp;#34; Removes the &amp;ldquo;HBI&amp;rdquo; site classification from the list of available values.
EXAMPLE 2 Remove-PnPSiteClassification -Classifications &amp;#34;HBI&amp;#34;, &amp;#34;Top Secret&amp;#34; Removes the &amp;ldquo;HBI&amp;rdquo; site classification from the list of available values.
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteCollectionAdmin</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsitecollectionadmin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsitecollectionadmin/</guid>
      <description>SYNOPSIS Removes one or more users as site collection administrators from the site collection in the current context
SYNTAX Remove-PnPSiteCollectionAdmin -Owners &amp;lt;System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows removing one to many users as site collection administrators from the site collection in the current context. All existing site collection administrators not included in this command will remain site collection administrator.
EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionAdmin -Owners &amp;#34;user@contoso.onmicrosoft.com&amp;#34; This will remove user@contoso.</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteCollectionAppCatalog</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsitecollectionappcatalog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsitecollectionappcatalog/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a Site Collection scoped App Catalog from a site
SYNTAX Remove-PnPSiteCollectionAppCatalog -Site &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Notice that this will not remove the App Catalog list and its contents from the site.
EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionAppCatalog -Site &amp;#34;https://contoso.sharepoint.com/sites/FinanceTeamsite&amp;#34; This will remove a SiteCollection app catalog from the specified site
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteDesign</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsitedesign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsitedesign/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a Site Design
SYNTAX Remove-PnPSiteDesign [-Identity] &amp;lt;TenantSiteDesignPipeBind&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site design
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteDesignTask</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsitedesigntask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsitedesigntask/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a Site Design Task. If the execution of the associated site script has already started the execution will not be terminated.
SYNTAX Remove-PnPSiteDesignTask [-Identity] &amp;lt;TenantSiteDesignTaskPipeBind&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteDesignTask -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site design task
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsitegroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsitegroup/</guid>
      <description>SYNOPSIS Removes a group from a web.
SYNTAX Remove-PnPSiteGroup -Identity &amp;lt;String&amp;gt; [-Site &amp;lt;SitePipeBind&amp;gt;] [-WhatIf] [-Confirm] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteGroup -Identity GroupToRemove -Site &amp;#34;https://contoso.sharepoint.com/sites/marketing&amp;#34; This example removes a group named GroupToRemove from the site collection https://contoso.sharepoint.com/sites/marketing.
EXAMPLE 2 Remove-PnPSiteGroup -Identity GroupToRemove This example removes a group named GroupToRemove from the current site collection that has been connected to with Connect-PnPOnline.
PARAMETERS -Identity Specifies the name of the group to remove.</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteScript</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsitescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsitescript/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a Site Script
SYNTAX Remove-PnPSiteScript [-Identity] &amp;lt;TenantSiteScriptPipeBind&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteScript -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site script
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPSiteUserInvitations</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpsiteuserinvitations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpsiteuserinvitations/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Searches against all stored sharing links and removes an email invite.
SYNTAX Remove-PnPSiteUserInvitations [[-Site] &amp;lt;SitePipeBind&amp;gt;] [-EmailAddress] &amp;lt;string&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Searches against all stored sharing links on a Site and removes an email invits. If the site parameter is omitted the current site will be searched.
EXAMPLES EXAMPLE 1 Remove-PnPiteUserInvitations -Site &amp;#34;https://contoso.sharepoint.com/sites/ContosoWeb1/&amp;#34; -EmailAddress someone@example.com This example removes the email invite stored in the ContosoWeb1 site for the user with email address someone@example.</description>
    </item>
    
    <item>
      <title>Remove-PnPStorageEntity</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpstorageentity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpstorageentity/</guid>
      <description>SYNOPSIS Remove Storage Entities / Farm Properties from either the tenant scoped app catalog or the current site collection if the site has a site collection scoped app catalog
SYNTAX Remove-PnPStorageEntity -Key &amp;lt;String&amp;gt; [-Scope &amp;lt;StorageEntityScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPStorageEntity -Key MyKey Removes an existing storage entity / farm property
EXAMPLE 2 Remove-PnPStorageEntity -Key MyKey -Scope Site Removes an existing storage entity from the current site collection</description>
    </item>
    
    <item>
      <title>Remove-PnPStoredCredential</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpstoredcredential/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpstoredcredential/</guid>
      <description>SYNOPSIS Removes a credential from the Credential Manager
SYNTAX Remove-PnPStoredCredential -Name &amp;lt;String&amp;gt; [-Force] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes a stored credential from the Credential Manager
EXAMPLES EXAMPLE 1 Remove-PnPStoredCredential -Name &amp;#34;https://tenant.sharepoint.com&amp;#34; Removes the specified credential from the Credential Manager
PARAMETERS -Force If specified you will not be asked for confirmation
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The credential to remove</description>
    </item>
    
    <item>
      <title>Remove-PnPTaxonomyItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnptaxonomyitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnptaxonomyitem/</guid>
      <description>SYNOPSIS Removes a taxonomy item
SYNTAX Remove-PnPTaxonomyItem [-TermPath] &amp;lt;String&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPTeamsApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpteamsapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpteamsapp/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: AppCatalog.ReadWrite.All  Removes an app from the Teams AppCatalog.
SYNTAX Remove-PnPTeamsApp -Identity &amp;lt;TeamsAppPipeBind&amp;gt; [-Force] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsApp -Identity ac139d8b-fa2b-4ffe-88b3-f0b30158b58b Adds a new channel to the specified Teams instance
EXAMPLE 2 Remove-PnPTeamsApp -Identity &amp;#34;My Teams App&amp;#34; Adds a new channel to the specified Teams instance
EXAMPLE 3 Add-PnPTeamsChannel -Team MyTeam -DisplayName &amp;#34;My Channel&amp;#34; -Private Adds a new private channel to the specified Teams instance</description>
    </item>
    
    <item>
      <title>Remove-PnPTeamsChannel</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpteamschannel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpteamschannel/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Removes a channel from a Microsoft Teams instance.
SYNTAX Remove-PnPTeamsChannel -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Identity &amp;lt;TeamsChannelPipeBind&amp;gt; [-Force] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsChannel -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -DisplayName &amp;#34;My Channel&amp;#34; Removes the channel specified from the team specified
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true
Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question.</description>
    </item>
    
    <item>
      <title>Remove-PnPTeamsTab</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpteamstab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpteamstab/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Removes a Microsoft Teams tab in a channel.
SYNTAX Remove-PnPTeamsTab -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Channel &amp;lt;TeamsChannelPipeBind&amp;gt; -Identity &amp;lt;TeamsTabPipeBind&amp;gt; [-Force] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsTab -GroupId 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -ChannelId 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity Wiki Removes the tab with the display name &amp;lsquo;Wiki&amp;rsquo; from the channel
EXAMPLE 2 Remove-PnPTeamsTab -GroupId 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -ChannelId 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity fcef815d-2e8e-47a5-b06b-9bebba5c7852 Removes a tab with the specified id from the channel
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Remove-PnPTeamsTeam</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpteamsteam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpteamsteam/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Removes a Microsoft Teams Team instance
SYNTAX Remove-PnPTeamsTeam -Identity &amp;lt;TeamsTeamPipeBind&amp;gt; [-Force] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsTeam -Identity 5beb63c5-0571-499e-94d5-3279fdd9b6b5 Removes the specified Team
EXAMPLE 2 Remove-PnPTeamsTeam -Identity testteam Removes the specified Team. If there are multiple teams with the same display name it will not proceed deleting the team.
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Remove-PnPTeamsUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpteamsuser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpteamsuser/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Removes users from a team.
SYNTAX Remove-PnPTeamsUser -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -User &amp;lt;String&amp;gt; [-Role &amp;lt;String&amp;gt;] [-Force] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsUser -Team MyTeam -User john@doe.com Removes the user specified from both owners and members of the team.
EXAMPLE 2 Get-PnPTeamsUser -Team MyTeam -User john@doe.com -Owner Removes the user john@doe.com from the owners of the team, but retains the user as a member.</description>
    </item>
    
    <item>
      <title>Remove-PnPTenantCdnOrigin</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnptenantcdnorigin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnptenantcdnorigin/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes an origin from the Public or Private content delivery network (CDN).
SYNTAX Remove-PnPTenantCdnOrigin -OriginUrl &amp;lt;String&amp;gt; -CdnType &amp;lt;SPOTenantCdnType&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes an origin from the Public or Private content delivery network (CDN).
You must be a SharePoint Online global administrator to run the cmdlet.
EXAMPLES EXAMPLE 1 Remove-PnPTenantCdnOrigin -OriginUrl /sites/site/subfolder -CdnType Public This example removes the specified origin from the public CDN</description>
    </item>
    
    <item>
      <title>Remove-PnPTenantSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnptenantsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnptenantsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a site collection
SYNTAX Remove-PnPTenantSite [-Url] &amp;lt;String&amp;gt; [-SkipRecycleBin] [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes a site collection which is listed in your tenant administration site.
EXAMPLES EXAMPLE 1 Remove-PnPTenantSite -Url &amp;#34;https://tenant.sharepoint.com/sites/contoso&amp;#34; This will remove the site collection with the url &amp;lsquo;https://tenant.sharepoint.com/sites/contoso&#39; and put it in the recycle bin.
EXAMPLE 2 Remove-PnPTenantSite -Url &amp;#34;https://tenant.sharepoint.com/sites/contoso&amp;#34; -Force -SkipRecycleBin This will remove the site collection with the url &amp;lsquo;https://tenant.</description>
    </item>
    
    <item>
      <title>Remove-PnPTenantSyncClientRestriction</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnptenantsyncclientrestriction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnptenantsyncclientrestriction/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Returns organization-level OneDrive synchronization restriction settings
SYNTAX Remove-PnPTenantSyncClientRestriction DESCRIPTION The Remove-PnPTenantSyncClientRestriction cmdlet disables the feature for the tenant, but does not remove any present domain GUID entries from the safe sender recipient list. After the Remove-PnPTenantSyncClientRestriction cmdlet is run it can take up to 24 hours for change to take effect. This parameter will also remove any values set from the GrooveBlockOption parameter for syncing.</description>
    </item>
    
    <item>
      <title>Remove-PnPTenantTheme</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnptenanttheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnptenanttheme/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a theme
SYNTAX Remove-PnPTenantTheme [-Identity] &amp;lt;ThemePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes the specified theme from the tenant configuration
EXAMPLES EXAMPLE 1 Remove-PnPTenantTheme -Name &amp;#34;MyCompanyTheme&amp;#34; Removes the specified theme.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the theme to retrieve</description>
    </item>
    
    <item>
      <title>Remove-PnPTerm</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpterm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpterm/</guid>
      <description>SYNOPSIS Removes a taxonomy term from the term store.
SYNTAX By Term Id Remove-PnPTerm -Identity &amp;lt;Guid&amp;gt; [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;][-WhatIf] [-Confirm] [&amp;lt;CommonParameters&amp;gt;]By Term Name Remove-PnPTerm -Identity &amp;lt;String&amp;gt; -TermSet &amp;lt;TaxonomyTermSetPipeBind&amp;gt;-TermGroup &amp;lt;TaxonomyTermGroupPipeBind&amp;gt; [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;][-Connection &amp;lt;PnPConnection&amp;gt;] [-WhatIf] [-Confirm] [&amp;lt;CommonParameters&amp;gt;]DESCRIPTION This cmdlet removes a term from the term store.
EXAMPLES Example 1 Remove-PnPTerm -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 Removes a term by id.
Example 2 Remove-PnPTerm -Identity &amp;#34;Marketing&amp;#34; -TermSet &amp;#34;Departments&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34; Removes a term by name.</description>
    </item>
    
    <item>
      <title>Remove-PnPTermGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnptermgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnptermgroup/</guid>
      <description>SYNOPSIS Removes a taxonomy term group and all its containing termsets
SYNTAX Remove-PnPTermGroup -Identity &amp;lt;TaxonomyTermGroupPipeBind&amp;gt; [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [-Force][-WhatIf] [-Confirm] [&amp;lt;CommonParameters&amp;gt;]DESCRIPTION This cmdlet removes a term group and all the containing termsets.
EXAMPLES Example 1 Remove-PnPTermGroup -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 Removes the specified termgroup.
Example 2 Remove-PnPTermGroup -Identity &amp;#34;Corporate&amp;#34; Removes the specified termgroup.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of GUID of the group to remove.</description>
    </item>
    
    <item>
      <title>Remove-PnPTermLabel</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnptermlabel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnptermlabel/</guid>
      <description>SYNOPSIS Removes a single label/translation from a term.
SYNTAX By Term Id Remove-PnPTermLabel -Label &amp;lt;String&amp;gt; -Term &amp;lt;Guid&amp;gt; -Lcid &amp;lt;Int32&amp;gt; [-TermStore &amp;lt;Guid&amp;gt;][-Connection &amp;lt;PnPConnection&amp;gt;] [-WhatIf] [-Confirm] [&amp;lt;CommonParameters&amp;gt;]By Name Remove-PnPTermLabel -Label &amp;lt;String&amp;gt; -Term &amp;lt;String&amp;gt; -Lcid &amp;lt;Int32&amp;gt; -TermSet &amp;lt;Name|Guid&amp;gt; -TermGroup &amp;lt;Name|Guid&amp;gt; [-TermStore &amp;lt;Guid&amp;gt;][-Connection &amp;lt;PnPConnection&amp;gt;] [-WhatIf] [-Confirm] [&amp;lt;CommonParameters&amp;gt;]DESCRIPTION This cmdlet removes a label/translation from a term.
EXAMPLES Example 1 Remove-PnPTermLabel -Label &amp;#34;Marknadsföring&amp;#34; -Lcid 1053 -Term 2d1f298b-804a-4a05-96dc-29b667adec62 Removes the Swedish label from the specified term</description>
    </item>
    
    <item>
      <title>Remove-PnPUser</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpuser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpuser/</guid>
      <description>SYNOPSIS Removes a specific user from the site collection User Information List
SYNTAX Remove-PnPUser [-Identity] &amp;lt;UserPipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command will allow the removal of a specific user from the User Information List
EXAMPLES EXAMPLE 1 Remove-PnPUser -Identity 23 Remove the user with Id 23 from the User Information List of the current site collection
EXAMPLE 2 Remove-PnPUser -Identity i:0#.f|membership|user@tenant.onmicrosoft.com Remove the user with LoginName i:0#.</description>
    </item>
    
    <item>
      <title>Remove-PnPUserFromGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpuserfromgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpuserfromgroup/</guid>
      <description>SYNOPSIS Removes a user from a group
SYNTAX Remove-PnPUserFromGroup -LoginName &amp;lt;String&amp;gt; -Identity &amp;lt;GroupPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPUserFromGroup -LoginName user@company.com -GroupName &amp;#39;Marketing Site Members&amp;#39; Removes the user user@company.com from the Group &amp;lsquo;Marketing Site Members&amp;rsquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A group object, an ID or a name of a group</description>
    </item>
    
    <item>
      <title>Remove-PnPUserInfo</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpuserinfo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpuserinfo/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Removes a user from the user information list of a specific site collection.
SYNTAX Remove-PnPUserInfo -LoginName &amp;lt;String&amp;gt; [-Site &amp;lt;String&amp;gt;] DESCRIPTION Export user information from the site user information list.
EXAMPLES EXAMPLE 1 Remove-PnPUserInfo -LoginName user@domain.com -Site &amp;#34;https://yoursite.sharepoint.com/sites/team&amp;#34; This removes a user who has the e-mail address user@domain.com from the user information list of https://contoso.sharepoint.com/sites/team site collection.
PARAMETERS -LoginName Specifies the login name of the user to remove.</description>
    </item>
    
    <item>
      <title>Remove-PnPUserProfile</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpuserprofile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpuserprofile/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Export user profile data.
SYNTAX Remove-PnPUserProfile -LoginName &amp;lt;String&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes a SharePoint User Profile from the tenant.
 [!NOTE] The User must be first be deleted from AAD before the user profile can be deleted. You can use the Azure AD cmdlet Remove-AzureADUser for this action
 EXAMPLES EXAMPLE 1 Remove-PnPUserProfile -LoginName user@domain.com This removes user profile data with the email address user@domain.</description>
    </item>
    
    <item>
      <title>Remove-PnPView</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpview/</guid>
      <description>SYNOPSIS Deletes a view from a list
SYNTAX Remove-PnPView [-Identity] &amp;lt;ViewPipeBind&amp;gt; [-List] &amp;lt;ListPipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPView -List &amp;#34;Demo List&amp;#34; -Identity &amp;#34;All Items&amp;#34; Removes the view with title &amp;ldquo;All Items&amp;rdquo; from the &amp;ldquo;Demo List&amp;rdquo; list.
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Remove-PnPWeb</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpweb/</guid>
      <description>SYNOPSIS Removes a subweb in the current web
SYNTAX Remove-PnPWeb -Url &amp;lt;String&amp;gt; -Identity &amp;lt;WebPipeBind&amp;gt; [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPWeb -Url projectA Remove a web
EXAMPLE 2 Remove-PnPWeb -Identity 5fecaf67-6b9e-4691-a0ff-518fc9839aa0 Remove a web specified by its ID
EXAMPLE 3 Get-PnPSubWebs | Remove-PnPWeb -Force Remove all subwebs and do not ask for confirmation
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Remove-PnPWebhookSubscription</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpwebhooksubscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpwebhooksubscription/</guid>
      <description>SYNOPSIS Removes a Webhook subscription from the resource
SYNTAX Remove-PnPWebhookSubscription [-Identity] &amp;lt;WebhookSubscriptionPipeBind&amp;gt; [-List &amp;lt;ListPipeBind&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPWebhookSubscription -List MyList -Identity ea1533a8-ff03-415b-a7b6-517ee50db8b6 Removes the Webhook subscription with the specified id from the list MyList
EXAMPLE 2 $subscriptions = Get-PnPWebhookSubscriptions -List MyList Remove-PnPWebhookSubscription -Identity $subscriptions[0] -List MyList Removes the first Webhook subscription from the list MyList
EXAMPLE 3 $subscriptions = Get-PnPWebhookSubscriptions -List MyList $subscriptions[0] | Remove-PnPWebhookSubscription -List MyList Removes the first Webhook subscription from the list MyList</description>
    </item>
    
    <item>
      <title>Remove-PnPWebPart</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpwebpart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpwebpart/</guid>
      <description>SYNOPSIS Removes a web part from a page
SYNTAX ID Remove-PnPWebPart -Identity &amp;lt;Guid&amp;gt; -ServerRelativePageUrl &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] NAME Remove-PnPWebPart -Title &amp;lt;String&amp;gt; -ServerRelativePageUrl &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPWebPart -ServerRelativePageUrl &amp;#34;/sites/demo/sitepages/home.aspx&amp;#34; -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 This will remove the web part specified by ID to the specified page in the first row and the first column of the HTML table present on the page
EXAMPLE 2 Remove-PnPWebPart -ServerRelativePageUrl &amp;#34;/sites/demo/sitepages/home.</description>
    </item>
    
    <item>
      <title>Remove-PnPWikiPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/remove-pnpwikipage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/remove-pnpwikipage/</guid>
      <description>SYNOPSIS Removes a wiki page
SYNTAX SERVER Remove-PnPWikiPage [-ServerRelativePageUrl] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] SITE Remove-PnPWikiPage [-SiteRelativePageUrl] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPWikiPage -PageUrl &amp;#39;/pages/wikipage.aspx&amp;#39; Removes the page &amp;lsquo;/pages/wikipage.aspx&amp;rsquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Type: String Parameter Sets: SERVER Aliases: PageUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteRelativePageUrl Type: String Parameter Sets: SITE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Rename-PnPFile</title>
      <link>https://pnp.github.io/powershell/cmdlets/rename-pnpfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/rename-pnpfile/</guid>
      <description>SYNOPSIS Renames a file in its current location
SYNTAX SERVER Rename-PnPFile [-ServerRelativeUrl] &amp;lt;String&amp;gt; [-TargetFileName] &amp;lt;String&amp;gt; [-OverwriteIfAlreadyExists] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] SITE Rename-PnPFile [-SiteRelativeUrl] &amp;lt;String&amp;gt; [-TargetFileName] &amp;lt;String&amp;gt; [-OverwriteIfAlreadyExists] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 PS:&amp;gt;Rename-PnPFile -ServerRelativeUrl /sites/project/Documents/company.docx -TargetFileName mycompany.docx Renames a file named company.docx located in the document library called Documents located in the projects sitecollection under the managed path sites to mycompany.docx. If a file named mycompany.</description>
    </item>
    
    <item>
      <title>Rename-PnPFolder</title>
      <link>https://pnp.github.io/powershell/cmdlets/rename-pnpfolder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/rename-pnpfolder/</guid>
      <description>SYNOPSIS Renames a folder
SYNTAX Rename-PnPFolder -Folder &amp;lt;String&amp;gt; -TargetFolderName &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Rename-PnPFolder -Folder Documents/Reports -TargetFolderName &amp;#39;Archived Reports&amp;#39; This will rename the folder Reports in the Documents library to &amp;lsquo;Archived Reports&amp;rsquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder to rename</description>
    </item>
    
    <item>
      <title>Repair-PnPSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/repair-pnpsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/repair-pnpsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Checks and repairs the site collection and its contents.
SYNTAX Repair-PnPSite -Identity &amp;lt;SitePipeBind&amp;gt; [-RuleId &amp;lt;Guid&amp;gt;] DESCRIPTION The Repair-PnPSite cmdlet runs one or all site collection health checks on the site collection and its contents. This cmdlet will make changes if issues are found and automatically repairable.
The cmdlet reports the health check rules with a summary of the results.</description>
    </item>
    
    <item>
      <title>Request-PnPAccessToken</title>
      <link>https://pnp.github.io/powershell/cmdlets/request-pnpaccesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/request-pnpaccesstoken/</guid>
      <description>SYNOPSIS Requests an OAuth Access token
SYNTAX Request-PnPAccessToken [-ClientId &amp;lt;String&amp;gt;] [-Resource &amp;lt;String&amp;gt;] [-Scopes &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt;] [-Decoded] [-SetAsCurrent] [-Credentials &amp;lt;PSCredential&amp;gt;] [-TenantUrl &amp;lt;String&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns an access token using the password grant, using the PnP O365 Management Shell client id by default and the AllSites.FullControl scope by default.
EXAMPLES EXAMPLE 1 Request-PnPAccessToken Returns the access token using the default client id and scope
EXAMPLE 2 Request-PnPAccessToken -ClientId 26e29fec-aa10-4f99-8381-d96cddc650c2 Returns the access token using the specified client id and the default scope of AllSites.</description>
    </item>
    
    <item>
      <title>Request-PnPReIndexList</title>
      <link>https://pnp.github.io/powershell/cmdlets/request-pnpreindexlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/request-pnpreindexlist/</guid>
      <description>SYNOPSIS Marks the list for full indexing during the next incremental crawl
SYNTAX Request-PnPReIndexList [-Identity] &amp;lt;ListPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Request-PnPReIndexList -Identity &amp;#34;Demo List&amp;#34; PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID, Title or Url of the list.</description>
    </item>
    
    <item>
      <title>Request-PnPReIndexWeb</title>
      <link>https://pnp.github.io/powershell/cmdlets/request-pnpreindexweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/request-pnpreindexweb/</guid>
      <description>SYNOPSIS Marks the web for full indexing during the next incremental crawl
SYNTAX Request-PnPReIndexWeb [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Reset-PnPFileVersion</title>
      <link>https://pnp.github.io/powershell/cmdlets/reset-pnpfileversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/reset-pnpfileversion/</guid>
      <description>SYNOPSIS Resets a file to its previous version
SYNTAX Reset-PnPFileVersion -ServerRelativeUrl &amp;lt;String&amp;gt; [-CheckinType &amp;lt;CheckinType&amp;gt;] [-CheckInComment &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Reset-PnPFileVersion -ServerRelativeUrl &amp;#34;/sites/test/office365.png&amp;#34; EXAMPLE 2 Reset-PnPFileVersion -ServerRelativeUrl &amp;#34;/sites/test/office365.png&amp;#34; -CheckinType MajorCheckin -Comment &amp;#34;Restored to previous version&amp;#34; PARAMETERS -CheckInComment The comment added to the checkin. Defaults to &amp;lsquo;Restored to previous version&amp;rsquo;.
Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckinType The check in type to use.</description>
    </item>
    
    <item>
      <title>Reset-PnPLabel</title>
      <link>https://pnp.github.io/powershell/cmdlets/reset-pnplabel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/reset-pnplabel/</guid>
      <description>SYNOPSIS Resets a retention label on the specified list or library to None
SYNTAX Reset-PnPLabel [-List] &amp;lt;ListPipeBind&amp;gt; [-SyncToItems &amp;lt;Boolean&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Removes the retention label on a list or library and its items. Does not work for sensitivity labels.
EXAMPLES EXAMPLE 1 Reset-PnPLabel -List &amp;#34;Demo List&amp;#34; This resets an O365 label on the specified list or library to None
EXAMPLE 2 Reset-PnPLabel -List &amp;#34;Demo List&amp;#34; -SyncToItems $true This resets an O365 label on the specified list or library to None and resets the label on all the items in the list and library except Folders and where the label has been manually or previously automatically assigned</description>
    </item>
    
    <item>
      <title>Reset-PnPMicrosoft365GroupExpiration</title>
      <link>https://pnp.github.io/powershell/cmdlets/reset-pnpmicrosoft365groupexpiration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/reset-pnpmicrosoft365groupexpiration/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All  Renews the Microsoft 365 Group by extending its expiration with the number of days defined in the group expiration policy set on the Azure Active Directory
SYNTAX Reset-PnPMicrosoft365GroupExpiration -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck [&amp;lt;SwitchParameter&amp;gt;]] DESCRIPTION Renews the Microsoft 365 Group by extending its expiration with the number of days defined in the group expiration policy set on the Azure Active Directory</description>
    </item>
    
    <item>
      <title>Reset-PnPUserOneDriveQuotaToDefault</title>
      <link>https://pnp.github.io/powershell/cmdlets/reset-pnpuseronedrivequotatodefault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/reset-pnpuseronedrivequotatodefault/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Resets the current quota set on the OneDrive for Business site for a specific user to the tenant default
SYNTAX Reset-PnPUserOneDriveQuotaToDefault [-Account] &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows you to reset the quota set on the OneDrive for Business site of a specific user to the default as set on the tenant. You must connect to the tenant admin website (https://:-admin.</description>
    </item>
    
    <item>
      <title>Resolve-PnPFolder</title>
      <link>https://pnp.github.io/powershell/cmdlets/resolve-pnpfolder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/resolve-pnpfolder/</guid>
      <description>SYNOPSIS Returns a folder from a given site relative path, and will create it if it does not exist.
SYNTAX Resolve-PnPFolder [-SiteRelativePath] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [-Includes &amp;lt;String[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Returns a folder from a given site relative path, and will create it if it does not exist. If you do not want the folder to be created, for instance just to test if a folder exists, use Get-PnPFolder</description>
    </item>
    
    <item>
      <title>Restore-PnPDeletedMicrosoft365Group</title>
      <link>https://pnp.github.io/powershell/cmdlets/restore-pnpdeletedmicrosoft365group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/restore-pnpdeletedmicrosoft365group/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Restores one deleted Microsoft 365 Group
SYNTAX Restore-PnPDeletedMicrosoft365Group -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Restores a deleted Microsoft 365 Group based on its ID
EXAMPLE 2 $group = Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Restore-PnPDeletedMicrosoft365Group -Identity $group Restores the provided deleted Microsoft 365 Group
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Restore-PnPFileVersion</title>
      <link>https://pnp.github.io/powershell/cmdlets/restore-pnpfileversion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/restore-pnpfileversion/</guid>
      <description>SYNOPSIS Restores a specific file version.
SYNTAX Restore-PnPFileVersion -Url &amp;lt;String&amp;gt; [-Identity &amp;lt;FileVersionPipeBind&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnPFileVersion -Url Documents/MyDocument.docx -Identity 512 Restores the file version with Id 512
EXAMPLE 2 Restore-PnPFileVersion -Url Documents/MyDocument.docx -Identity &amp;#34;Version 1.0&amp;#34; Restores the file version with label &amp;ldquo;Version 1.0&amp;rdquo;
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Restore-PnPRecycleBinItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/restore-pnprecyclebinitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/restore-pnprecyclebinitem/</guid>
      <description>SYNOPSIS Restores the provided recycle bin item to its original location
SYNTAX Restore-PnPRecycleBinItem -Identity &amp;lt;RecycleBinItemPipeBind&amp;gt; [-Force] [-RowLimit &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnpRecycleBinItem -Identity 72e4d749-d750-4989-b727-523d6726e442 Restores the recycle bin item with Id 72e4d749-d750-4989-b727-523d6726e442 to its original location
EXAMPLE 2 Get-PnPRecycleBinItem | ? -Property LeafName -like &amp;#34;*.docx&amp;#34; | Restore-PnpRecycleBinItem Restores all the items in the first and second stage recycle bins to their original location of which the filename ends with the .</description>
    </item>
    
    <item>
      <title>Restore-PnPTenantRecycleBinItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/restore-pnptenantrecyclebinitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/restore-pnptenantrecyclebinitem/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Restores a site collection from the tenant scoped recycle bin
SYNTAX Restore-PnPTenantRecycleBinItem -Url &amp;lt;String&amp;gt; [-Wait] [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION The Restore-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be restored to its original location.
EXAMPLES EXAMPLE 1 Restore-PnPTenantRecycleBinItem -Url &amp;#34;https://tenant.sharepoint.com/sites/contoso&amp;#34; This will restore the deleted site collection with the url &amp;lsquo;https://tenant.</description>
    </item>
    
    <item>
      <title>Revoke-PnPHubSiteRights</title>
      <link>https://pnp.github.io/powershell/cmdlets/revoke-pnphubsiterights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/revoke-pnphubsiterights/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Revoke permissions to the permissions already in place to associate sites to Hub Sites for one or more specific users
SYNTAX Revoke-PnPHubSiteRights [-Identity] &amp;lt;HubSitePipeBind&amp;gt; -Principals &amp;lt;String[]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Revoke-PnPHubSiteRights -Identity &amp;#34;https://contoso.sharepoint.com/sites/hubsite&amp;#34; -Principals &amp;#34;myuser@mydomain.com&amp;#34;,&amp;#34;myotheruser@mydomain.com&amp;#34; This example shows how to revoke the rights of myuser and myotheruser to associate their sites with the provided Hub Site</description>
    </item>
    
    <item>
      <title>Revoke-PnPSiteDesignRights</title>
      <link>https://pnp.github.io/powershell/cmdlets/revoke-pnpsitedesignrights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/revoke-pnpsitedesignrights/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Revokes the specified principals rights to use the site design.
SYNTAX Revoke-PnPSiteDesignRights [-Identity] &amp;lt;TenantSiteDesignPipeBind&amp;gt; -Principals &amp;lt;String[]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Revoke-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -Principals &amp;#34;myuser@mydomain.com&amp;#34;,&amp;#34;myotheruser@mydomain.com&amp;#34; Revokes rights to the specified principals on the site design specified
EXAMPLE 2 Get-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd | Revoke-PnPSiteDesignRights -Principals &amp;#34;myuser@mydomain.com&amp;#34;,&amp;#34;myotheruser@mydomain.com&amp;#34; Revokes rights to the specified principals on the site design specified</description>
    </item>
    
    <item>
      <title>Revoke-PnPTenantServicePrincipalPermission</title>
      <link>https://pnp.github.io/powershell/cmdlets/revoke-pnptenantserviceprincipalpermission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/revoke-pnptenantserviceprincipalpermission/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Revokes a permission that was previously granted to the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
SYNTAX Revoke-PnPTenantServicePrincipalPermission -ObjectId &amp;lt;String&amp;gt; [-Force] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Revokes a permission that was previously granted to the &amp;ldquo;SharePoint Online Client&amp;rdquo; service principal.
EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Revoke-PnPUserSession</title>
      <link>https://pnp.github.io/powershell/cmdlets/revoke-pnpusersession/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/revoke-pnpusersession/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Provides IT administrators the ability to logout a user&amp;rsquo;s O365 sessions across all their devices.
SYNTAX Revoke-PnPUserSession -User &amp;lt;String&amp;gt; [-WhatIf] [-Confirm] DESCRIPTION User will be signed out of browser, desktop and mobile applications accessing Office 365 resources across all devices.
It is not applicable to guest users.
EXAMPLES EXAMPLE 1 Revoke-PnPUserSession -User user1@contoso.com This example signs out user1 in the contoso tenancy from all devices.</description>
    </item>
    
    <item>
      <title>Save-PnPClientSidePageConversionLog</title>
      <link>https://pnp.github.io/powershell/cmdlets/save-pnpclientsidepageconversionlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/save-pnpclientsidepageconversionlog/</guid>
      <description>SYNOPSIS Persists the current client side page conversion log data to the loggers linked to the last used page transformation run. Needs to be used in conjunction with the -LogSkipFlush flag on the ConvertTo-PnPClientSidePage cmdlet
SYNTAX Save-PnPClientSidePageConversionLog [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] EXAMPLES  </description>
    </item>
    
    <item>
      <title>Save-PnPSiteTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/save-pnpprovisioningtemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/save-pnpprovisioningtemplate/</guid>
      <description>SYNOPSIS Saves a PnP site template to the file system
SYNTAX Save-PnPSiteTemplate -Template &amp;lt;SiteTemplatePipeBind&amp;gt; [-Out] &amp;lt;String&amp;gt; [-Schema &amp;lt;XMLPnPSchemaVersion&amp;gt;] [-Force] [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Save-PnPSiteTemplate -Template .\template.xml -Out .\template.pnp Saves a PnP provisioning template to the file system as a PnP file.
EXAMPLE 2 $template = Read-PnPSiteTemplate -Path template.xml Save-PnPSiteTemplate -Template $template -Out .\template.pnp Saves a PnP site template to the file system as a PnP file. The schema used will the latest released schema when creating the PnP file regardless of the original schema</description>
    </item>
    
    <item>
      <title>Save-PnPTenantTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/save-pnptenanttemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/save-pnptenanttemplate/</guid>
      <description>SYNOPSIS Saves a PnP provisioning hierarchy to the file system
SYNTAX Save-PnPTenantTemplate -Template &amp;lt;ProvisioningHierarchyPipeBind&amp;gt; [-Out] &amp;lt;String&amp;gt; [-Schema &amp;lt;XMLPnPSchemaVersion&amp;gt;] [-Force] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Save-PnPTenantTemplate -Template template.xml -Out .\tenanttemplate.pnp Saves a PnP tenant template to the file system
EXAMPLE 2 $template = Read-PnPTenantTemplate -Path template.xml Save-PnPTenantTemplate -Template $template -Out .\template.pnp Saves a PnP tenant template to the file system as a PnP file. The schema used will the latest released schema when creating the PnP file regardless of the original schema</description>
    </item>
    
    <item>
      <title>Send-PnPMail</title>
      <link>https://pnp.github.io/powershell/cmdlets/send-pnpmail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/send-pnpmail/</guid>
      <description>SYNOPSIS Sends an email using the Office 365 SMTP Service or SharePoint, depending on the parameters specified. See detailed help for more information.
SYNTAX Send-PnPMail [-Server &amp;lt;String&amp;gt;] [-From &amp;lt;String&amp;gt;] [-Password &amp;lt;String&amp;gt;] -To &amp;lt;String[]&amp;gt; [-Cc &amp;lt;String[]&amp;gt;] -Subject &amp;lt;String&amp;gt; -Body &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Send-PnPMail -To address@tenant.sharepointonline.com -Subject test -Body test Sends an e-mail using the SharePoint SendEmail method using the current context. E-mail is sent from the system account and can only be sent to accounts in the same tenant</description>
    </item>
    
    <item>
      <title>Set-PnPApplicationCustomizer</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpapplicationcustomizer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpapplicationcustomizer/</guid>
      <description>SYNOPSIS Updates a SharePoint Framework client side extension application customizer
SYNTAX Custom Action Id Set-PnPApplicationCustomizer [[-Identity] &amp;lt;UserCustomActionPipeBind&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Title &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Sequence &amp;lt;Int32&amp;gt;] [-ClientSideComponentProperties &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Client Side Component Id Set-PnPApplicationCustomizer [-ClientSideComponentId &amp;lt;Guid&amp;gt;] [-Scope &amp;lt;CustomActionScope&amp;gt;] [-Title &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Sequence &amp;lt;Int32&amp;gt;] [-ClientSideComponentProperties &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Updates a SharePoint Framework client side extension application customizer by updating its custom action. Only the properties that will be provided will be updated.</description>
    </item>
    
    <item>
      <title>Set-PnPAppSideLoading</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpappsideloading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpappsideloading/</guid>
      <description>SYNOPSIS Enables the App SideLoading Feature on a site
SYNTAX On Set-PnPAppSideLoading [-On] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Off Set-PnPAppSideLoading [-Off] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPAppSideLoading -On This will turn on App side loading
EXAMPLE 2 Set-PnPAppSideLoading -Off This will turn off App side loading
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Set-PnPAuditing</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpauditing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpauditing/</guid>
      <description>SYNOPSIS Set Auditing setting for a site
SYNTAX Enable all Set-PnPAuditing [-EnableAll] [-RetentionTime &amp;lt;Int32&amp;gt;] [-TrimAuditLog] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Disable All Set-PnPAuditing [-DisableAll] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Specific flags Set-PnPAuditing [-RetentionTime &amp;lt;Int32&amp;gt;] [-TrimAuditLog] [-EditItems] [-CheckOutCheckInItems] [-MoveCopyItems] [-DeleteRestoreItems] [-EditContentTypesColumns] [-SearchContent] [-EditUsersPermissions] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPAuditing -EnableAll Enables all auditing settings for the current site
EXAMPLE 2 Set-PnPAuditing -DisableAll Disables all auditing settings for the current site
EXAMPLE 3 Set-PnPAuditing -RetentionTime 7 Sets the audit log trimming to 7 days, this also enables the automatic trimming of the audit log</description>
    </item>
    
    <item>
      <title>Set-PnPAvailablePageLayouts</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpavailablepagelayouts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpavailablepagelayouts/</guid>
      <description>SYNOPSIS Sets the available page layouts for the current site
SYNTAX SPECIFIC Set-PnPAvailablePageLayouts -PageLayouts &amp;lt;String[]&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] ALL Set-PnPAvailablePageLayouts [-AllowAllPageLayouts] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] INHERIT Set-PnPAvailablePageLayouts [-InheritPageLayouts] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -AllowAllPageLayouts An array of page layout files to set as available page layouts for the site.
Type: SwitchParameter Parameter Sets: ALL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Set-PnPBrowserIdleSignout</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpbrowseridlesignout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpbrowseridlesignout/</guid>
      <description>SYNOPSIS Sets the current configuration values for Idle session sign-out policy.
SYNTAX Set-PnPBrowserIdleSignOut [-Enabled] &amp;lt;Boolean&amp;gt; [[-WarnAfter] &amp;lt;TimeSpan&amp;gt;] [[-SignOutAfter] &amp;lt;TimeSpan&amp;gt;] DESCRIPTION Use this cmdlet to set the current configuration values for Idle session sign-out, the time at which users are warned and subsequently signed out of Microsoft 365 after a period of browser inactivity in SharePoint and OneDrive
EXAMPLES EXAMPLE 1 Set-PnPBrowserIdleSignOut -Enabled:$true -WarnAfter &amp;#34;0.00:45:00&amp;#34; -SignOutAfter &amp;#34;0.01:00:00&amp;#34; This example enables the browser idle sign-out policy, sets a warning at 45 minutes and signs out users after a period of 60 minutes of browser inactivity.</description>
    </item>
    
    <item>
      <title>Set-PnPBuiltInDesignPackageVisibility</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpbuiltindesignpackagevisibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpbuiltindesignpackagevisibility/</guid>
      <description>Get-PnPBuiltInDesignPackageVisibility SYNOPSIS Sets the visibility of the available built-in Design Packages at moment of site creation.
SYNTAX Set-PnPBuiltInDesignPackageVisibility [-IsVisible] &amp;lt;Boolean&amp;gt; [-DesignPackage] &amp;lt;DesignPackageType&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets the visibility of the available built-in Design Packages.
EXAMPLES EXAMPLE 1 Set-PnPBuiltInDesignPackageVisibility -DesignPackage Showcase -IsVisible:$false This example retrieves the current visibility state of Showcase built-in design package.
EXAMPLE 2 Get-PnPBuiltInDesignPackageVisibility This example sets the visibility of Showcase design package to false.
PARAMETERS -DesignPackage Name of the design package, available names are</description>
    </item>
    
    <item>
      <title>Set-PnPClientSidePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpclientsidepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpclientsidepage/</guid>
      <description>SYNOPSIS Sets parameters of a Client-Side Page
SYNTAX Set-PnPClientSidePage [-Identity] &amp;lt;ClientSidePagePipeBind&amp;gt; [-Name &amp;lt;String&amp;gt;] [-Title &amp;lt;String&amp;gt;] [-LayoutType &amp;lt;ClientSidePageLayoutType&amp;gt;] [-PromoteAs &amp;lt;ClientSidePagePromoteType&amp;gt;] [-CommentsEnabled] [-Publish] [-HeaderType &amp;lt;ClientSidePageHeaderType&amp;gt;] [-ContentType &amp;lt;ContentTypePipeBind&amp;gt;] [-ThumbnailUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPClientSidePage -Identity &amp;#34;MyPage&amp;#34; -LayoutType Home -Title &amp;#34;My Page&amp;#34; Updates the properties of the Client-Side page named &amp;lsquo;MyPage&amp;rsquo;
EXAMPLE 2 Set-PnPClientSidePage -Identity &amp;#34;MyPage&amp;#34; -CommentsEnabled Enables the comments on the Client-Side page named &amp;lsquo;MyPage&amp;rsquo;
EXAMPLE 3 Set-PnPClientSidePage -Identity &amp;#34;MyPage&amp;#34; -CommentsEnabled:$false Disables the comments on the Client-Side page named &amp;lsquo;MyPage&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Set-PnPClientSideText</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpclientsidetext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpclientsidetext/</guid>
      <description>SYNOPSIS Set Client-Side Text Component properties
SYNTAX Set-PnPClientSideText [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -InstanceId &amp;lt;Guid&amp;gt; -Text &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets the rendered text in existing client side text component
EXAMPLES EXAMPLE 1 Set-PnPSetClientSideText -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Text &amp;#34;MyText&amp;#34; Sets the text of the client side text component.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Set-PnPClientSideWebPart</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpclientsidewebpart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpclientsidewebpart/</guid>
      <description>SYNOPSIS Set Client-Side Web Part properties
SYNTAX Set-PnPClientSideWebPart [-Page] &amp;lt;ClientSidePagePipeBind&amp;gt; -Identity &amp;lt;ClientSideWebPartPipeBind&amp;gt; [-Title &amp;lt;String&amp;gt;] [-PropertiesJson &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets specific client side web part properties. Notice that the title parameter will only set the -internal- title of web part. The title which is shown in the UI will, if possible, have to be set using the PropertiesJson parameter. Use Get-PnPClientSideComponent to retrieve the instance id and properties of a web part.</description>
    </item>
    
    <item>
      <title>Set-PnPContext</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpcontext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpcontext/</guid>
      <description>SYNOPSIS Set the ClientContext
SYNTAX Set-PnPContext [-Context] &amp;lt;ClientContext&amp;gt; [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets the Client Context to use by the cmdlets, which allows easy context switching. See examples for details.
EXAMPLES EXAMPLE 1 Connect-PnPOnline -Url $siteAurl -Credentials $credentials $ctx = Get-PnPContext Get-PnPList # returns the lists from site specified with $siteAurl Connect-PnPOnline -Url $siteBurl -Credentials $credentials Get-PnPList # returns the lists from the site specified with $siteBurl Set-PnPContext -Context $ctx # switch back to site A Get-PnPList # returns the lists from site A PARAMETERS -Context The ClientContext to set</description>
    </item>
    
    <item>
      <title>Set-PnPDefaultColumnValues</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpdefaultcolumnvalues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpdefaultcolumnvalues/</guid>
      <description>SYNOPSIS Sets default column values for a document library
SYNTAX Set-PnPDefaultColumnValues [-List] &amp;lt;ListPipeBind&amp;gt; -Field &amp;lt;FieldPipeBind&amp;gt; -Value &amp;lt;String[]&amp;gt; [-Folder &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified. Supports both text and taxonomy fields.
EXAMPLES EXAMPLE 1 Set-PnPDefaultColumnValues -List Documents -Field TaxKeyword -Value &amp;#34;Company|Locations|Stockholm&amp;#34; Sets a default value for the enterprise keywords field on a library to a term called &amp;ldquo;Stockholm&amp;rdquo;, located in the &amp;ldquo;Locations&amp;rdquo; term set, which is part of the &amp;ldquo;Company&amp;rdquo; term group</description>
    </item>
    
    <item>
      <title>Set-PnPDefaultContentTypeToList</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpdefaultcontenttypetolist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpdefaultcontenttypetolist/</guid>
      <description>SYNOPSIS Sets the default content type for a list
SYNTAX Set-PnPDefaultContentTypeToList -List &amp;lt;ListPipeBind&amp;gt; -ContentType &amp;lt;ContentTypePipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPDefaultContentTypeToList -List &amp;#34;Project Documents&amp;#34; -ContentType &amp;#34;Project&amp;#34; This will set the Project content type (which has already been added to a list) as the default content type
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Set-PnPDefaultPageLayout</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpdefaultpagelayout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpdefaultpagelayout/</guid>
      <description>SYNOPSIS Sets a specific page layout to be the default page layout for a publishing site
SYNTAX TITLE Set-PnPDefaultPageLayout -Title &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] INHERIT Set-PnPDefaultPageLayout [-InheritFromParentSite] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPDefaultPageLayout -Title projectpage.aspx Sets projectpage.aspx to be the default page layout for the current web
EXAMPLE 2 Set-PnPDefaultPageLayout -Title test/testpage.aspx Sets a page layout in a folder in the Master Page &amp;amp; Page Layout gallery, such as _catalog/masterpage/test/testpage.</description>
    </item>
    
    <item>
      <title>Set-PnPDocumentSetField</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpdocumentsetfield/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpdocumentsetfield/</guid>
      <description>SYNOPSIS Sets a site column from the available content types to a document set
SYNTAX Set-PnPDocumentSetField -DocumentSet &amp;lt;DocumentSetPipeBind&amp;gt; -Field &amp;lt;FieldPipeBind&amp;gt; [-SetSharedField] [-SetWelcomePageField] [-RemoveSharedField] [-RemoveWelcomePageField] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPDocumentSetField -Field &amp;#34;Test Field&amp;#34; -DocumentSet &amp;#34;Test Document Set&amp;#34; -SetSharedField -SetWelcomePageField This will set the field, available in one of the available content types, as a Shared Field and as a Welcome Page Field.
EXAMPLE 2 Set-PnPDocumentSetField -Field &amp;#34;Test Field&amp;#34; -DocumentSet &amp;#34;Test Document Set&amp;#34; -RemoveSharedField -RemoveWelcomePageField This will remove the field, available in one of the available content types, as a Shared Field and as a Welcome Page Field.</description>
    </item>
    
    <item>
      <title>Set-PnPField</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpfield/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpfield/</guid>
      <description>SYNOPSIS Changes one or more properties of a field in a specific list or for the whole web
SYNTAX Set-PnPField [-List &amp;lt;ListPipeBind&amp;gt;] [-Identity] &amp;lt;FieldPipeBind&amp;gt; -Values &amp;lt;Hashtable&amp;gt; [-UpdateExistingLists] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPField -Identity AssignedTo -Values @{JSLink=&amp;#34;customrendering.js&amp;#34;;Group=&amp;#34;My fields&amp;#34;} Updates the AssignedTo field on the current web to use customrendering.js for the JSLink and sets the group name the field is categorized in to &amp;ldquo;My Fields&amp;rdquo;. Lists that are already using the AssignedTo field will not be updated.</description>
    </item>
    
    <item>
      <title>Set-PnPFileCheckedIn</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpfilecheckedin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpfilecheckedin/</guid>
      <description>SYNOPSIS Checks in a file
SYNTAX Set-PnPFileCheckedIn [-Url] &amp;lt;String&amp;gt; [-CheckinType &amp;lt;CheckinType&amp;gt;] [-Comment &amp;lt;String&amp;gt;] [-Approve] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 PS:&amp;gt;Set-PnPFileCheckedIn -Url &amp;#34;/Documents/Contract.docx&amp;#34; Checks in the file &amp;ldquo;Contract.docx&amp;rdquo; in the &amp;ldquo;Documents&amp;rdquo; library
EXAMPLE 2 PS:&amp;gt;Set-PnPFileCheckedIn -Url &amp;#34;/Documents/Contract.docx&amp;#34; -CheckinType MinorCheckin -Comment &amp;#34;Smaller changes&amp;#34; Checks in the file &amp;ldquo;Contract.docx&amp;rdquo; in the &amp;ldquo;Documents&amp;rdquo; library as a minor version and adds the check in comment &amp;ldquo;Smaller changes&amp;rdquo;
PARAMETERS -Approve Approve file</description>
    </item>
    
    <item>
      <title>Set-PnPFileCheckedOut</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpfilecheckedout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpfilecheckedout/</guid>
      <description>SYNOPSIS Checks out a file
SYNTAX Set-PnPFileCheckedOut [-Url] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 PS:&amp;gt;Set-PnPFileCheckedOut -Url &amp;#34;/sites/testsite/subsite/Documents/Contract.docx&amp;#34; Checks out the file &amp;ldquo;Contract.docx&amp;rdquo; in the &amp;ldquo;Documents&amp;rdquo; library.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The server relative url of the file to check out</description>
    </item>
    
    <item>
      <title>Set-PnPFolderPermission</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpfolderpermission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpfolderpermission/</guid>
      <description>SYNOPSIS Sets folder permissions. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet.
SYNTAX User (Default) Set-PnPFolderPermission [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;FolderPipeBind&amp;gt; -User &amp;lt;String&amp;gt; [-AddRole &amp;lt;String&amp;gt;] [-RemoveRole &amp;lt;String&amp;gt;] [-ClearExisting] [-SystemUpdate] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Group Set-PnPFolderPermission [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;FolderPipeBind&amp;gt; -Group &amp;lt;GroupPipeBind&amp;gt; [-AddRole &amp;lt;String&amp;gt;] [-RemoveRole &amp;lt;String&amp;gt;] [-ClearExisting] [-SystemUpdate] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Inherit Set-PnPFolderPermission [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;FolderPipeBind&amp;gt; [-InheritPermissions] [-SystemUpdate] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPFolderPermission -List &amp;#39;Shared Documents&amp;#39; -Identity &amp;#39;Shared Documents\Folder&amp;#39; -User &amp;#39;user@contoso.</description>
    </item>
    
    <item>
      <title>Set-PnPFooter</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpfooter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpfooter/</guid>
      <description>SYNOPSIS Configures the footer of the current web
SYNTAX Set-PnPFooter [-Enabled] [-Layout &amp;lt;FooterLayoutType&amp;gt;] [-BackgroundTheme &amp;lt;FooterVariantThemeType&amp;gt;] [-Title &amp;lt;String&amp;gt;] [-LogoUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Allows the footer to be enabled or disabled and fine tuned in the current web. For modifying the navigation links shown in the footer, use Add-PnPNavigationNode -Location Footer.
EXAMPLES EXAMPLE 1 Set-PnPFooter -Enabled:$true Enables the footer to be shown on the current web
EXAMPLE 2 Set-PnPFooter -Enabled:$true -Layout Extended -BackgroundTheme Neutral Enables the footer to be shown on the current web with the extended layout using a neutral background</description>
    </item>
    
    <item>
      <title>Set-PnPGraphSubscription</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpgraphsubscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpgraphsubscription/</guid>
      <description>SYNOPSIS Updates an existing Microsoft Graph subscription. Required Azure Active Directory application permission depends on the resource the subscription exists on, see https://docs.microsoft.com/graph/api/subscription-delete#permissions.
SYNTAX Set-PnPGraphSubscription -Identity &amp;lt;GraphSubscriptionPipeBind&amp;gt; -ExpirationDate &amp;lt;DateTime&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPGraphSubscription -Identity bc204397-1128-4911-9d70-1d8bceee39da -ExpirationDate &amp;#34;2020-11-22T18:23:45.9356913Z&amp;#34; Updates the Microsoft Graph subscription with the id &amp;lsquo;bc204397-1128-4911-9d70-1d8bceee39da&amp;rsquo; to expire at the mentioned date
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Set-PnPGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpgroup/</guid>
      <description>SYNOPSIS Updates a group
SYNTAX Set-PnPGroup -Identity &amp;lt;GroupPipeBind&amp;gt; [-SetAssociatedGroup &amp;lt;AssociatedGroupType&amp;gt;] [-AddRole &amp;lt;String&amp;gt;] [-RemoveRole &amp;lt;String&amp;gt;] [-Title &amp;lt;String&amp;gt;] [-Owner &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-AllowRequestToJoinLeave &amp;lt;Boolean&amp;gt;] [-AutoAcceptRequestToJoinLeave &amp;lt;Boolean&amp;gt;] [-AllowMembersEditMembership &amp;lt;Boolean&amp;gt;] [-OnlyAllowMembersViewMembership &amp;lt;Boolean&amp;gt;] [-RequestToJoinEmail &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPGroup -Identity &amp;#39;My Site Members&amp;#39; -SetAssociatedGroup Members Sets the SharePoint group with the name &amp;lsquo;My Site Members&amp;rsquo; as the associated members group
EXAMPLE 2 Set-PnPGroup -Identity &amp;#39;My Site Members&amp;#39; -Owner &amp;#39;site owners&amp;#39; Sets the SharePoint group with the name &amp;lsquo;site owners&amp;rsquo; as the owner of the SharePoint group with the name &amp;lsquo;My Site Members&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Set-PnPGroupPermissions</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpgrouppermissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpgrouppermissions/</guid>
      <description>SYNOPSIS Adds and/or removes permissions of a specific SharePoint group
SYNTAX Set-PnPGroupPermissions [-Identity] &amp;lt;GroupPipeBind&amp;gt; [-List &amp;lt;ListPipeBind&amp;gt;] [-AddRole &amp;lt;String[]&amp;gt;] [-RemoveRole &amp;lt;String[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPGroupPermissions -Identity &amp;#39;My Site Members&amp;#39; -AddRole Contribute Adds the &amp;lsquo;Contribute&amp;rsquo; permission to the SharePoint group with the name &amp;lsquo;My Site Members&amp;rsquo;
EXAMPLE 2 Set-PnPGroupPermissions -Identity &amp;#39;My Site Members&amp;#39; -RemoveRole &amp;#39;Full Control&amp;#39; -AddRole &amp;#39;Read&amp;#39; Removes the &amp;lsquo;Full Control&amp;rsquo; from and adds the &amp;lsquo;Contribute&amp;rsquo; permissions to the SharePoint group with the name &amp;lsquo;My Site Members&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Set-PnPHideDefaultThemes</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnphidedefaultthemes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnphidedefaultthemes/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Defines if the default / OOTB themes should be visible to users or not.
SYNTAX Set-PnPHideDefaultThemes -HideDefaultThemes &amp;lt;Boolean&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Use this cmdlet to hide or show the default themes to users
You must be a SharePoint Online global administrator to run the cmdlet.
EXAMPLES EXAMPLE 1 Set-PnPHideDefaultThemes -HideDefaultThemes $true This example hides the default themes</description>
    </item>
    
    <item>
      <title>Set-PnPHomePage</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnphomepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnphomepage/</guid>
      <description>SYNOPSIS Sets the home page of the current web.
SYNTAX Set-PnPHomePage [-RootFolderRelativeUrl] &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPHomePage -RootFolderRelativeUrl SitePages/Home.aspx Sets the home page to the home.aspx file which resides in the SitePages library
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RootFolderRelativeUrl The root folder relative url of the homepage, e.</description>
    </item>
    
    <item>
      <title>Set-PnPHomeSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnphomesite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnphomesite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets the home site for your tenant
SYNTAX Set-PnPHomeSite -Url &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPHomeSite -Url &amp;#34;https://yourtenant.sharepoint.com/sites/myhome&amp;#34; Sets the home site to the provided site collection url
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Set-PnPHubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnphubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnphubsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets hub site properties
SYNTAX Set-PnPHubSite [-Identity] &amp;lt;HubSitePipeBind&amp;gt; [-Title &amp;lt;String&amp;gt;] [-LogoUrl &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-SiteDesignId &amp;lt;Guid&amp;gt;] [-HideNameInNavigation] [-RequiresJoinApproval] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Allows configuring a hub site
EXAMPLES EXAMPLE 1 Set-PnPHubSite -Identity &amp;#34;https://tenant.sharepoint.com/sites/myhubsite&amp;#34; -Title &amp;#34;My New Title&amp;#34; Sets the title of the hub site
EXAMPLE 2 Set-PnPHubSite -Identity &amp;#34;https://tenant.sharepoint.com/sites/myhubsite&amp;#34; -Description &amp;#34;My updated description&amp;#34; Sets the description of the hub site</description>
    </item>
    
    <item>
      <title>Set-PnPIndexedProperties</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpindexedproperties/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpindexedproperties/</guid>
      <description>SYNOPSIS Marks values of the propertybag to be indexed by search. Notice that this will overwrite the existing flags, i.e. only the properties you define with the cmdlet will be indexed.
SYNTAX Set-PnPIndexedProperties -Keys &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Keys Type: System.</description>
    </item>
    
    <item>
      <title>Set-PnPInPlaceRecordsManagement</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpinplacerecordsmanagement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpinplacerecordsmanagement/</guid>
      <description>SYNOPSIS Activates or deactivates in the place records management feature.
SYNTAX Set-PnPInPlaceRecordsManagement -Enabled &amp;lt;Boolean&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPInPlaceRecordsManagement -Enabled $true Activates In Place Records Management
EXAMPLE 2 Set-PnPInPlaceRecordsManagement -Enabled $false Deactivates In Place Records Management
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enabled Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web.</description>
    </item>
    
    <item>
      <title>Set-PnPKnowledgeHubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpknowledgehubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpknowledgehubsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets the Knowledge Hub Site for your tenant
SYNTAX Set-PnPKnowledgeHubSite -KnowledgeHubSiteUrl &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPKnowledgeHubSite -KnowledgeHubSiteUrl &amp;#34;https://yoursite.sharepoint.com/sites/knowledge&amp;#34; Sets the Knowledge Hub Site for your tenant
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -KnowledgeHubSiteUrl Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices</description>
    </item>
    
    <item>
      <title>Set-PnPLabel</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplabel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplabel/</guid>
      <description>SYNOPSIS Sets a retention label on the specified list or library. Use Reset-PnPLabel to remove the label again.
SYNTAX Set-PnPLabel [-List] &amp;lt;ListPipeBind&amp;gt; -Label &amp;lt;String&amp;gt; [-SyncToItems &amp;lt;Boolean&amp;gt;] [-BlockDeletion &amp;lt;Boolean&amp;gt;] [-BlockEdit &amp;lt;Boolean&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Allows setting a retention label on a list or library and its items. Does not work for sensitivity labels.
EXAMPLES EXAMPLE 1 Set-PnPLabel -List &amp;#34;Demo List&amp;#34; -Label &amp;#34;Project Documentation&amp;#34; This sets an O365 label on the specified list or library.</description>
    </item>
    
    <item>
      <title>Set-PnPList</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplist/</guid>
      <description>SYNOPSIS Updates list settings
SYNTAX Set-PnPList -Identity &amp;lt;ListPipeBind&amp;gt; [-EnableContentTypes &amp;lt;Boolean&amp;gt;] [-BreakRoleInheritance] [-ResetRoleInheritance] [-CopyRoleAssignments] [-ClearSubscopes] [-Title &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Hidden &amp;lt;Boolean&amp;gt;] [-ForceCheckout &amp;lt;Boolean&amp;gt;] [-ListExperience &amp;lt;ListExperience&amp;gt;] [-EnableAttachments &amp;lt;Boolean&amp;gt;] [-EnableFolderCreation &amp;lt;Boolean&amp;gt;] [-EnableVersioning &amp;lt;Boolean&amp;gt;] [-EnableMinorVersions &amp;lt;Boolean&amp;gt;] [-MajorVersions &amp;lt;UInt32&amp;gt;] [-MinorVersions &amp;lt;UInt32&amp;gt;] [-EnableModeration &amp;lt;Boolean&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPList -Identity &amp;#34;Demo List&amp;#34; -EnableContentTypes $true Switches the Enable Content Type switch on the list
EXAMPLE 2 Set-PnPList -Identity &amp;#34;Demo List&amp;#34; -Hidden $true Hides the list from the SharePoint UI.</description>
    </item>
    
    <item>
      <title>Set-PnPListInformationRightsManagement</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplistinformationrightsmanagement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplistinformationrightsmanagement/</guid>
      <description>SYNOPSIS Get the site closure status of the site which has a site policy applied
SYNTAX Set-PnPListInformationRightsManagement -List &amp;lt;ListPipeBind&amp;gt; [-Enable &amp;lt;Boolean&amp;gt;] [-EnableExpiration &amp;lt;Boolean&amp;gt;] [-EnableRejection &amp;lt;Boolean&amp;gt;] [-AllowPrint &amp;lt;Boolean&amp;gt;] [-AllowScript &amp;lt;Boolean&amp;gt;] [-AllowWriteCopy &amp;lt;Boolean&amp;gt;] [-DisableDocumentBrowserView &amp;lt;Boolean&amp;gt;] [-DocumentAccessExpireDays &amp;lt;Int32&amp;gt;] [-DocumentLibraryProtectionExpireDate &amp;lt;DateTime&amp;gt;] [-EnableDocumentAccessExpire &amp;lt;Boolean&amp;gt;] [-EnableDocumentBrowserPublishingView &amp;lt;Boolean&amp;gt;] [-EnableGroupProtection &amp;lt;Boolean&amp;gt;] [-EnableLicenseCacheExpire &amp;lt;Boolean&amp;gt;] [-LicenseCacheExpireDays &amp;lt;Int32&amp;gt;] [-GroupName &amp;lt;String&amp;gt;] [-PolicyDescription &amp;lt;String&amp;gt;] [-PolicyTitle &amp;lt;String&amp;gt;] [-TemplateId &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListInformationRightsManagement -List &amp;#34;Documents&amp;#34; -Enabled $true Enables Information Rights Management (IRM) on the list.</description>
    </item>
    
    <item>
      <title>Set-PnPListItem</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplistitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplistitem/</guid>
      <description>SYNOPSIS Updates a list item
SYNTAX Set-PnPListItem [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; [-ContentType &amp;lt;ContentTypePipeBind&amp;gt;] [-Values &amp;lt;Hashtable&amp;gt;] [-SystemUpdate] [-Label &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListItem -List &amp;#34;Demo List&amp;#34; -Identity 1 -Values @{&amp;#34;Title&amp;#34; = &amp;#34;Test Title&amp;#34;; &amp;#34;Category&amp;#34;=&amp;#34;Test Category&amp;#34;} Sets fields value in the list item with ID 1 in the &amp;ldquo;Demo List&amp;rdquo;. It sets both the Title and Category fields with the specified values. Notice, use the internal names of fields.</description>
    </item>
    
    <item>
      <title>Set-PnPListItemAsRecord</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplistitemasrecord/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplistitemasrecord/</guid>
      <description>SYNOPSIS Declares a list item as a record, for more information, see https://docs.microsoft.com/sharepoint/governance/records-management-in-sharepoint-server
SYNTAX Set-PnPListItemAsRecord [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; [-DeclarationDate &amp;lt;DateTime&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListItemAsRecord -List &amp;#34;Documents&amp;#34; -Identity 4 Declares the document in the documents library with id 4 as a record
EXAMPLE 2 Set-PnPListItemAsRecord -List &amp;#34;Documents&amp;#34; -Identity 4 -DeclarationDate $date Declares the document in the documents library with id as a record
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Set-PnPListItemPermission</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplistitempermission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplistitempermission/</guid>
      <description>SYNOPSIS Sets list item permissions. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet.
SYNTAX User (Default) Set-PnPListItemPermission [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; -User &amp;lt;String&amp;gt; [-AddRole &amp;lt;String&amp;gt;] [-RemoveRole &amp;lt;String&amp;gt;] [-ClearExisting] [-SystemUpdate] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Group Set-PnPListItemPermission [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; -Group &amp;lt;GroupPipeBind&amp;gt; [-AddRole &amp;lt;String&amp;gt;] [-RemoveRole &amp;lt;String&amp;gt;] [-ClearExisting] [-SystemUpdate] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Inherit Set-PnPListItemPermission [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; [-InheritPermissions] [-SystemUpdate] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListItemPermission -List &amp;#39;Documents&amp;#39; -Identity 1 -User &amp;#39;user@contoso.</description>
    </item>
    
    <item>
      <title>Set-PnPListPermission</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplistpermission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplistpermission/</guid>
      <description>SYNOPSIS Sets list permissions
SYNTAX Group Set-PnPListPermission -Identity &amp;lt;ListPipeBind&amp;gt; -Group &amp;lt;GroupPipeBind&amp;gt; [-AddRole &amp;lt;String&amp;gt;] [-RemoveRole &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] User Set-PnPListPermission -Identity &amp;lt;ListPipeBind&amp;gt; -User &amp;lt;String&amp;gt; [-AddRole &amp;lt;String&amp;gt;] [-RemoveRole &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListPermission -Identity &amp;#39;Documents&amp;#39; -User &amp;#39;user@contoso.com&amp;#39; -AddRole &amp;#39;Contribute&amp;#39; Adds the &amp;lsquo;Contribute&amp;rsquo; permission to the user &amp;lsquo;user@contoso.com&amp;rsquo; for the list &amp;lsquo;Documents&amp;rsquo;
EXAMPLE 2 Set-PnPListPermission -Identity &amp;#39;Documents&amp;#39; -User &amp;#39;user@contoso.com&amp;#39; -RemoveRole &amp;#39;Contribute&amp;#39; Removes the &amp;lsquo;Contribute&amp;rsquo; permission to the user &amp;lsquo;user@contoso.</description>
    </item>
    
    <item>
      <title>Set-PnPListRecordDeclaration</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnplistrecorddeclaration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnplistrecorddeclaration/</guid>
      <description>SYNOPSIS The RecordDeclaration parameter supports 4 values:
AlwaysAllowManualDeclaration NeverAllowManualDeclaration UseSiteCollectionDefaults
SYNTAX Set-PnPListRecordDeclaration -List &amp;lt;ListPipeBind&amp;gt; [-ManualRecordDeclaration &amp;lt;EcmListManualRecordDeclaration&amp;gt;] [-AutoRecordDeclaration &amp;lt;Boolean&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListRecordDeclaration -List &amp;#34;Documents&amp;#34; -ManualRecordDeclaration NeverAllowManualDeclaration Sets the manual record declaration to never allow
EXAMPLE 2 Set-PnPListRecordDeclaration -List &amp;#34;Documents&amp;#34; -AutoRecordDeclaration $true Turns on auto record declaration for the list
PARAMETERS -AutoRecordDeclaration Defines if you want to set auto record declaration on the list
Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Set-PnPMasterPage</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpmasterpage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpmasterpage/</guid>
      <description>SYNOPSIS Set the masterpage
SYNTAX Server Relative Set-PnPMasterPage [-MasterPageServerRelativeUrl &amp;lt;String&amp;gt;] [-CustomMasterPageServerRelativeUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Site Relative Set-PnPMasterPage [-MasterPageSiteRelativeUrl &amp;lt;String&amp;gt;] [-CustomMasterPageSiteRelativeUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets the default master page of the current web.
EXAMPLES EXAMPLE 1 Set-PnPMasterPage -MasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master Sets the master page based on a server relative URL
EXAMPLE 2 Set-PnPMasterPage -MasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master -CustomMasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master Sets the master page and custom master page based on a server relative URL</description>
    </item>
    
    <item>
      <title>Set-PnPMicrosoft365Group</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpmicrosoft365group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpmicrosoft365group/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Sets Microsoft 365 Group properties
SYNTAX Set-PnPMicrosoft365Group -Identity &amp;lt;Microsoft365GroupPipeBind&amp;gt; [-DisplayName &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Owners &amp;lt;String[]&amp;gt;] [-Members &amp;lt;String[]&amp;gt;] [-IsPrivate] [-GroupLogoPath &amp;lt;String&amp;gt;] [-CreateTeam] [-HideFromAddressLists &amp;lt;Boolean&amp;gt;] [-HideFromOutlookClients &amp;lt;Boolean&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMicrosoft365Group -Identity $group -DisplayName &amp;#34;My Displayname&amp;#34; Sets the display name of the group where $group is a Group entity
EXAMPLE 2 Set-PnPMicrosoft365Group -Identity $groupId -Descriptions &amp;#34;My Description&amp;#34; -DisplayName &amp;#34;My DisplayName&amp;#34; Sets the display name and description of a group based upon its ID</description>
    </item>
    
    <item>
      <title>Set-PnPMinimalDownloadStrategy</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpminimaldownloadstrategy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpminimaldownloadstrategy/</guid>
      <description>SYNOPSIS Activates or deactivates the minimal downloading strategy.
SYNTAX On Set-PnPMinimalDownloadStrategy [-On] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Off Set-PnPMinimalDownloadStrategy [-Off] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Activates or deactivates the minimal download strategy feature of a site
EXAMPLES EXAMPLE 1 Set-PnPMinimalDownloadStrategy -Off Will deactivate minimal download strategy (MDS) for the current web.
EXAMPLE 2 Set-PnPMinimalDownloadStrategy -On Will activate minimal download strategy (MDS) for the current web.
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Set-PnPPropertyBagValue</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnppropertybagvalue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnppropertybagvalue/</guid>
      <description>SYNOPSIS Sets a property bag value
SYNTAX Web Set-PnPPropertyBagValue -Key &amp;lt;String&amp;gt; -Value &amp;lt;String&amp;gt; [-Indexed] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Folder Set-PnPPropertyBagValue -Key &amp;lt;String&amp;gt; -Value &amp;lt;String&amp;gt; [-Folder &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPPropertyBagValue -Key MyKey -Value MyValue This sets or adds a value to the current web property bag
EXAMPLE 2 Set-PnPPropertyBagValue -Key MyKey -Value MyValue -Folder / This sets or adds a value to the root folder of the current web</description>
    </item>
    
    <item>
      <title>Set-PnPRequestAccessEmails</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnprequestaccessemails/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnprequestaccessemails/</guid>
      <description>SYNOPSIS Sets Request Access Email on a web
SYNTAX Set-PnPRequestAccessEmails [-Emails &amp;lt;String[]&amp;gt;] [-Disabled] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Enables or disables access requests to be sent and configures which e-mail address should receive these requests. The web you apply this on must have unique rights.
EXAMPLES EXAMPLE 1 Set-PnPRequestAccessEmails -Emails someone@example.com This will enable requesting access and send the requests to the provided e-mail address
EXAMPLE 2 Set-PnPRequestAccessEmails -Disabled This will disable the ability to request access to the site</description>
    </item>
    
    <item>
      <title>Set-PnPSearchConfiguration</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsearchconfiguration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsearchconfiguration/</guid>
      <description>SYNOPSIS Sets the search configuration
SYNTAX Config Set-PnPSearchConfiguration -Configuration &amp;lt;String&amp;gt; [-Scope &amp;lt;SearchConfigurationScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Path Set-PnPSearchConfiguration -Path &amp;lt;String&amp;gt; [-Scope &amp;lt;SearchConfigurationScope&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSearchConfiguration -Configuration $config Sets the search configuration for the current web
EXAMPLE 2 Set-PnPSearchConfiguration -Configuration $config -Scope Site Sets the search configuration for the current site collection
EXAMPLE 3 Set-PnPSearchConfiguration -Configuration $config -Scope Subscription Sets the search configuration for the current tenant</description>
    </item>
    
    <item>
      <title>Set-PnPSearchSettings</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsearchsettings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsearchsettings/</guid>
      <description>SYNOPSIS Sets search settings for a site
SYNTAX Set-PnPSearchSettings [-SearchBoxInNavBar &amp;lt;SearchBoxInNavBarType&amp;gt;] [-SearchPageUrl &amp;lt;String&amp;gt;] [-SearchBoxPlaceholderText &amp;lt;String&amp;gt;] [-SearchScope &amp;lt;SearchScopeType&amp;gt;] [-Scope &amp;lt;SearchSettingsScope&amp;gt;] [-Force] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSearchSettings -SearchBoxInNavBar Hidden -Scope Site Hide the suite bar search box on all pages and sites in the site collection
EXAMPLE 2 Set-PnPSearchSettings -SearchBoxInNavBar Hidden -Scope Web Hide the suite bar search box on all pages in the current site
EXAMPLE 3 Set-PnPSearchSettings -SearchPageUrl &amp;#34;https://contoso.</description>
    </item>
    
    <item>
      <title>Set-PnPSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsite/</guid>
      <description>SYNOPSIS Sets Site Collection properties.
SYNTAX Set Properties Set-PnPSite [-Identity &amp;lt;String&amp;gt;] [-Classification &amp;lt;String&amp;gt;] [-DisableFlows] [-LogoFilePath &amp;lt;String&amp;gt;] [-Sharing &amp;lt;SharingCapabilities&amp;gt;] [-StorageMaximumLevel &amp;lt;Int64&amp;gt;] [-StorageWarningLevel &amp;lt;Int64&amp;gt;] [-AllowSelfServiceUpgrade] [-NoScriptSite] [-Owners &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt;] [-CommentsOnSitePagesDisabled] [-DefaultLinkPermission &amp;lt;SharingPermissionType&amp;gt;] [-DefaultSharingLinkType &amp;lt;SharingLinkType&amp;gt;] [-DisableAppViews &amp;lt;AppViewsPolicy&amp;gt;] [-DisableCompanyWideSharingLinks &amp;lt;CompanyWideSharingLinksPolicy&amp;gt;] [-DisableSharingForNonOwners] [-LocaleId &amp;lt;UInt32&amp;gt;] [-RestrictedToGeo &amp;lt;RestrictedToRegion&amp;gt;] [-SocialBarOnSitePagesDisabled] [-AnonymousLinkExpirationInDays &amp;lt;Int32&amp;gt;] [-OverrideTenantAnonymousLinkExpirationPolicy] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Set Lock State Set-PnPSite [-Identity &amp;lt;String&amp;gt;] [-Classification &amp;lt;String&amp;gt;] [-DisableFlows] [-LockState &amp;lt;SiteLockState&amp;gt;] [-Wait] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSite -Classification &amp;#34;HBI&amp;#34; Sets the current site classification to HBI</description>
    </item>
    
    <item>
      <title>Set-PnPSiteClosure</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsiteclosure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsiteclosure/</guid>
      <description>SYNOPSIS Opens or closes a site which has a site policy applied
SYNTAX Set-PnPSiteClosure -State &amp;lt;ClosureState&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteClosure -State Open This opens a site which has been closed and has a site policy applied.
EXAMPLE 2 Set-PnPSiteClosure -State Closed This closes a site which is open and has a site policy applied.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Set-PnPSiteDesign</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsitedesign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsitedesign/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Updates a Site Design on the current tenant.
SYNTAX Set-PnPSiteDesign -Identity &amp;lt;TenantSiteDesignPipeBind&amp;gt; [-Title &amp;lt;String&amp;gt;] [-SiteScriptIds &amp;lt;GuidPipeBind[]&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-IsDefault] [-PreviewImageAltText &amp;lt;String&amp;gt;] [-PreviewImageUrl &amp;lt;String&amp;gt;] [-WebTemplate &amp;lt;SiteWebTemplate&amp;gt;] [-Version &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e -Title &amp;#34;My Updated Company Design&amp;#34; Updates an existing Site Design and sets a new title.
EXAMPLE 2 $design = Get-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e Set-PnPSiteDesign -Identity $design -Title &amp;#34;My Updated Company Design&amp;#34; Updates an existing Site Design and sets a new title.</description>
    </item>
    
    <item>
      <title>Set-PnPSiteGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsitegroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsitegroup/</guid>
      <description>SYNOPSIS Updates the SharePoint Online owner and permission levels on a group inside a site collection.
SYNTAX Set-PnPSiteGroup -Identity &amp;lt;String&amp;gt; [-Name &amp;lt;String&amp;gt;] [-Owner &amp;lt;String&amp;gt;] [-PermissionLevelsToAdd &amp;lt;String[]&amp;gt;] [-PermissionLevelsToRemove &amp;lt;String[]&amp;gt;] [-Site &amp;lt;PipeBind&amp;gt;] DESCRIPTION For permissions and the most current information about Windows PowerShell for SharePoint Online, see the online documentation at Intro to SharePoint Online Management Shell.
EXAMPLES EXAMPLE 1 Set-PnPSiteGroup -Site &amp;#34;https://contoso.sharepoint.com/sites/siteA&amp;#34; -Identity &amp;#34;ProjectViewers&amp;#34; -PermissionLevelsToRemove &amp;#34;Full Control&amp;#34; -PermissionLevelsToAdd &amp;#34;View Only&amp;#34; Example 1 changes permission level of the ProjectViewers group inside site collection https://contoso.</description>
    </item>
    
    <item>
      <title>Set-PnPSitePolicy</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsitepolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsitepolicy/</guid>
      <description>SYNOPSIS Sets a site policy
SYNTAX Set-PnPSitePolicy -Name &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSitePolicy -Name &amp;#34;Contoso HBI&amp;#34; This applies a site policy with the name &amp;ldquo;Contoso HBI&amp;rdquo; to the current site. The policy needs to be available in the site.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Set-PnPSiteScript</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpsitescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpsitescript/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Updates an existing Site Script on the current tenant.
SYNTAX Set-PnPSiteScript -Identity &amp;lt;TenantSiteScriptPipeBind&amp;gt; [-Title &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Content &amp;lt;String&amp;gt;] [-Version &amp;lt;Int32&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteScript -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f -Title &amp;#34;My Site Script&amp;#34; Updates an existing Site Script and changes the title.
EXAMPLE 2 $script = Get-PnPSiteScript -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f Set-PnPSiteScript -Identity $script -Title &amp;#34;My Site Script&amp;#34; Updates an existing Site Script and changes the title.</description>
    </item>
    
    <item>
      <title>Set-PnPSiteTemplateMetadata</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpprovisioningtemplatemetadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpprovisioningtemplatemetadata/</guid>
      <description>SYNOPSIS Sets metadata of a provisioning template
SYNTAX Set-PnPSiteTemplateMetadata [-Path] &amp;lt;String&amp;gt; [-TemplateDisplayName &amp;lt;String&amp;gt;] [-TemplateImagePreviewUrl &amp;lt;String&amp;gt;] [-TemplateProperties &amp;lt;Hashtable&amp;gt;] [-TemplateProviderExtensions &amp;lt;ITemplateProviderExtension[]&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateDisplayName &amp;#34;DisplayNameValue&amp;#34; Sets the DisplayName property of a site template in XML format.
EXAMPLE 2 Set-PnPSiteTemplateMetadata -Path template.pnp -TemplateDisplayName &amp;#34;DisplayNameValue&amp;#34; Sets the DisplayName property of a site template in Office Open XML format.
EXAMPLE 3 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateImagePreviewUrl &amp;#34;Full URL of the Image Preview&amp;#34; Sets the Url to the preview image of a site template in XML format.</description>
    </item>
    
    <item>
      <title>Set-PnPStorageEntity</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpstorageentity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpstorageentity/</guid>
      <description>SYNOPSIS Set Storage Entities / Farm Properties in either the tenant scoped app catalog or the site collection app catalog.
SYNTAX Set-PnPStorageEntity -Key &amp;lt;String&amp;gt; -Value &amp;lt;String&amp;gt; [-Comment &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Scope &amp;lt;StorageEntityScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPStorageEntity -Key MyKey -Value &amp;#34;MyValue&amp;#34; -Comment &amp;#34;My Comment&amp;#34; -Description &amp;#34;My Description&amp;#34; Sets an existing or adds a new storage entity / farm property at tenant level.
EXAMPLE 2 Set-PnPStorageEntity -Scope Site -Key MyKey -Value &amp;#34;MyValue&amp;#34; -Comment &amp;#34;My Comment&amp;#34; -Description &amp;#34;My Description&amp;#34; Sets an existing or adds a new storage entity site collection level.</description>
    </item>
    
    <item>
      <title>Set-PnPStructuralNavigationCacheSiteState</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpstructuralnavigationcachesitestate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpstructuralnavigationcachesitestate/</guid>
      <description>SYNOPSIS Enable or disable caching for all webs in a site collection.
SYNTAX Set-PnPStructuralNavigationCacheSiteState -IsEnabled &amp;lt;Boolean&amp;gt; [-SiteUrl &amp;lt;String&amp;gt;]DESCRIPTION The Set-PnPStructuralNavigationCacheSiteState cmdlet can be used to enable or disable caching for all webs in a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used. Learn more.
EXAMPLES Example 1 Set-PnPStructuralNavigationCacheSiteState -IsEnabled $true -SiteUrl &amp;#34;https://contoso.sharepoint.com/sites/product/&amp;#34; This example enables caching for all webs in the site collection https://contoso.</description>
    </item>
    
    <item>
      <title>Set-PnPStructuralNavigationCacheSiteState</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpstructuralnavigationcachewebstate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpstructuralnavigationcachewebstate/</guid>
      <description>Set-PnPStructuralNavigationCacheWebState SYNOPSIS Enable or disable caching for all webs in a site collection.
SYNTAX Set-PnPStructuralNavigationCacheWebState -IsEnabled &amp;lt;Boolean&amp;gt; [-WebUrl &amp;lt;String&amp;gt;]DESCRIPTION The Set-PnPStructuralNavigationCacheWebtate cmdlet can be used to enable or disable caching for a webs in a site collection. If the WebUrl parameter has not been specified the currently connected to site will be used. Learn more.
EXAMPLES Example 1 Set-PnPStructuralNavigationCacheWebState -IsEnabled $true -WebUrl &amp;#34;https://contoso.sharepoint.com/sites/product/electronics&amp;#34; This example enables caching for the web https://contoso.</description>
    </item>
    
    <item>
      <title>Set-PnPTaxonomyFieldValue</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptaxonomyfieldvalue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptaxonomyfieldvalue/</guid>
      <description>SYNOPSIS Sets a taxonomy term value in a listitem field
SYNTAX ITEM (Default) Set-PnPTaxonomyFieldValue -ListItem &amp;lt;ListItem&amp;gt; -InternalFieldName &amp;lt;String&amp;gt; -TermId &amp;lt;Guid&amp;gt; [-Label &amp;lt;String&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] PATH Set-PnPTaxonomyFieldValue -ListItem &amp;lt;ListItem&amp;gt; -InternalFieldName &amp;lt;String&amp;gt; -TermPath &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] ITEMS Set-PnPTaxonomyFieldValue -ListItem &amp;lt;ListItem&amp;gt; -InternalFieldName &amp;lt;String&amp;gt; [-Terms &amp;lt;Hashtable&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTaxonomyFieldValue -ListItem $item -InternalFieldName &amp;#39;Department&amp;#39; -TermId 863b832b-6818-4e6a-966d-2d3ee057931c Sets the field called &amp;lsquo;Department&amp;rsquo; to the value of the term with the ID specified</description>
    </item>
    
    <item>
      <title>Set-PnPTeamsChannel</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpteamschannel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpteamschannel/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Updates an existing Teams Channel
SYNTAX Set-PnPTeamsChannel -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Identity &amp;lt;TeamsChannelPipeBind&amp;gt; [-DisplayName &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsChannel -Team &amp;#34;MyTeam&amp;#34; -Channel &amp;#34;MyChannel&amp;#34; -DisplayName &amp;#34;My Channel&amp;#34; Updates the channel called &amp;lsquo;MyChannel&amp;rsquo; to have the display name set to &amp;lsquo;My Channel&amp;rsquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Set-PnPTeamsTab</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpteamstab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpteamstab/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Updates Teams Tab settings
SYNTAX Set-PnPTeamsTab -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Channel &amp;lt;TeamsChannelPipeBind&amp;gt; [-Identity &amp;lt;TeamsTabPipeBind&amp;gt;] [-DisplayName &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsTab -Team &amp;#34;MyTeam&amp;#34; -Channel &amp;#34;My Channel&amp;#34; -Identity &amp;#34;Wiki&amp;#34; -DisplayName &amp;#34;Channel Wiki&amp;#34; Updates the tab named &amp;lsquo;Wiki&amp;rsquo; and changes the display name of the tab to &amp;lsquo;Channel Wiki&amp;rsquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Set-PnPTeamsTeam</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpteamsteam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpteamsteam/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Updates an existing Team.
SYNTAX Set-PnPTeamsTeam -Identity &amp;lt;TeamsTeamPipeBind&amp;gt; [-DisplayName &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Visibility &amp;lt;TeamVisibility&amp;gt;] [-AllowAddRemoveApps &amp;lt;Boolean&amp;gt;] [-AllowChannelMentions &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateChannels &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateRemoveConnectors &amp;lt;Boolean&amp;gt;] [-AllowCreateUpdateRemoveTabs &amp;lt;Boolean&amp;gt;] [-AllowCustomMemes &amp;lt;Boolean&amp;gt;] [-AllowDeleteChannels &amp;lt;Boolean&amp;gt;] [-AllowGiphy &amp;lt;Boolean&amp;gt;] [-AllowGuestCreateUpdateChannels &amp;lt;Boolean&amp;gt;] [-AllowGuestDeleteChannels &amp;lt;Boolean&amp;gt;] [-AllowOwnerDeleteMessages &amp;lt;Boolean&amp;gt;] [-AllowStickersAndMemes &amp;lt;Boolean&amp;gt;] [-AllowTeamMentions &amp;lt;Boolean&amp;gt;] [-AllowUserDeleteMessages &amp;lt;Boolean&amp;gt;] [-AllowUserEditMessages &amp;lt;Boolean&amp;gt;] [-GiphyContentRating &amp;lt;TeamGiphyContentRating&amp;gt;] [-ShowInTeamsSearchAndSuggestions &amp;lt;Boolean&amp;gt;] [-Classification &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsChannel -Team &amp;#34;MyTeam&amp;#34; -DisplayName &amp;#34;My Team&amp;#34; Updates the team called &amp;lsquo;MyTeam&amp;rsquo; to have the display name set to &amp;lsquo;My Team&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Set-PnPTeamsTeamArchivedState</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpteamsteamarchivedstate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpteamsteamarchivedstate/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All  Sets the archived state of a team.
SYNTAX Set-PnPTeamsTeamArchivedState -Identity &amp;lt;TeamsTeamPipeBind&amp;gt; -Archived &amp;lt;Boolean&amp;gt; [-SetSiteReadOnlyForMembers &amp;lt;Boolean&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsTeamArchivedState -Identity &amp;#34;My Team&amp;#34; -Archived $true Archives the team as identified.
EXAMPLE 2 Set-PnPTeamsTeamArchivedState -Identity &amp;#34;My Team&amp;#34; -Archived $false Unarchives the team as identified.
EXAMPLE 3 Set-PnPTeamsTeamArchivedState -Identity &amp;#34;My Team&amp;#34; -Archived $true -SetSiteReadOnlyForMembers $true Archives the team as identified and sets the underlying SharePoint Online Site Collection as read only for members</description>
    </item>
    
    <item>
      <title>Set-PnPTeamsTeamPicture</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpteamsteampicture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpteamsteampicture/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Sets the picture of an existing team.
SYNTAX Set-PnPTeamsTeamPicture -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Path &amp;lt;String&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Notice that this cmdlet will immediately return but it can take a few hours before the changes are reflected in Microsoft Teams.
EXAMPLES EXAMPLE 1 Set-PnPTeamsTeamPicture -Team &amp;#34;MyTeam&amp;#34; -Path &amp;#34;c:\myimage.jpg&amp;#34; Updates the channel called &amp;lsquo;MyChannel&amp;rsquo; to have the display name set to &amp;lsquo;My Channel&amp;rsquo;
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Set-PnPTenant</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptenant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptenant/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets organization-level site collection properties
SYNTAX Set-PnPTenant [-SpecialCharactersStateInFileFolderNames &amp;lt;SpecialCharactersState&amp;gt;] [-MinCompatibilityLevel &amp;lt;Int32&amp;gt;] [-MaxCompatibilityLevel &amp;lt;Int32&amp;gt;] [-ExternalServicesEnabled &amp;lt;Boolean&amp;gt;] [-NoAccessRedirectUrl &amp;lt;String&amp;gt;] [-SharingCapability &amp;lt;SharingCapabilities&amp;gt;] [-DisplayStartASiteOption &amp;lt;Boolean&amp;gt;] [-StartASiteFormUrl &amp;lt;String&amp;gt;] [-ShowEveryoneClaim &amp;lt;Boolean&amp;gt;] [-ShowAllUsersClaim &amp;lt;Boolean&amp;gt;] [-ShowEveryoneExceptExternalUsersClaim &amp;lt;Boolean&amp;gt;] [-SearchResolveExactEmailOrUPN &amp;lt;Boolean&amp;gt;] [-OfficeClientADALDisabled &amp;lt;Boolean&amp;gt;] [-LegacyAuthProtocolsEnabled &amp;lt;Boolean&amp;gt;] [-RequireAcceptingAccountMatchInvitedAccount &amp;lt;Boolean&amp;gt;] [-ProvisionSharedWithEveryoneFolder &amp;lt;Boolean&amp;gt;] [-SignInAccelerationDomain &amp;lt;String&amp;gt;] [-EnableGuestSignInAcceleration &amp;lt;Boolean&amp;gt;] [-UsePersistentCookiesForExplorerView &amp;lt;Boolean&amp;gt;] [-BccExternalSharingInvitations &amp;lt;Boolean&amp;gt;] [-BccExternalSharingInvitationsList &amp;lt;String&amp;gt;] [-UserVoiceForFeedbackEnabled &amp;lt;Boolean&amp;gt;] [-PublicCdnEnabled &amp;lt;Boolean&amp;gt;] [-PublicCdnAllowedFileTypes &amp;lt;String&amp;gt;] [-RequireAnonymousLinksExpireInDays &amp;lt;Int32&amp;gt;] [-SharingAllowedDomainList &amp;lt;String&amp;gt;] [-SharingBlockedDomainList &amp;lt;String&amp;gt;] [-SharingDomainRestrictionMode &amp;lt;SharingDomainRestrictionModes&amp;gt;] [-OneDriveStorageQuota &amp;lt;Int64&amp;gt;] [-OneDriveForGuestsEnabled &amp;lt;Boolean&amp;gt;] [-IPAddressEnforcement &amp;lt;Boolean&amp;gt;] [-IPAddressAllowList &amp;lt;String&amp;gt;] [-IPAddressWACTokenLifetime &amp;lt;Int32&amp;gt;] [-UseFindPeopleInPeoplePicker &amp;lt;Boolean&amp;gt;] [-DefaultSharingLinkType &amp;lt;SharingLinkType&amp;gt;] [-ODBMembersCanShare &amp;lt;SharingState&amp;gt;] [-ODBAccessRequests &amp;lt;SharingState&amp;gt;] [-PreventExternalUsersFromResharing &amp;lt;Boolean&amp;gt;] [-ShowPeoplePickerSuggestionsForGuestUsers &amp;lt;Boolean&amp;gt;] [-FileAnonymousLinkType &amp;lt;AnonymousLinkType&amp;gt;] [-FolderAnonymousLinkType &amp;lt;AnonymousLinkType&amp;gt;] [-NotifyOwnersWhenItemsReshared &amp;lt;Boolean&amp;gt;] [-NotifyOwnersWhenInvitationsAccepted &amp;lt;Boolean&amp;gt;] [-NotificationsInOneDriveForBusinessEnabled &amp;lt;Boolean&amp;gt;] [-NotificationsInSharePointEnabled &amp;lt;Boolean&amp;gt;] [-OwnerAnonymousNotification &amp;lt;Boolean&amp;gt;] [-CommentsOnSitePagesDisabled &amp;lt;Boolean&amp;gt;] [-SocialBarOnSitePagesDisabled &amp;lt;Boolean&amp;gt;] [-OrphanedPersonalSitesRetentionPeriod &amp;lt;Int32&amp;gt;] [-DisallowInfectedFileDownload &amp;lt;Boolean&amp;gt;] [-DefaultLinkPermission &amp;lt;SharingPermissionType&amp;gt;] [-ConditionalAccessPolicy &amp;lt;SPOConditionalAccessPolicyType&amp;gt;] [-AllowDownloadingNonWebViewableFiles &amp;lt;Boolean&amp;gt;] [-AllowEditing &amp;lt;Boolean&amp;gt;] [-ApplyAppEnforcedRestrictionsToAdHocRecipients &amp;lt;Boolean&amp;gt;] [-FilePickerExternalImageSearchEnabled &amp;lt;Boolean&amp;gt;] [-EmailAttestationRequired &amp;lt;Boolean&amp;gt;] [-EmailAttestationReAuthDays &amp;lt;Int32&amp;gt;] [-HideDefaultThemes &amp;lt;Boolean&amp;gt;] [-DisabledWebPartIds &amp;lt;Guid[]&amp;gt;] [-EnableAIPIntegration &amp;lt;Boolean&amp;gt;] [-DisableCustomAppAuthentication &amp;lt;Boolean&amp;gt;] [-EnableAutoNewsDigest &amp;lt;Boolean&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets organization-level site collection properties such as StorageQuota, StorageQuotaAllocated, ResourceQuota, ResourceQuotaAllocated, and SiteCreationMode.</description>
    </item>
    
    <item>
      <title>Set-PnPTenantAppCatalogUrl</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptenantappcatalogurl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptenantappcatalogurl/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets the url of the tenant scoped app catalog
SYNTAX Set-PnPTenantAppCatalogUrl -Url &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTenantAppCatalogUrl -Url &amp;#34;https://yourtenant.sharepoint.com/sites/appcatalog&amp;#34; Sets the tenant scoped app catalog to the provided site collection url
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Set-PnPTenantCdnEnabled</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptenantcdnenabled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptenantcdnenabled/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Enables or disabled the public or private Office 365 Content Delivery Network (CDN).
SYNTAX Set-PnPTenantCdnEnabled [-NoDefaultOrigins] -Enable &amp;lt;Boolean&amp;gt; -CdnType &amp;lt;CdnType&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Enables or disabled the public or private Office 365 Content Delivery Network (CDN).
EXAMPLES EXAMPLE 1 Set-PnPTenantCdnEnabled -CdnType Public -Enable $true This example sets the Public CDN enabled.
PARAMETERS -CdnType The type of cdn to enable or disable</description>
    </item>
    
    <item>
      <title>Set-PnPTenantCdnPolicy</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptenantcdnpolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptenantcdnpolicy/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets the CDN Policies for the specified CDN (Public | Private).
SYNTAX Set-PnPTenantCdnPolicy -CdnType &amp;lt;SPOTenantCdnType&amp;gt; -PolicyType &amp;lt;SPOTenantCdnPolicyType&amp;gt; -PolicyValue &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets the CDN Policies for the specified CDN (Public | Private).
EXAMPLES EXAMPLE 1 Set-PnPTenantCdnPolicy -CdnType Public -PolicyType IncludeFileExtensions -PolicyValue &amp;#34;CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF&amp;#34; This example sets the IncludeFileExtensions policy to the specified value.
PARAMETERS -CdnType The type of cdn to retrieve the policies from</description>
    </item>
    
    <item>
      <title>Set-PnPTenantSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptenantsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptenantsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Updates settings of a site collection
SYNTAX Set Properties Set-PnPTenantSite [-Url] &amp;lt;String&amp;gt; [-Title &amp;lt;String&amp;gt;] [-LocaleId &amp;lt;UInt32&amp;gt;] [-AllowSelfServiceUpgrade] [-Owners &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt;] [-DenyAddAndCustomizePages] [-SharingCapability &amp;lt;SharingCapabilities&amp;gt;] [-StorageMaximumLevel &amp;lt;Int64&amp;gt;] [-StorageWarningLevel &amp;lt;Int64&amp;gt;] [-DefaultLinkPermission &amp;lt;SharingPermissionType&amp;gt;] [-DefaultSharingLinkType &amp;lt;SharingLinkType&amp;gt;] [-SharingAllowedDomainList &amp;lt;String&amp;gt;] [-SharingBlockedDomainList &amp;lt;String&amp;gt;] [-BlockDownloadOfNonViewableFiles] [-SharingDomainRestrictionMode &amp;lt;SharingDomainRestrictionModes&amp;gt;] [-CommentsOnSitePagesDisabled] [-DisableAppViews &amp;lt;AppViewsPolicy&amp;gt;] [-DisableCompanyWideSharingLinks &amp;lt;CompanyWideSharingLinksPolicy&amp;gt;] [-DisableFlows &amp;lt;FlowsPolicy&amp;gt;] [-AnonymousLinkExpirationInDays &amp;lt;Int32&amp;gt;] [-OverrideTenantAnonymousLinkExpirationPolicy] [-Wait] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Set Lock State Set-PnPTenantSite [-Url] &amp;lt;String&amp;gt; [-LockState &amp;lt;SiteLockState&amp;gt;] [-Wait] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Allows settings of a site collection to be updated</description>
    </item>
    
    <item>
      <title>Set-PnPTenantSyncClientRestriction</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptenantsyncclientrestriction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptenantsyncclientrestriction/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets organization-level sync client restriction properties
SYNTAX Set-PnPTenantSyncClientRestriction [-BlockMacSync] [-DisableReportProblemDialog] [-DomainGuids &amp;lt;System.Collections.Generic.List`1[System.Guid]&amp;gt;] [-Enable] [-ExcludedFileExtensions &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt;] [-GrooveBlockOption &amp;lt;GrooveBlockOption&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets organization-level sync client restriction properties such as BlockMacSync, OptOutOfGroveBlock, and DisableReportProblemDialog.
You must have the SharePoint Online admin or Global admin role to run the cmdlet.
EXAMPLES EXAMPLE 1 Set-PnPTenantSyncClientRestriction -BlockMacSync:$false This example blocks access to Mac sync clients for OneDrive file synchronization</description>
    </item>
    
    <item>
      <title>Set-PnPTerm</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpterm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpterm/</guid>
      <description>SYNOPSIS Updates a term
SYNTAX By Term Id Set-PnPTerm -Identity &amp;lt;Guid&amp;gt; [-Name &amp;lt;String&amp;gt;] [-Lcid &amp;lt;Int32&amp;gt;] [-Description &amp;lt;String&amp;gt;][-CustomProperties &amp;lt;Hashtable&amp;gt;] [-LocalCustomProperties &amp;lt;Hashtable&amp;gt;] [-DeleteAllCustomProperties][-DeleteAllLocalCustomProperties] [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;][&amp;lt;CommonParameters&amp;gt;]By Term Name Set-PnPTerm -Identity &amp;lt;String&amp;gt; [-Name &amp;lt;String&amp;gt;] [-Lcid &amp;lt;Int32&amp;gt;] [-Description &amp;lt;String&amp;gt;][-CustomProperties &amp;lt;Hashtable&amp;gt;] [-LocalCustomProperties &amp;lt;Hashtable&amp;gt;] [-DeleteAllCustomProperties][-DeleteAllLocalCustomProperties] -TermSet &amp;lt;TaxonomyTermSetPipeBind&amp;gt; -TermGroup &amp;lt;TaxonomyTermGroupPipeBind&amp;gt;[-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [&amp;lt;CommonParameters&amp;gt;]DESCRIPTION This cmdlet allows you to update an existing term.
EXAMPLES Example 1 Update-PnPTerm -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 -Name &amp;#34;New Name&amp;#34; Replaces the name of an existing term.</description>
    </item>
    
    <item>
      <title>Set-PnPTermGroup</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptermgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptermgroup/</guid>
      <description>SYNOPSIS Updates an existing term group
SYNTAX Set-PnPTermGroup -Identity &amp;lt;TaxonomyTermGroupPipeBind&amp;gt; [-Name &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;]DESCRIPTION The cmdles allows you to update an existing term group.
EXAMPLES Example 1 Set-PnPTermGroup -Identity &amp;#34;Departments&amp;#34; -Name &amp;#34;Company Units&amp;#34; Renames the Departments termgroup to &amp;ldquo;Company Units&amp;rdquo;
PARAMETERS -Description Optional description of the term group
Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The term group to update.</description>
    </item>
    
    <item>
      <title>Set-PnPTermSet</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptermset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptermset/</guid>
      <description>SYNOPSIS Updates an existing TermSet
SYNTAX Set-PnPTermSet -Identity &amp;lt;TaxonomyTermSetPipeBind&amp;gt; [-TermGroup] &amp;lt;TaxonomyTermGroupPipeBind&amp;gt;[-TermStore &amp;lt;TaxonomyTermStorePipeBind&amp;gt;] [-Name &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-Owner &amp;lt;String&amp;gt;][-Contact &amp;lt;String&amp;gt;] [-CustomProperties &amp;lt;Hashtable&amp;gt;] [-StakeholderToAdd &amp;lt;String&amp;gt;][-StakeholderToDelete &amp;lt;String&amp;gt;] [-IsAvailableForTagging &amp;lt;Boolean&amp;gt;] [-IsOpenForTermCreation &amp;lt;Boolean&amp;gt;][-UseForSiteNavigation &amp;lt;Boolean&amp;gt;] [-UseForFacetedNavigation &amp;lt;Boolean&amp;gt;] [-SetTargetPageForTerms &amp;lt;String&amp;gt;][-RemoveTargetPageforTerms] [-SetCatalogItemPageForCategories &amp;lt;String&amp;gt;] [-RemoveCatalogItemPageForCategories][&amp;lt;CommonParameters&amp;gt;]DESCRIPTION This cmdlet allows you to update an existing termset.
EXAMPLES Example 1 Set-PnPTermSet -Identity &amp;#34;Departments&amp;#34; -TermGroup &amp;#34;Corporate&amp;#34; -Name &amp;#34;Business Units&amp;#34; This changes the name of a the &amp;ldquo;Departments&amp;rdquo; termset to &amp;ldquo;Business Units&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Set-PnPTheme</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptheme/</guid>
      <description>SYNOPSIS Sets the theme of the current web.
SYNTAX Set-PnPTheme [-ColorPaletteUrl &amp;lt;String&amp;gt;] [-FontSchemeUrl &amp;lt;String&amp;gt;] [-BackgroundImageUrl &amp;lt;String&amp;gt;] [-ResetSubwebsToInherit] [-UpdateRootWebOnly] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets the theme of the current web, if any of the attributes is not set, that value will be set to null
EXAMPLES EXAMPLE 1 Set-PnPTheme Removes the current theme and resets it to the default.
EXAMPLE 2 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor EXAMPLE 3 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor -BackgroundImageUrl &amp;#39;style library/background.</description>
    </item>
    
    <item>
      <title>Set-PnPTraceLog</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnptracelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnptracelog/</guid>
      <description>SYNOPSIS Turn log tracing on or off
SYNTAX On Set-PnPTraceLog [-On] [-LogFile &amp;lt;String&amp;gt;] [-WriteToConsole] [-Level &amp;lt;LogLevel&amp;gt;] [-Delimiter &amp;lt;String&amp;gt;] [-IndentSize &amp;lt;Int32&amp;gt;] [-AutoFlush &amp;lt;Boolean&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Off Set-PnPTraceLog [-Off] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Defines if tracing should be turned on. PnP Core, which is the foundation of these cmdlets, uses the standard Trace functionality of .NET. With this cmdlet you can turn capturing of this trace to a log file on or off. Notice that basically only the Provisioning Engine writes to the tracelog which means that cmdlets related to the engine will produce output.</description>
    </item>
    
    <item>
      <title>Set-PnPUserOneDriveQuota</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpuseronedrivequota/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpuseronedrivequota/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Sets the quota on the OneDrive for Business site for a specific user
SYNTAX Set-PnPUserOneDriveQuota [-Account] &amp;lt;String&amp;gt; [-Quota] &amp;lt;Int64&amp;gt; [-QuotaWarning] &amp;lt;Int64&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows you to set the quota on the OneDrive for Business site of a specific user. You must connect to the tenant admin website (https://:-admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet.</description>
    </item>
    
    <item>
      <title>Set-PnPUserProfileProperty</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpuserprofileproperty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpuserprofileproperty/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Office365 only: Uses the tenant API to retrieve site information. You must connect to the tenant admin website (https://:-admin.sharepoint.com) with Connect-PnPOnline in order to use this command.
SYNTAX Single Set-PnPUserProfileProperty -Account &amp;lt;String&amp;gt; -PropertyName &amp;lt;String&amp;gt; -Value &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] Multi Set-PnPUserProfileProperty -Account &amp;lt;String&amp;gt; -PropertyName &amp;lt;String&amp;gt; -Values &amp;lt;String[]&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Requires a connection to a SharePoint Tenant Admin site.</description>
    </item>
    
    <item>
      <title>Set-PnPView</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpview/</guid>
      <description>SYNOPSIS Change view properties
SYNTAX Set-PnPView [[-List] &amp;lt;ListPipeBind&amp;gt;] -Identity &amp;lt;ViewPipeBind&amp;gt; [-Values &amp;lt;Hashtable&amp;gt;] [-Fields &amp;lt;String[]&amp;gt;] [-Aggregations &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets one or more properties of an existing view, see here https://docs.microsoft.com/previous-versions/office/sharepoint-server/ee543328(v=office.15) for the list of view properties.
EXAMPLES EXAMPLE 1 Set-PnPView -List &amp;#34;Tasks&amp;#34; -Identity &amp;#34;All Tasks&amp;#34; -Values @{JSLink=&amp;#34;hierarchytaskslist.js|customrendering.js&amp;#34;;Title=&amp;#34;My view&amp;#34;} Updates the &amp;ldquo;All Tasks&amp;rdquo; view on list &amp;ldquo;Tasks&amp;rdquo; to use hierarchytaskslist.js and customrendering.js for the JSLink and changes the title of the view to &amp;ldquo;My view&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Set-PnPWeb</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpweb/</guid>
      <description>SYNOPSIS Sets properties on a web
SYNTAX Set-PnPWeb [-SiteLogoUrl &amp;lt;String&amp;gt;] [-AlternateCssUrl &amp;lt;String&amp;gt;] [-Title &amp;lt;String&amp;gt;] [-Description &amp;lt;String&amp;gt;] [-MasterUrl &amp;lt;String&amp;gt;] [-CustomMasterUrl &amp;lt;String&amp;gt;] [-QuickLaunchEnabled] [-MembersCanShare] [-NoCrawl] [-HeaderLayout &amp;lt;HeaderLayoutType&amp;gt;] [-HeaderEmphasis &amp;lt;SPVariantThemeType&amp;gt;] [-NavAudienceTargetingEnabled] [-MegaMenuEnabled] [-DisablePowerAutomate] [-CommentsOnSitePagesDisabled] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Allows setting various properties on a web
EXAMPLES EXAMPLE 1 Set-PnPWeb -CommentsOnSitePagesDisabled:$true Disables the page comments to be shown below each page in the current web by default
EXAMPLE 2 Set-PnPWeb -QuickLaunchEnabled:$false Hides the quick launch from being shown in the current web</description>
    </item>
    
    <item>
      <title>Set-PnPWebhookSubscription</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpwebhooksubscription/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpwebhooksubscription/</guid>
      <description>SYNOPSIS Updates a Webhook subscription
SYNTAX Set-PnPWebhookSubscription [-Subscription] &amp;lt;WebhookSubscriptionPipeBind&amp;gt; [-List &amp;lt;ListPipeBind&amp;gt;] [-NotificationUrl &amp;lt;String&amp;gt;] [-ExpirationDate &amp;lt;DateTime&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPWebhookSubscription -List MyList -Subscription ea1533a8-ff03-415b-a7b6-517ee50db8b6 -NotificationUrl https://my-func.azurewebsites.net/webhook Updates an existing Webhook subscription with the specified id on the list MyList with a new Notification Url
EXAMPLE 2 Set-PnPWebhookSubscription -List MyList -Subscription ea1533a8-ff03-415b-a7b6-517ee50db8b6 -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate &amp;#34;2017-09-01&amp;#34; Updates an existing Webhook subscription with the specified id on the list MyList with a new Notification Url and a new expiration date</description>
    </item>
    
    <item>
      <title>Set-PnPWebPartProperty</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpwebpartproperty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpwebpartproperty/</guid>
      <description>SYNOPSIS Sets a web part property
SYNTAX Set-PnPWebPartProperty -ServerRelativePageUrl &amp;lt;String&amp;gt; -Identity &amp;lt;Guid&amp;gt; -Key &amp;lt;String&amp;gt; -Value &amp;lt;PSObject&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 -Key &amp;#34;Title&amp;#34; -Value &amp;#34;New Title&amp;#34; Sets the title property of the web part.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the web part</description>
    </item>
    
    <item>
      <title>Set-PnPWebPermission</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpwebpermission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpwebpermission/</guid>
      <description>Set-PnPWebPartProperty SYNOPSIS Sets a web part property
SYNTAX Set-PnPWebPartProperty -ServerRelativePageUrl &amp;lt;String&amp;gt; -Identity &amp;lt;Guid&amp;gt; -Key &amp;lt;String&amp;gt; -Value &amp;lt;PSObject&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 -Key &amp;#34;Title&amp;#34; -Value &amp;#34;New Title&amp;#34; Sets the title property of the web part.
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Set-PnPWebTheme</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpwebtheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpwebtheme/</guid>
      <description>SYNOPSIS Sets the theme of the current web.
SYNTAX Set-PnPWebTheme [[-Theme] &amp;lt;ThemePipeBind&amp;gt;] [-WebUrl &amp;lt;String&amp;gt;] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Sets the theme of the current web. * Requires Tenant Administration Rights *
EXAMPLES EXAMPLE 1 Set-PnPWebTheme -Theme MyTheme Sets the theme named &amp;ldquo;MyTheme&amp;rdquo; to the current web
EXAMPLE 2 Get-PnPTenantTheme -Name &amp;#34;MyTheme&amp;#34; | Set-PnPWebTheme Sets the theme named &amp;ldquo;MyTheme&amp;rdquo; to the current web
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Set-PnPWikiPageContent</title>
      <link>https://pnp.github.io/powershell/cmdlets/set-pnpwikipagecontent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/set-pnpwikipagecontent/</guid>
      <description>SYNOPSIS Sets the contents of a wikipage
SYNTAX STRING Set-PnPWikiPageContent -Content &amp;lt;String&amp;gt; -ServerRelativePageUrl &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] FILE Set-PnPWikiPageContent -Path &amp;lt;String&amp;gt; -ServerRelativePageUrl &amp;lt;String&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content Type: String Parameter Sets: STRING Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Type: String Parameter Sets: FILE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Site Relative Page Url</description>
    </item>
    
    <item>
      <title>Submit-PnPSearchQuery</title>
      <link>https://pnp.github.io/powershell/cmdlets/submit-pnpsearchquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/submit-pnpsearchquery/</guid>
      <description>SYNOPSIS Executes an arbitrary search query against the SharePoint search index
SYNTAX Limit (Default) Submit-PnPSearchQuery [-Query] &amp;lt;String&amp;gt; [-StartRow &amp;lt;Int32&amp;gt;] [-MaxResults &amp;lt;Int32&amp;gt;] [-TrimDuplicates &amp;lt;Boolean&amp;gt;] [-Properties &amp;lt;Hashtable&amp;gt;] [-Refiners &amp;lt;String&amp;gt;] [-Culture &amp;lt;Int32&amp;gt;] [-QueryTemplate &amp;lt;String&amp;gt;] [-SelectProperties &amp;lt;String[]&amp;gt;] [-RefinementFilters &amp;lt;String[]&amp;gt;] [-SortList &amp;lt;Hashtable&amp;gt;] [-RankingModelId &amp;lt;String&amp;gt;] [-ClientType &amp;lt;String&amp;gt;] [-CollapseSpecification &amp;lt;String&amp;gt;] [-HiddenConstraints &amp;lt;String&amp;gt;] [-TimeZoneId &amp;lt;Int32&amp;gt;] [-EnablePhonetic &amp;lt;Boolean&amp;gt;] [-EnableStemming &amp;lt;Boolean&amp;gt;] [-EnableQueryRules &amp;lt;Boolean&amp;gt;] [-SourceId &amp;lt;Guid&amp;gt;] [-ProcessBestBets &amp;lt;Boolean&amp;gt;] [-ProcessPersonalFavorites &amp;lt;Boolean&amp;gt;] [-RelevantResults] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] All Submit-PnPSearchQuery [-Query] &amp;lt;String&amp;gt; [-All] [-TrimDuplicates &amp;lt;Boolean&amp;gt;] [-Properties &amp;lt;Hashtable&amp;gt;] [-Refiners &amp;lt;String&amp;gt;] [-Culture &amp;lt;Int32&amp;gt;] [-QueryTemplate &amp;lt;String&amp;gt;] [-SelectProperties &amp;lt;String[]&amp;gt;] [-RefinementFilters &amp;lt;String[]&amp;gt;] [-SortList &amp;lt;Hashtable&amp;gt;] [-RankingModelId &amp;lt;String&amp;gt;] [-ClientType &amp;lt;String&amp;gt;] [-CollapseSpecification &amp;lt;String&amp;gt;] [-HiddenConstraints &amp;lt;String&amp;gt;] [-TimeZoneId &amp;lt;Int32&amp;gt;] [-EnablePhonetic &amp;lt;Boolean&amp;gt;] [-EnableStemming &amp;lt;Boolean&amp;gt;] [-EnableQueryRules &amp;lt;Boolean&amp;gt;] [-SourceId &amp;lt;Guid&amp;gt;] [-ProcessBestBets &amp;lt;Boolean&amp;gt;] [-ProcessPersonalFavorites &amp;lt;Boolean&amp;gt;] [-RelevantResults] [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Submit-PnPSearchQuery -Query &amp;#34;finance&amp;#34; Returns the top 500 items with the term finance</description>
    </item>
    
    <item>
      <title>Submit-PnPTeamsChannelMessage</title>
      <link>https://pnp.github.io/powershell/cmdlets/submit-pnpteamschannelmessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/submit-pnpteamschannelmessage/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Sends a message to a Microsoft Teams Channel.
SYNTAX Submit-PnPTeamsChannelMessage -Team &amp;lt;TeamsTeamPipeBind&amp;gt; -Channel &amp;lt;TeamsChannelPipeBind&amp;gt; -Message &amp;lt;String&amp;gt; [-ContentType &amp;lt;TeamChannelMessageContentType&amp;gt;] [-Important] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Submit-PnPTeamsChannelMessage -Team MyTestTeam -Channel &amp;#34;My Channel&amp;#34; -Message &amp;#34;A new message&amp;#34; Sends &amp;ldquo;A new message&amp;rdquo; to the specified channel
EXAMPLE 2 Submit-PnPTeamsChannelMessage -Team MyTestTeam -Channel &amp;#34;My Channel&amp;#34; -Message &amp;#34;&amp;lt;strong&amp;gt;A bold new message&amp;lt;/strong&amp;gt;&amp;#34; -ContentType Html Sends the message, formatted as html to the specified channel</description>
    </item>
    
    <item>
      <title>Sync-PnPAppToTeams</title>
      <link>https://pnp.github.io/powershell/cmdlets/sync-pnpapptoteams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/sync-pnpapptoteams/</guid>
      <description>SYNOPSIS Synchronize an app from the tenant app catalog to the Microsoft Teams app catalog
SYNTAX Sync-PnPAppToTeams [-Identity] &amp;lt;AppMetadataPipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Sync-PnPAppToTeams -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will synchronize the given app with the Microsoft Teams app catalog
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.
Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Addin Instance</description>
    </item>
    
    <item>
      <title>Test-PnPListItemIsRecord</title>
      <link>https://pnp.github.io/powershell/cmdlets/test-pnplistitemisrecord/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/test-pnplistitemisrecord/</guid>
      <description>SYNOPSIS Checks if a list item is a record
SYNTAX Test-PnPListItemIsRecord [-List] &amp;lt;ListPipeBind&amp;gt; -Identity &amp;lt;ListItemPipeBind&amp;gt; [-Web &amp;lt;WebPipeBind&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Test-PnPListItemIsRecord -List &amp;#34;Documents&amp;#34; -Identity 4 Returns true if the document in the documents library with id 4 is a record
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Test-PnPOffice365GroupAliasIsUsed</title>
      <link>https://pnp.github.io/powershell/cmdlets/test-pnpoffice365groupaliasisused/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/test-pnpoffice365groupaliasisused/</guid>
      <description>SYNOPSIS Tests if a given alias is already used used
SYNTAX Test-PnPOffice365GroupAliasIsUsed -Alias &amp;lt;String&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION This command allows you to test if a provided alias is used or free, helps decide if it can be used as part of connecting an Office 365 Unified group to an existing classic site collection.
EXAMPLES EXAMPLE 1 Test-PnPOffice365GroupAliasIsUsed -Alias &amp;#34;MyGroup&amp;#34; This will test if the alias MyGroup is already used</description>
    </item>
    
    <item>
      <title>Test-PnPSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/test-pnpsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/test-pnpsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Checks the site collection and its contents.
SYNTAX Test-PnPSite -Identity &amp;lt;SitePipeBind&amp;gt; [-RuleId &amp;lt;Guid&amp;gt;] DESCRIPTION The Test-PnPOSite cmdlet runs one or all site collection health checks on the site collection and its contents. Tests are intended not to make any changes except in repair mode, which can be initiated by running the Repair-PnPSite cmdlet. This cmdlet reports the rules together with a summary of the results.</description>
    </item>
    
    <item>
      <title>Test-PnPTenantTemplate</title>
      <link>https://pnp.github.io/powershell/cmdlets/test-pnptenanttemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/test-pnptenanttemplate/</guid>
      <description>SYNOPSIS Tests a tenant template for invalid references
SYNTAX Test-PnPTenantTemplate -Template &amp;lt;ProvisioningHierarchy&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Test-PnPTenantTemplate -Template $myTemplate Checks for valid template references
PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet.
Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Uninstall-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/uninstall-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/uninstall-pnpapp/</guid>
      <description>SYNOPSIS Uninstalls an available add-in from the site
SYNTAX Uninstall-PnPApp [-Identity] &amp;lt;AppMetadataPipeBind&amp;gt; [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Uninstall-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will uninstall the specified app from the current site.
EXAMPLE 2 Uninstall-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will uninstall the specified app from the current site. Notice that the app was original installed from the site collection appcatalog.
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Unpublish-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/unpublish-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/unpublish-pnpapp/</guid>
      <description>SYNOPSIS Unpublishes/retracts an available add-in from the app catalog
SYNTAX Unpublish-PnPApp [-Identity] &amp;lt;AppMetadataPipeBind&amp;gt; [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Unpublish-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will retract, but not remove, the specified app from the tenant app catalog
EXAMPLE 2 Unpublish-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will retract, but not remove, the specified app from the site collection app catalog
PARAMETERS -Connection Optional connection to be used by the cmdlet.</description>
    </item>
    
    <item>
      <title>Unregister-PnPHubSite</title>
      <link>https://pnp.github.io/powershell/cmdlets/unregister-pnphubsite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/unregister-pnphubsite/</guid>
      <description>SYNOPSIS Required Permissions
 SharePoint: Access to the SharePoint Tenant Administration site  Unregisters a site as a hubsite
SYNTAX Unregister-PnPHubSite -Site &amp;lt;SitePipeBind&amp;gt; [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION Registers a site as a hubsite
EXAMPLES EXAMPLE 1 Unregister-PnPHubSite -Site &amp;#34;https://tenant.sharepoint.com/sites/myhubsite&amp;#34; This example unregisters the specified site as a hubsite
PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.</description>
    </item>
    
    <item>
      <title>Update-PnPApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/update-pnpapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/update-pnpapp/</guid>
      <description>SYNOPSIS Updates an available app from the app catalog
SYNTAX Update-PnPApp [-Identity] &amp;lt;AppMetadataPipeBind&amp;gt; [-Scope &amp;lt;AppCatalogScope&amp;gt;] [-Connection &amp;lt;PnPConnection&amp;gt;] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Update-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will update an already installed app if a new version is available in the tenant app catalog. Retrieve a list all available apps and the installed and available versions with Get-PnPApp
EXAMPLE 2 Update-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will update an already installed app if a new version is available in the site collection app catalog.</description>
    </item>
    
    <item>
      <title>Update-PnPSiteClassification</title>
      <link>https://pnp.github.io/powershell/cmdlets/update-pnpsiteclassification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/update-pnpsiteclassification/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Directory.ReadWrite.All  Updates Site Classifications for the tenant
SYNTAX Settings Update-PnPSiteClassification -Settings &amp;lt;SiteClassificationsSettings&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] Specific Update-PnPSiteClassification [-Classifications &amp;lt;System.Collections.Generic.List`1[System.String]&amp;gt;] [-DefaultClassification &amp;lt;String&amp;gt;] [-UsageGuidelinesUrl &amp;lt;String&amp;gt;] [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Update-PnPSiteClassification -Classifications &amp;#34;HBI&amp;#34;,&amp;#34;Top Secret&amp;#34; Replaces the existing values of the site classification settings
EXAMPLE 2 Update-PnPSiteClassification -DefaultClassification &amp;#34;LBI&amp;#34; Sets the default classification value to &amp;ldquo;LBI&amp;rdquo;. This value needs to be present in the list of classification values.</description>
    </item>
    
    <item>
      <title>Update-PnPTeamsApp</title>
      <link>https://pnp.github.io/powershell/cmdlets/update-pnpteamsapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/update-pnpteamsapp/</guid>
      <description>SYNOPSIS Required Permissions
 Microsoft Graph API: Group.ReadWrite.All  Updates an existing app in the Teams App Catalog.
SYNTAX Update-PnPTeamsApp -Identity &amp;lt;TeamsAppPipeBind&amp;gt; -Path &amp;lt;String&amp;gt; [-ByPassPermissionCheck] [&amp;lt;CommonParameters&amp;gt;] DESCRIPTION EXAMPLES EXAMPLE 1 Update-PnPTeamsApp -Identity 4efdf392-8225-4763-9e7f-4edeb7f721aa -Path c:\myapp.zip Updates the specified app in the teams app catalog with the contents of the referenced zip file.
PARAMETERS -ByPassPermissionCheck Allows the check for required permissions in the access token to be bypassed when set to $true</description>
    </item>
    
    <item>
      <title>Update-PnPUserType</title>
      <link>https://pnp.github.io/powershell/cmdlets/update-pnpusertype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pnp.github.io/powershell/cmdlets/update-pnpusertype/</guid>
      <description>SYNOPSIS Updates an available app from the app catalog
SYNTAX Update-PnPUserType -LoginName &amp;lt;String&amp;gt; DESCRIPTION This cmdlet retrieves the UserType value of the specified user and updates the UserType across all SharePoint Online sites in the SharePoint Online tenant. This can be used, for example, to convert a Guest user to a standard (Member) user if the user&amp;rsquo;s UserType was previously updated in Azure AD.
EXAMPLES EXAMPLE 1 Update-PnPUserType -LoginName jdoe@contoso.com Updates the jdoe@contoso.</description>
    </item>
    
  </channel>
</rss>